var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.104,1,2.705]],["body/classes/ApiValidationError.html",[0,0.129,1,4.225,2,1.134,3,0.27,4,0.222,5,0.161,6,6.023,7,4.796,8,2.158,9,5.517,10,0.519,11,1.273,12,4.037,13,2.578,14,3.674,15,2.819,16,0.603,17,1.774,18,6.585,19,1.821,20,5.462,21,6.275,22,1.005,23,5.462,24,1.165,25,0.011,26,0.904,27,0.904,28,6.585,29,2.187,30,3.715,31,5.462,32,1.205,33,5.462,34,5.462,35,5.462,36,5.462,37,1.374,38,3.056,39,0.444,40,4.358,41,1.266,42,5.462,43,0.254,44,4.796,45,2.418,46,4.358,47,3.145,48,3.525,49,2.259,50,4.03,51,3.768,52,2.925,53,3.364,54,5.462,55,0.007,56,0.008,57,0.007]],["title/classes/ApiValidationErrorResponse.html",[0,0.104,58,3.505]],["body/classes/ApiValidationErrorResponse.html",[0,0.129,1,5.091,2,1.132,3,0.269,4,0.222,5,0.161,8,2.155,10,0.518,11,1.271,13,2.575,14,3.67,15,2.575,16,0.533,19,1.817,22,0.833,24,1.163,25,0.011,26,0.902,27,0.902,28,6.579,38,4.192,39,0.485,43,0.253,47,3.142,48,4.311,49,2.255,51,3.762,55,0.007,56,0.008,57,0.007,58,5.466,59,6.579,60,4.788,61,1.872,62,4.22,63,4.015,64,4.454,65,3.883,66,6.852,67,5.453,68,5.528,69,5.453,70,4.023,71,5.453,72,5.453,73,1.992,74,5.453,75,5.453,76,5.453,77,6.852,78,6.852,79,5.453,80,1.462,81,1.383,82,6.852,83,5.453]],["title/modules/AuthModule.html",[84,1.201,85,3.031]],["body/modules/AuthModule.html",[0,0.139,3,0.29,4,0.238,5,0.173,25,0.011,39,0.551,41,1.359,43,0.272,55,0.007,56,0.009,57,0.007,84,2.116,85,5.806,86,2.205,87,2.596,88,3.282,89,3.282,90,3.014,91,3.203,92,3.287,93,5.151,94,5.151,95,5.806,96,4.011,97,3.142,98,2.596,99,5.866,100,7.17,101,4.328,102,5.866,103,5.151,104,5.866,105,3.813,106,4.68,107,7.17,108,5.866,109,5.866,110,5.866,111,3.014,112,5.866,113,2.898]],["title/modules/AuthorizationModule.html",[84,1.201,114,2.855]],["body/modules/AuthorizationModule.html",[0,0.138,3,0.288,4,0.237,5,0.172,25,0.011,39,0.521,41,1.352,43,0.271,55,0.007,56,0.009,57,0.007,84,2.111,86,2.192,87,2.582,88,3.263,89,3.263,90,2.997,91,3.195,92,3.541,96,3.997,97,3.124,98,2.582,111,3.671,114,5.691,115,5.122,116,5.122,117,5.122,118,5.122,119,5.463,120,5.152,121,4.925,122,5.833,123,5.833,124,5.833,125,2.774,126,5.122]],["title/injectables/AuthorizationService.html",[120,2.574,127,1.201]],["body/injectables/AuthorizationService.html",[0,0.095,3,0.198,4,0.163,5,0.118,10,0.381,16,0.495,17,1.446,19,1.337,22,0.846,24,1.485,25,0.011,26,1.151,27,1.151,32,1.217,37,1.841,39,0.45,41,0.929,43,0.186,55,0.005,56,0.007,57,0.005,73,1.85,80,1.192,81,0.809,120,3.275,121,4.44,125,1.907,126,3.521,127,1.528,128,1.839,129,3.521,130,3.124,131,5.649,132,5.649,133,6.433,134,4.01,135,4.01,136,4.01,137,3.204,138,3.428,139,3.741,140,4.415,141,3.861,142,4.01,143,2.993,144,2.566,145,5.589,146,3.354,147,1.487,148,4.314,149,3.034,150,3.633,151,4.01,152,4.01,153,5.134,154,3.521,155,4.01,156,3.727,157,4.124,158,4.908,159,3.442,160,4.908,161,1.226,162,1.839,163,2.767,164,2.148,165,4.564,166,3.633,167,3.129,168,4.01,169,4.01,170,3.199,171,4.01,172,4.01,173,4.01,174,5.589,175,4.01,176,4.01,177,2.35,178,4.01,179,5.589,180,4.01,181,4.01]],["title/classes/BaseEntity.html",[0,0.104,182,1.704]],["body/classes/BaseEntity.html",[0,0.178,2,1.148,3,0.273,4,0.225,5,0.163,8,1.74,10,0.525,11,1.399,13,2.079,16,0.491,22,0.84,25,0.011,32,1.212,39,0.447,43,0.321,55,0.007,56,0.008,57,0.007,81,1.522,147,1.551,182,3.064,183,4.412,184,3.268,185,1.831,186,3.268,187,2.005,188,3.622,189,5.531,190,3.622,191,5.531,192,2.925,193,2.175,194,2.079,195,3.241,196,4.412,197,4.08,198,3.288,199,4.412,200,4.412,201,4.856,202,3.406,203,2.63,204,4.856,205,2.448,206,4.412,207,3.241,208,2.214,209,2.962,210,2.016,211,4.856,212,4.412,213,4.856,214,3.816,215,3.595,216,4.08,217,4.412,218,2.732,219,2.667,220,4.856,221,2.732]],["title/classes/BaseEntityWithTimestamps.html",[0,0.104,198,2.089]],["body/classes/BaseEntityWithTimestamps.html",[0,0.171,2,1.052,3,0.25,4,0.206,5,0.149,8,2.057,10,0.481,11,1.344,13,1.905,16,0.544,22,0.986,25,0.011,30,2.999,32,1.229,39,0.423,43,0.304,55,0.006,56,0.008,57,0.006,81,1.599,147,1.502,182,3.145,183,4.043,184,3.355,185,1.879,186,3.276,187,2.194,188,3.632,190,3.632,192,2.967,193,2.057,194,1.905,195,2.97,196,4.043,197,3.739,198,3.444,199,4.043,200,4.043,201,4.451,202,3.121,203,2.41,204,4.451,205,2.243,206,4.043,207,2.97,208,2.029,209,2.714,210,1.847,211,4.451,212,4.043,213,4.451,214,3.497,215,3.295,216,3.739,217,4.043,218,3.577,219,2.801,220,4.451,221,3.577,222,5.069,223,1.788,224,2.313,225,5.069,226,5.069,227,2.835,228,2.41,229,5.069,230,2.41,231,2.41]],["title/classes/BusinessError.html",[0,0.104,9,2.855]],["body/classes/BusinessError.html",[0,0.17,2,1.037,3,0.247,4,0.203,5,0.147,8,2.038,9,4.211,10,0.474,11,1.202,12,4.095,13,3.167,14,4.075,15,3.037,16,0.608,17,1.676,18,6.681,19,2.159,22,0.982,24,1.066,25,0.011,26,0.826,27,0.826,29,2.594,32,1.298,37,1.257,38,4.023,39,0.465,40,6.07,41,1.157,43,0.232,45,2.211,50,5.305,55,0.006,56,0.008,57,0.006,61,1.715,65,3.758,80,1.066,81,1.008,232,4.386,233,4.023,234,4.47,235,3.47,236,4.47,237,3.624,238,3.796,239,4.211,240,2.867,241,5.737,242,4.995,243,5.249,244,6.479,245,4.995,246,4.995,247,4.995,248,4.995,249,4.995,250,4.995,251,4.386,252,6.479,253,4.995,254,4.211,255,6.479,256,4.995]],["title/modules/CoreModule.html",[84,1.201,257,3.031]],["body/modules/CoreModule.html",[0,0.128,3,0.268,4,0.221,5,0.16,25,0.011,39,0.523,41,1.259,43,0.252,49,2.828,55,0.007,56,0.008,57,0.007,61,1.865,84,2.211,86,2.042,87,2.405,88,3.04,89,3.04,90,2.792,91,2.247,92,2.491,96,3.825,97,2.91,98,2.405,111,3.513,240,3.026,257,6.01,258,4.771,259,4.771,260,5.698,261,5.698,262,4.839,263,5.698,264,5.434,265,4.444,266,6.837,267,4.21,268,5.454,269,5.454,270,6.837,271,4.444,272,5.044,273,4.444,274,6.837,275,3.825,276,4.717,277,6.003,278,6.837,279,5.044,280,5.434,281,5.434,282,5.434,283,5.434]],["title/classes/Course.html",[0,0.104,284,1.759]],["body/classes/Course.html",[0,0.116,2,1.018,3,0.242,4,0.199,5,0.145,8,2.015,10,0.466,11,1.188,16,0.597,19,1.636,22,1.03,24,1.047,25,0.011,26,1.25,27,0.812,30,3.687,32,1.292,39,0.461,43,0.228,45,2.172,55,0.006,56,0.008,57,0.006,81,1.525,147,1.257,161,1.5,163,3.386,182,2.484,184,3.126,185,1.751,186,2.649,187,2.233,188,2.937,190,2.937,192,3.118,193,1.544,194,1.845,198,3.895,218,3.164,219,2.265,221,3.164,223,1.949,224,2.521,227,2.746,228,2.334,230,2.334,231,2.334,284,2.564,285,4.309,286,7.13,287,5.26,288,6.405,289,5.096,290,4.908,291,4.908,292,4.908,293,6.405,294,4.908,295,6.405,296,3.522,297,4.908,298,2.876,299,2.876,300,2.876,301,2.876,302,2.876,303,6.405,304,2.876,305,3.022,306,3.19,307,2.746]],["title/classes/CourseInfo.html",[0,0.104,308,2.458]],["body/classes/CourseInfo.html",[0,0.135,2,1.186,3,0.282,4,0.232,5,0.168,8,2.219,10,0.543,11,1.309,16,0.595,19,1.905,22,0.971,24,1.219,25,0.011,26,1.358,27,0.945,30,3.235,32,1.284,39,0.456,43,0.265,45,2.529,55,0.007,56,0.009,57,0.007,147,1.385,161,1.747,182,3.184,184,2.918,185,1.635,186,2.364,187,2.035,188,2.62,190,2.62,192,2.968,193,1.798,194,2.148,230,2.718,231,2.718,304,3.349,305,3.519,308,3.947,309,6.72,310,3.942,311,3.947,312,4.345,313,5.205,314,2.936,315,4.559,316,4.559]],["title/classes/CourseNews.html",[0,0.104,317,2.458]],["body/classes/CourseNews.html",[0,0.137,2,0.573,3,0.136,4,0.255,5,0.081,8,1.976,10,0.262,11,0.788,15,2.493,16,0.592,17,1.099,22,1.028,24,0.589,25,0.011,26,0.857,27,1.21,30,3.865,32,1.311,37,0.695,39,0.447,43,0.292,45,1.222,55,0.003,56,0.005,57,0.003,80,0.589,81,1.395,137,2.36,138,2.766,139,3.041,141,2.293,144,0.869,147,1.233,161,0.844,162,1.266,166,1.795,182,2.435,184,2.95,185,1.731,186,2.406,187,2.233,188,2.667,190,2.667,192,3.142,193,0.869,194,1.038,198,3.154,205,2.293,210,1.888,218,2.873,219,2.443,221,2.873,223,1.717,224,2.221,227,2.377,228,2.021,230,1.313,231,1.313,233,2.377,254,1.795,284,1.105,296,3.102,298,1.618,299,1.618,300,1.618,301,1.618,302,3.409,306,1.795,307,2.898,308,2.898,311,1.545,314,2.662,317,2.377,318,1.795,319,2.903,320,3.088,321,2.836,322,3.227,323,2.766,324,4.013,325,2.493,326,3.781,327,3.582,328,2.375,329,3.135,330,4.378,331,2.761,332,2.203,333,2.762,334,3.19,335,2.762,336,2.203,337,2.203,338,2.931,339,3.781,340,2.931,341,2.762,342,2.099,343,2.617,344,2.931,345,2.203,346,2.203,347,3.115,348,2.021,349,2.203,350,2.774,351,3.035,352,2.203,353,2.203,354,2.203,355,2.617,356,2.203,357,2.617,358,2.203,359,2.931,360,2.203,361,2.203,362,2.203,363,2.203,364,2.203,365,2.203,366,2.203,367,2.931,368,3.868,369,2.203,370,3.781,371,1.905,372,2.377,373,1.479,374,0.542,375,1.905,376,1.364,377,1.905,378,1.905,379,1.905,380,1.905,381,1.905,382,1.905,383,1.905,384,1.905,385,2.931,386,2.293,387,2.375,388,2.293,389,2.293,390,2.293,391,3.035,392,2.662,393,1.905,394,2.931,395,1.905,396,1.905,397,3.573,398,1.618,399,1.618]],["title/classes/CreateNewsParams.html",[0,0.104,400,2.855]],["body/classes/CreateNewsParams.html",[0,0.151,2,1.01,3,0.24,4,0.198,5,0.144,10,0.462,11,1.182,15,2.939,16,0.556,22,0.95,25,0.011,32,1.332,39,0.459,43,0.226,55,0.006,56,0.008,57,0.006,61,2.846,73,1.295,138,2.844,140,3.804,146,2.82,147,1.673,162,3.257,185,1.476,187,2.079,219,2.253,319,2.859,320,3.017,321,3.345,323,3.378,400,4.142,401,6.401,402,3.592,403,3.03,404,4.701,405,3.565,406,6.372,407,4.275,408,4.869,409,5.083,410,3.734,411,5.083,412,4.701,413,4.869,414,4.869,415,4.396,416,4.396,417,4.64,418,4.869,419,4.869,420,4.9,421,5.083,422,3.565,423,4.869,424,4.869,425,4.941,426,2.405,427,5.595,428,6.239,429,2.999,430,3.359,431,3.884,432,3.165]],["title/controllers/DelayController.html",[433,2.089,434,3.241]],["body/controllers/DelayController.html",[0,0.135,3,0.281,4,0.231,5,0.168,10,0.541,17,1.821,22,0.692,25,0.011,37,1.433,39,0.494,41,1.319,43,0.264,55,0.007,56,0.009,57,0.007,73,1.871,80,1.502,81,1.149,91,2.355,113,3.477,130,2.963,149,3.059,167,2.435,187,1.514,223,1.924,276,4.856,433,3.348,434,5.637,435,5.616,436,4.542,437,7.009,438,5.694,439,4.575,440,3.634,441,4.856,442,3.617,443,5.193,444,4.999,445,5.694,446,3.336,447,4.542,448,5.616,449,4.999,450,4.999,451,5.694,452,5.694,453,4.542,454,4.542,455,4.575,456,4.542,457,2.926,458,4.542,459,4.201]],["title/injectables/DurationLoggingInterceptor.html",[127,1.201,460,3.505]],["body/injectables/DurationLoggingInterceptor.html",[0,0.131,3,0.274,4,0.225,5,0.163,10,0.526,11,1.284,12,3.589,16,0.394,17,1.79,22,0.841,24,1.182,25,0.011,26,0.917,27,0.917,37,1.394,39,0.511,41,1.284,43,0.257,55,0.007,56,0.008,57,0.007,61,1.902,73,1.473,80,1.182,81,1.397,127,1.892,128,2.54,223,1.514,224,1.959,273,4.499,388,3.341,443,5.106,455,4.499,460,5.521,461,6.628,462,4.865,463,6.921,464,5.106,465,4.499,466,3.341,467,4.062,468,6.077,469,6.077,470,5.833,471,6.942,472,5.541,473,2.737,474,6.628,475,6.921,476,5.541,477,4.42,478,5.541,479,4.865,480,4.865,481,3.601,482,5.541,483,3.822,484,6.921,485,5.541,486,5.541,487,5.541]],["title/modules/ErrorModule.html",[84,1.201,260,3.031]],["body/modules/ErrorModule.html",[0,0.146,3,0.306,4,0.252,5,0.183,25,0.011,39,0.513,41,1.436,43,0.288,55,0.007,56,0.009,57,0.007,61,2.127,84,2.025,86,2.329,91,2.563,159,4.564,223,2.025,260,5.112,275,4.145,279,6.061,446,3.63,457,3.183,488,6.195,489,6.507,490,4.342,491,4.145,492,3.808,493,5.112,494,6.195,495,6.195,496,4.943]],["title/classes/ErrorResponse.html",[0,0.104,38,2.458]],["body/classes/ErrorResponse.html",[0,0.135,2,1.182,3,0.281,4,0.231,5,0.168,12,3.796,13,3,14,4.092,15,2.872,16,0.583,19,2.346,22,0.692,24,1.215,25,0.011,26,0.942,27,0.942,29,3.059,32,1.386,38,3.938,39,0.368,40,4.542,41,1.319,43,0.264,49,3.16,55,0.007,56,0.009,57,0.007,61,2.416,62,4.706,63,4.125,64,4.575,65,3.477,251,4.999,497,4.999,498,5.694,499,5.694,500,5.694,501,4.542,502,4.856,503,5.694,504,4.999,505,5.694,506,3.336,507,2.355,508,3.185,509,3.701,510,4.542]],["title/injectables/FeathersAuthProvider.html",[121,2.574,127,1.201]],["body/injectables/FeathersAuthProvider.html",[0,0.094,3,0.196,4,0.161,5,0.117,10,0.377,16,0.537,17,1.434,19,1.321,22,0.917,24,1.611,25,0.011,26,1.249,27,1.249,32,1.171,37,1.833,39,0.471,41,0.919,43,0.184,55,0.005,56,0.007,57,0.005,73,2.164,80,1.611,81,0.8,121,3.249,127,1.515,128,1.818,130,3.284,137,3.276,138,3.023,139,3.553,140,3.708,141,3.225,144,2.488,148,4.151,149,3.258,150,3.604,161,1.212,163,2.735,164,2.123,167,3.116,177,2.323,182,2.15,184,1.64,186,2.644,193,1.247,195,2.323,325,1.49,348,3.465,374,0.778,439,3.604,440,1.885,466,2.83,511,6.183,512,2.925,513,5.544,514,5.1,515,5.544,516,5.544,517,5.1,518,3.964,519,4.224,520,3.964,521,4.868,522,3.964,523,3.481,524,3.964,525,4.868,526,3.964,527,4.868,528,3.964,529,3.964,530,3.964,531,4.423,532,3.481,533,3.162,534,4.868,535,3.162,536,4.868,537,4.868,538,3.481,539,3.481,540,2.734,541,3.481,542,4.868,543,4.868,544,4.868,545,3.481,546,2.577,547,3.481,548,3.481,549,1.818,550,3.481,551,2.123,552,4.09,553,3.162,554,3.481,555,3.481,556,2.925]],["title/interfaces/FeathersError.html",[374,0.862,557,3.031]],["body/interfaces/FeathersError.html",[3,0.313,4,0.257,5,0.187,8,2.362,10,0.602,11,1.393,13,3.111,16,0.615,25,0.01,29,3.204,32,1.377,43,0.294,49,3.106,55,0.008,56,0.009,57,0.008,374,1.243,557,5.18,558,2.381,559,5.563,560,5.563,561,7.267]],["title/modules/FeathersModule.html",[84,1.201,119,2.855]],["body/modules/FeathersModule.html",[0,0.136,3,0.284,4,0.234,5,0.169,25,0.011,39,0.458,41,1.332,43,0.267,55,0.007,56,0.009,57,0.007,61,1.973,84,2.248,86,2.884,87,2.543,88,3.215,89,3.215,90,2.953,91,3.174,92,3.518,96,3.96,97,3.078,98,2.543,119,5.515,125,3.649,442,3.638,519,4.909,533,4.584,540,3.028,562,5.046,563,5.046,564,5.046,565,5.747,566,4.36,567,3.96,568,3.638,569,3.367,570,4.148,571,4.602,572,4.602,573,4.602,574,4.602,575,5.648,576,3.246]],["title/interfaces/FeathersService.html",[374,0.862,577,3.241]],["body/interfaces/FeathersService.html",[0,0.115,3,0.24,4,0.198,5,0.144,10,0.462,16,0.536,17,1.648,22,0.774,24,1.359,25,0.011,26,1.054,27,1.054,32,0.782,37,1.603,39,0.506,41,1.128,43,0.35,55,0.006,56,0.008,57,0.006,73,1.295,80,1.039,86,1.83,125,2.316,127,1.742,137,2.832,149,3.017,161,1.489,165,3.974,185,1.476,240,2.155,374,0.956,386,2.82,387,2.922,388,2.82,389,2.82,390,2.82,391,3.734,442,3.65,446,2.853,466,2.155,519,2.724,540,3.431,558,1.83,566,2.999,567,3.974,568,2.502,569,3.719,570,2.853,571,3.165,572,3.165,573,3.165,574,3.165,575,3.884,576,2.232,577,5.559,578,5.24,579,3.359,580,3.144,581,5.595,582,6.521,583,4.869,584,4.701,585,4.142,586,5.595,587,4.869,588,3.274,589,3.165,590,2.999,591,3.884,592,5.083,593,5.595,594,3.924,595,5.083,596,5.083,597,3.884,598,3.592,599,4.275,600,4.275,601,4.275,602,4.275,603,4.275]],["title/injectables/FeathersServiceProvider.html",[127,1.201,519,2.458]],["body/injectables/FeathersServiceProvider.html",[0,0.113,3,0.237,4,0.195,5,0.141,10,0.455,16,0.532,17,1.631,19,1.598,22,0.766,24,1.346,25,0.011,26,1.043,27,1.043,32,1.133,37,1.206,39,0.503,41,1.111,43,0.348,55,0.006,56,0.008,57,0.006,61,1.645,73,1.274,80,1.023,86,2.371,125,2.999,127,1.724,128,2.198,137,2.371,149,2.525,161,1.466,165,3.943,185,1.111,240,2.122,374,0.941,386,2.791,387,2.892,388,2.791,389,2.791,390,2.791,391,3.696,442,3.848,446,2.809,466,2.122,519,3.528,540,3.534,566,3.884,567,4.19,568,3.241,569,3.976,570,3.696,571,4.1,572,4.1,573,4.1,574,4.1,575,5.032,576,2.892,577,5.526,578,5.201,579,3.307,580,2.122,581,4.209,582,5.623,584,4.131,586,4.209,588,3.241,589,3.116,590,2.952,591,3.824,592,5.032,593,5.538,594,3.884,595,5.032,596,5.032,597,3.824,598,4.653,599,4.209,600,4.209,601,5.538,602,4.209,603,4.209,604,6.307,605,4.794,606,4.794,607,4.794,608,3.537]],["title/classes/GlobalErrorFilter.html",[0,0.104,493,3.031]],["body/classes/GlobalErrorFilter.html",[0,0.113,1,3.509,2,0.671,3,0.16,4,0.131,5,0.095,9,4.095,10,0.307,11,0.888,12,2.71,13,2.368,14,2.563,15,2.142,16,0.478,17,1.474,22,0.692,24,1.021,25,0.011,26,0.943,27,0.792,37,1.585,38,4.413,39,0.471,41,0.749,43,0.15,47,1.482,48,1.66,49,3.64,55,0.004,56,0.006,57,0.004,62,1.99,63,4.557,65,1.596,70,2.384,73,2.268,80,1.737,81,1.357,125,2.71,165,2.677,192,1.253,210,1.178,223,0.883,224,1.143,228,1.537,235,2.563,241,5.026,328,2.613,374,0.634,386,2.118,387,2.194,388,2.118,389,2.118,390,1.43,466,2.522,467,4.053,481,3.11,490,3.941,492,2.459,493,3.301,551,1.73,557,4.346,561,2.837,568,1.66,576,1.482,590,1.99,609,4.648,610,2.229,611,5.698,612,5.365,613,4.546,614,4.785,615,3.231,616,4.785,617,5.618,618,5.698,619,6.3,620,3.231,621,3.931,622,5.698,623,3.231,624,3.231,625,2.837,626,2.837,627,3.231,628,3.231,629,2.578,630,2.837,631,2.578,632,5.618,633,2.578,634,2.578,635,2.837,636,3.11,637,2.578,638,2.229,639,3.509,640,1.99,641,2.578,642,2.837,643,4.202,644,2.837,645,2.578,646,2.837,647,2.837,648,2.837,649,2.837,650,2.837,651,3.931,652,3.817,653,3.231,654,3.817,655,5.365,656,3.231,657,3.231,658,3.231,659,3.817,660,3.231,661,3.231,662,4.785,663,3.231,664,3.231,665,2.1,666,4.202,667,2.384,668,2.837,669,1.99,670,2.1,671,4.202,672,3.052,673,2.578,674,4.202,675,2.837,676,3.817,677,2.837,678,2.837,679,2.384,680,2.578,681,2.837,682,2.837,683,2.578,684,2.578,685,2.578,686,2.384,687,2.578,688,2.837,689,2.837,690,2.837,691,2.837,692,5.905,693,2.578,694,5.905,695,2.837,696,2.578,697,2.837,698,3.231,699,3.231,700,3.231,701,4.785,702,3.231,703,3.231]],["title/classes/GlobalValidationPipe.html",[0,0.104,704,3.241]],["body/classes/GlobalValidationPipe.html",[0,0.176,1,3.317,2,1.118,3,0.266,4,0.219,5,0.159,8,2.139,11,0.999,16,0.53,19,2.483,21,5.424,22,0.655,25,0.011,39,0.44,41,1.248,43,0.25,45,2.384,48,4.021,55,0.007,56,0.008,57,0.007,61,1.849,65,2.66,70,3.974,80,1.149,81,1.087,187,1.808,210,2.478,223,1.858,234,4.691,275,3.804,376,3.68,403,3.543,425,3.317,429,4.187,507,2.228,549,2.47,551,2.885,584,3.156,704,5.016,705,5.97,706,4.73,707,5.424,708,4.187,709,5.424,710,5.424,711,5.424,712,4.42,713,7.451,714,5.386,715,4.691,716,3.716,717,4.297,718,5.386,719,2.561,720,3.501,721,5.386,722,5.386,723,3.974,724,5.386,725,5.386,726,5.386,727,3.974,728,4.297,729,5.386,730,3.013,731,3.716,732,5.386,733,4.297,734,3.317,735,5.386,736,3.974,737,3.013,738,5.386,739,5.386]],["title/interfaces/ICreateNews.html",[374,0.862,740,2.855]],["body/interfaces/ICreateNews.html",[3,0.261,4,0.214,5,0.155,10,0.501,11,1.245,15,2.919,16,0.599,25,0.011,32,1.317,39,0.341,43,0.387,55,0.006,56,0.008,57,0.006,61,1.811,73,1.784,137,2.774,138,2.687,139,3.384,140,3.594,146,2.335,147,1.036,161,1.613,162,2.419,205,2.97,219,2.61,284,2.112,289,3.429,305,3.249,319,2.859,320,3.334,321,3.322,323,3.694,325,1.983,373,2.826,374,1.609,558,1.983,580,2.335,740,4.362,741,3.64,742,5.893,743,6.196,744,5.354,745,3.429,746,3.64,747,5.354,748,3.64,749,3.64,750,4.633,751,3.429,752,3.249,753,2.952]],["title/interfaces/ICurrentUser.html",[374,0.862,754,2.574]],["body/interfaces/ICurrentUser.html",[3,0.271,4,0.223,5,0.162,8,1.727,10,0.522,11,1.277,16,0.56,25,0.011,29,2.755,32,1.437,43,0.32,55,0.007,56,0.008,57,0.007,148,4.22,157,5.078,185,1.826,208,2.755,348,3.938,374,1.351,558,2.064,754,4.405,755,4.381,756,4.381,757,6.287,758,5.437,759,5.491,760,5.1,761,5.078,762,4.748,763,3.788,764,4.051,765,4.822,766,4.822,767,4.822,768,4.822,769,4.381,770,4.822,771,4.822,772,3.788]],["title/interfaces/IErrorType.html",[243,3.031,374,0.862]],["body/interfaces/IErrorType.html",[3,0.313,4,0.258,5,0.187,10,0.603,11,1.395,12,3.809,15,3.113,16,0.615,25,0.01,32,1.41,43,0.295,50,6.11,55,0.008,56,0.009,57,0.008,243,5.187,374,1.246,558,2.386,773,5.574,774,5.574]],["title/interfaces/ILogger.html",[374,0.862,775,3.241]],["body/interfaces/ILogger.html",[3,0.267,4,0.22,5,0.159,10,0.513,14,4.326,16,0.574,17,1.762,22,0.982,24,1.723,25,0.011,26,1.336,27,1.414,32,1.425,37,2.032,43,0.251,49,2.818,55,0.007,56,0.008,57,0.007,374,1.061,473,4.348,558,2.032,585,5.361,775,5.027,776,4.746,777,5.983,778,4.429,779,6.814,780,6.814,781,5.405,782,5.405,783,5.983,784,5.954,785,5.405,786,5.983,787,5.405,788,5.405,789,5.405,790,5.983,791,5.405,792,4.746,793,4.746]],["title/interfaces/INewsProperties.html",[368,2.705,374,0.862]],["body/interfaces/INewsProperties.html",[0,0.159,3,0.184,4,0.301,5,0.11,8,2.119,10,0.354,11,0.985,15,2.781,16,0.571,25,0.011,26,0.616,27,1.288,32,1.363,39,0.492,43,0.33,45,1.649,55,0.005,56,0.006,57,0.005,80,0.795,81,1.247,137,3.112,138,2.696,139,2.834,141,1.649,144,1.172,147,1.397,161,1.139,162,1.708,166,2.422,182,2.058,185,0.863,192,3.018,193,1.172,194,1.4,198,2.523,205,2.735,210,2.253,219,2.382,233,2.968,254,2.422,284,1.491,296,3.053,302,3.109,306,2.422,307,3.457,308,2.968,311,2.084,314,1.914,317,2.084,318,2.422,319,2.797,320,3.216,321,3.164,322,3.802,323,3.385,324,4.911,325,2.862,326,4.627,327,4.384,328,1.708,330,4.561,333,2.422,335,2.422,338,2.57,339,3.449,340,2.57,341,2.422,342,1.84,343,2.294,344,2.57,347,3.31,348,1.772,350,3.607,351,3.947,355,2.294,357,2.294,359,2.57,367,2.57,368,4.148,370,4.378,371,2.57,372,2.968,373,1.995,374,0.731,375,2.57,376,1.84,377,2.57,378,2.57,379,2.57,380,2.57,381,2.57,382,2.57,383,2.57,384,2.57,385,3.661,386,2.735,387,2.834,388,2.735,389,2.735,390,2.735,391,3.622,392,3.176,393,2.57,394,3.661,395,2.57,396,2.57,397,4.264,398,2.183,399,2.183,558,1.4]],["title/interfaces/INewsScope.html",[374,0.862,751,2.855]],["body/interfaces/INewsScope.html",[3,0.265,4,0.218,5,0.158,10,0.51,11,1.259,15,2.017,16,0.585,25,0.011,27,1.293,32,1.09,39,0.347,43,0.388,55,0.006,56,0.008,57,0.006,61,1.842,73,1.804,137,2.796,138,2.716,139,3.411,140,3.633,146,2.376,147,1.054,161,1.641,162,2.461,205,3.003,219,1.898,284,2.149,289,3.489,305,3.306,319,2.867,320,3.347,321,2.296,323,2.553,325,2.017,373,2.875,374,1.616,558,2.017,580,2.376,740,3.489,741,3.703,742,4.713,743,5.412,744,5.412,745,3.489,746,3.703,747,6.235,748,3.703,749,3.703,750,5.957,751,4.41,752,4.813,753,4.162]],["title/interfaces/IPagination.html",[374,0.862,794,3.031]],["body/interfaces/IPagination.html",[3,0.319,4,0.263,5,0.191,10,0.614,11,1.41,16,0.54,25,0.01,27,1.378,29,3.446,43,0.3,55,0.008,56,0.009,57,0.008,374,1.269,558,2.431,794,5.244,795,5.679,796,5.131,797,5.131]],["title/modules/InterceptorModule.html",[84,1.201,261,3.031]],["body/modules/InterceptorModule.html",[0,0.138,3,0.287,4,0.237,5,0.172,25,0.011,39,0.499,41,1.349,43,0.27,55,0.007,56,0.009,57,0.007,61,1.999,70,4.296,84,1.951,86,2.188,91,2.408,207,4.182,208,2.331,261,4.923,275,3.992,276,5.324,446,3.412,455,4.639,457,3.667,496,5.693,576,3.688,708,4.395,719,3.394,730,3.257,798,5.822,799,6.266,800,4.923,801,5.265,802,4.395,803,8.045,804,3.822,805,5.265,806,5.693,807,5.935,808,3.785]],["title/injectables/JwtAuthGuard.html",[127,1.201,809,3.241]],["body/injectables/JwtAuthGuard.html",[0,0.157,3,0.328,4,0.27,5,0.196,8,2.087,25,0.011,39,0.499,41,1.537,43,0.308,55,0.008,56,0.009,57,0.008,101,4.894,127,2.109,128,3.042,809,5.692,810,5.825,811,5.825,812,6.634,813,6.634]],["title/interfaces/JwtConstants.html",[105,2.855,374,0.862]],["body/interfaces/JwtConstants.html",[3,0.298,4,0.245,5,0.178,10,0.573,11,1.354,16,0.579,25,0.011,32,1.399,39,0.391,43,0.339,55,0.007,56,0.009,57,0.007,73,1.94,105,5.294,312,4.494,374,1.185,558,2.269,764,4.455,769,4.817,814,4.817,815,7.322,816,6.152,817,6.407,818,6.038,819,6.038,820,4.817,821,6.038,822,6.038,823,6.038,824,5.302,825,5.302]],["title/interfaces/JwtPayload.html",[374,0.862,763,3.031]],["body/interfaces/JwtPayload.html",[3,0.266,4,0.219,5,0.159,8,2.141,10,0.512,11,1.263,16,0.586,25,0.011,29,3.301,32,1.428,43,0.316,55,0.007,56,0.008,57,0.007,148,2.89,157,3.981,185,1.577,208,3.135,348,3.237,374,1.336,558,2.028,754,4.37,755,4.304,756,4.304,757,4.304,758,3.722,759,4.304,760,4.592,761,3.981,762,3.722,763,4.696,764,5.022,765,6.876,766,5.977,767,6.876,768,6.876,769,5.43,770,6.876,771,6.876,772,5.402]],["title/injectables/JwtStrategy.html",[95,3.031,127,1.201]],["body/injectables/JwtStrategy.html",[0,0.136,3,0.284,4,0.234,5,0.17,8,1.811,10,0.547,16,0.409,17,1.833,19,2.559,22,0.861,24,1.228,25,0.011,26,0.952,27,0.952,37,1.449,39,0.532,41,1.334,43,0.267,45,2.548,55,0.007,56,0.009,57,0.007,80,1.228,95,4.89,101,4.248,105,3.742,106,4.593,127,1.937,128,2.64,144,1.811,208,2.838,209,3.796,551,3.083,763,5.78,801,5.229,826,5.055,827,5.757,828,7.088,829,5.757,830,5.665,831,5.757,832,4.593,833,5.055,834,4.89,835,5.757,836,5.757,837,5.757,838,5.757,839,5.757,840,5.757,841,5.757,842,5.757,843,5.757,844,5.757,845,5.757,846,5.757]],["title/classes/Lesson.html",[0,0.104,847,2.705]],["body/classes/Lesson.html",[0,0.124,2,1.089,3,0.259,4,0.213,5,0.155,8,2.104,10,0.499,11,1.241,16,0.582,22,1.023,25,0.011,30,3.753,32,1.075,39,0.476,43,0.244,55,0.006,56,0.008,57,0.006,81,1.35,147,1.313,161,1.605,182,2.594,184,3.206,185,1.796,186,2.767,187,2.239,188,3.067,190,3.067,192,3.006,193,1.651,194,1.973,198,3.956,218,3.304,219,2.365,221,3.304,223,1.828,224,2.365,227,2.937,228,2.496,230,2.496,231,2.496,284,3.277,298,3.076,299,3.076,300,3.076,301,3.076,304,3.076,307,2.937,330,3.92,334,3.233,753,3.742,847,4.119,848,4.609,849,5.432,850,5.873,851,5.249,852,5.249,853,4.609,854,4.609]],["title/injectables/Logger.html",[127,1.201,467,2.257]],["body/injectables/Logger.html",[0,0.136,3,0.285,4,0.234,5,0.17,8,2.232,17,1.492,25,0.011,39,0.459,41,1.336,43,0.268,55,0.007,56,0.009,57,0.007,127,1.939,128,2.645,159,3.552,165,3.97,210,2.102,223,1.577,240,2.553,467,4.307,473,3.796,481,4.612,508,3.227,540,2.467,571,3.749,588,3.646,712,3.749,716,3.979,719,3.374,775,5.916,778,4.996,855,5.065,856,8.018,857,5.768,858,5.768,859,2.849,860,3.979,861,3.979,862,5.065,863,4.255,864,5.768,865,3.552,866,3.552,867,6.23,868,3.227,869,4.255,870,5.768,871,5.768,872,5.065,873,4.255,874,5.065,875,3.38,876,5.768,877,5.768,878,5.768]],["title/modules/LoggerModule.html",[84,1.201,262,2.574]],["body/modules/LoggerModule.html",[0,0.146,3,0.305,4,0.251,5,0.182,25,0.011,39,0.479,41,1.433,43,0.287,55,0.007,56,0.009,57,0.007,84,2.165,86,2.324,87,2.737,88,3.459,89,3.459,90,3.177,91,3.276,92,3.632,96,4.141,97,3.311,98,2.737,262,5.047,467,4.55,879,5.429,880,5.429,881,5.429,882,6.183,883,6.183]],["title/modules/MongoMemoryDatabaseModule.html",[84,1.201,884,3.505]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.109,3,0.228,4,0.188,5,0.136,12,2.198,16,0.438,17,1.195,19,1.54,22,0.748,24,0.986,25,0.011,26,0.765,27,0.765,37,1.549,39,0.497,41,1.071,43,0.343,55,0.006,56,0.007,57,0.006,73,1.963,80,1.575,81,0.933,84,2.018,86,1.737,91,1.912,92,2.119,111,2.375,130,2.685,149,2.465,167,2.961,193,1.937,194,1.737,196,3.687,208,1.85,328,2.823,446,2.708,457,3.163,465,4.002,466,3.064,481,3.004,580,2.045,585,3.004,589,4.002,669,2.846,859,3.041,875,2.708,884,5.523,885,5.523,886,5.568,887,5.523,888,3.687,889,4.622,890,6.156,891,6.943,892,4.622,893,4.5,894,6.751,895,7.688,896,4.622,897,5.406,898,5.446,899,3.687,900,6.079,901,6.439,902,3.004,903,3.687,904,4.058,905,5.406,906,4.542,907,4.542,908,3.687,909,4.002,910,3.687,911,3.004,912,3.188,913,3.41,914,3.687,915,3.188,916,4.058,917,3.41,918,5.406,919,4.058,920,2.586,921,4.058,922,4.058,923,4.622,924,3.188,925,4.622,926,4.622,927,4.911,928,3.188,929,3.41,930,3.188,931,3.41,932,4.622,933,4.622,934,4.622]],["title/classes/News.html",[0,0.104,319,1.464]],["body/classes/News.html",[0,0.144,2,0.63,3,0.15,4,0.266,5,0.089,8,2.06,10,0.288,11,0.847,15,2.586,16,0.589,17,1.181,19,1.011,22,1.017,24,0.974,25,0.011,26,1.01,27,1.267,30,3.155,32,1.314,37,0.764,39,0.462,43,0.304,45,1.343,55,0.004,56,0.006,57,0.004,80,0.647,81,1.322,137,2.461,138,2.858,139,3.155,141,2.429,144,0.955,147,1.285,161,0.928,162,1.391,166,1.973,182,2.54,184,2.526,185,1.594,186,1.889,187,2.188,188,2.094,190,2.094,192,3.171,193,0.955,194,1.141,198,3.395,205,2.429,210,2.001,218,2.255,219,2.316,221,2.255,223,1.5,224,1.941,227,1.698,228,1.443,230,1.443,231,1.443,233,2.554,254,1.973,284,1.215,296,3.235,298,1.778,299,1.778,300,1.778,301,1.778,302,3.578,306,1.973,307,3.071,308,2.554,311,2.554,314,3.138,317,1.698,318,1.973,319,2.8,320,3.066,321,2.943,322,3.365,323,2.904,324,4.213,325,2.586,326,3.969,327,3.761,328,2.517,329,3.369,330,4.404,333,2.968,334,3.381,335,2.968,338,3.15,339,3.969,340,3.15,341,2.968,342,2.255,343,2.812,344,3.15,347,3.27,348,2.171,350,2.94,351,3.217,355,2.812,357,2.812,359,3.15,367,3.15,368,4.397,370,3.969,371,2.094,372,2.554,373,1.625,374,0.596,375,2.094,376,1.499,377,2.094,378,2.094,379,2.094,380,2.094,381,2.094,382,2.094,383,2.094,384,2.094,385,3.15,386,2.429,387,2.517,388,2.429,389,2.429,390,2.429,391,3.217,392,2.821,393,2.094,394,3.15,395,2.094,396,2.094,397,3.787,398,1.778,399,1.778,935,4.566,936,3.035,937,3.035,938,3.035,939,3.035,940,3.035,941,3.035,942,3.035,943,3.035,944,3.035,945,3.035,946,3.035,947,3.035]],["title/controllers/NewsController.html",[433,2.089,948,3.241]],["body/controllers/NewsController.html",[0,0.087,3,0.181,4,0.149,5,0.108,10,0.349,12,1.746,16,0.503,17,1.358,22,0.86,24,1.51,25,0.011,26,1.171,27,1.171,32,1.268,37,1.781,39,0.518,41,0.851,43,0.171,55,0.004,56,0.006,57,0.004,73,2.098,80,1.51,81,0.741,113,1.814,130,3.247,144,2.105,146,2.325,147,1.031,149,3.206,164,1.967,165,2.938,167,3.028,185,1.217,187,1.882,319,2.669,325,1.974,342,2.594,400,4.349,403,3.606,426,1.814,433,1.746,549,2.811,566,2.262,584,4.315,588,3.15,672,2.813,707,2.93,754,4.935,830,2.709,948,3.875,949,3.225,950,3.225,951,4.616,952,4.524,953,6.131,954,4.23,955,3.672,956,4.524,957,3.672,958,5.867,959,3.672,960,5.252,961,3.672,962,7.364,963,3.225,964,4.616,965,3.921,966,4.349,967,3.672,968,3.672,969,5.252,970,3.672,971,4.612,972,5.252,973,4.121,974,5.252,975,3.414,976,4.612,977,3.672,978,4.616,979,5.252,980,3.672,981,4.524,982,3.225,983,3.225,984,4.884,985,3.672,986,3.672,987,2.387,988,3.225,989,3.776,990,3.225,991,2.709,992,3.225,993,3.225,994,2.534,995,2.709,996,3.672,997,3.672,998,3.225,999,3.672,1000,3.225,1001,3.225,1002,6.216,1003,3.225,1004,3.225,1005,5.876,1006,2.93,1007,4.612,1008,3.672,1009,3.672,1010,3.672,1011,3.672,1012,3.672,1013,2.709,1014,2.93,1015,3.672,1016,6.131,1017,3.672,1018,3.672,1019,3.672,1020,5.252,1021,3.672]],["title/classes/NewsFilterQuery.html",[0,0.104,964,3.031]],["body/classes/NewsFilterQuery.html",[0,0.157,2,1.08,3,0.257,4,0.212,5,0.153,10,0.494,11,1.234,16,0.521,22,0.891,25,0.011,27,1.351,32,1.242,39,0.5,43,0.242,55,0.006,56,0.008,57,0.006,61,2.741,73,1.384,138,3.197,140,3.927,146,2.945,147,1.022,162,3.362,185,1.542,187,1.95,319,2.722,320,3.094,415,4.59,416,4.59,417,4.759,420,5.059,421,5.308,422,3.722,426,2.571,428,5.308,429,3.206,430,3.591,431,4.152,432,3.383,752,4.516,753,3.722,964,4.59,1022,6.165,1023,4.152,1024,5.205,1025,5.308,1026,6.653,1027,5.205,1028,5.205,1029,5.205,1030,5.205,1031,5.842,1032,6.653,1033,4.59,1034,5.205,1035,5.702,1036,6.653,1037,5.205,1038,6.653,1039,6.786,1040,5.308,1041,5.205,1042,5.205]],["title/classes/NewsMapper.html",[0,0.104,995,3.241]],["body/classes/NewsMapper.html",[0,0.105,2,0.926,3,0.22,4,0.181,5,0.131,10,0.424,15,2.26,16,0.517,17,1.555,22,0.884,24,1.553,25,0.011,26,1.204,27,1.204,37,1.831,39,0.471,43,0.207,55,0.005,56,0.007,57,0.005,73,1.935,80,1.553,81,0.901,138,2.407,139,3.118,140,3.22,144,1.404,147,0.876,319,2.532,320,1.786,321,2.571,323,2.859,325,1.677,328,3.881,400,4.731,403,3.868,549,2.757,584,3.523,740,4.421,749,4.692,751,4.731,752,2.748,964,5.021,978,5.021,994,5.021,995,4.436,1043,3.918,1044,6.013,1045,6.013,1046,4.436,1047,6.013,1048,6.013,1049,4.462,1050,6.013,1051,4.462,1052,6.013,1053,4.462,1054,6.013,1055,4.462,1056,3.292,1057,3.292,1058,6.013,1059,3.292,1060,3.292,1061,3.918,1062,4.462,1063,4.462,1064,4.462,1065,4.462,1066,4.462,1067,3.918,1068,4.462,1069,4.462,1070,4.462,1071,4.462,1072,4.462,1073,4.462,1074,4.462,1075,3.918,1076,4.462,1077,4.462,1078,4.462,1079,4.462,1080,4.462,1081,4.462,1082,4.462,1083,3.918,1084,4.462,1085,3.918,1086,4.462,1087,4.462,1088,3.918,1089,6.013,1090,4.462,1091,4.462,1092,4.462,1093,4.462,1094,6.013,1095,6.013,1096,6.013,1097,4.462,1098,4.462]],["title/modules/NewsModule.html",[84,1.201,1099,3.031]],["body/modules/NewsModule.html",[0,0.128,3,0.268,4,0.22,5,0.16,25,0.011,39,0.534,41,1.257,43,0.252,55,0.007,56,0.008,57,0.007,84,2.043,86,2.039,87,2.401,88,3.034,89,3.034,90,2.787,91,3.092,92,3.427,96,3.821,97,2.905,98,2.401,111,3.509,113,2.679,114,5.366,203,2.579,262,4.837,715,3.742,928,3.742,948,5.039,954,3.742,989,5.364,990,4.763,1099,6.034,1100,4.763,1101,4.763,1102,4.763,1103,5.424,1104,5.084,1105,5.424,1106,4.763,1107,5.424,1108,5.424,1109,4.763,1110,5.424,1111,3.742,1112,3.526,1113,5.997,1114,5.424,1115,5.424,1116,5.424,1117,3.526]],["title/injectables/NewsRepo.html",[127,1.201,1104,2.705]],["body/injectables/NewsRepo.html",[0,0.096,3,0.201,4,0.166,5,0.12,10,0.387,12,1.94,16,0.542,17,1.463,19,1.36,22,0.926,24,1.625,25,0.011,26,1.26,27,1.26,37,1.852,39,0.515,41,0.945,43,0.189,55,0.005,56,0.007,57,0.005,73,1.957,80,1.495,81,0.823,127,1.546,128,1.87,130,3.297,137,2.635,147,0.801,149,3.277,161,1.247,164,2.185,165,3.632,167,3.258,185,1.31,193,1.283,195,2.39,208,1.633,223,1.115,224,1.443,319,2.871,320,1.633,322,2.906,325,2.635,327,3.483,405,3.164,466,2.873,491,2.282,546,4.22,549,2.593,580,2.503,588,2.906,752,4.317,753,3.632,951,3.902,952,4.789,965,4.738,975,3.676,976,4.966,1006,4.512,1007,4.966,1104,3.483,1118,3.582,1119,5.655,1120,5.655,1121,4.512,1122,3.582,1123,5.592,1124,4.079,1125,4.173,1126,5.655,1127,4.079,1128,4.079,1129,4.556,1130,5.389,1131,4.079,1132,5.655,1133,4.079,1134,5.655,1135,4.079,1136,5.655,1137,4.966,1138,5.655,1139,3.902,1140,5.655,1141,4.079,1142,4.079,1143,2.814,1144,3.01,1145,3.902,1146,4.079,1147,4.079,1148,4.079,1149,4.079,1150,4.079,1151,4.079,1152,5.655,1153,4.079,1154,4.079,1155,4.079,1156,4.079,1157,4.079,1158,4.079]],["title/classes/NewsResponse.html",[0,0.104,994,3.031]],["body/classes/NewsResponse.html",[0,0.086,2,0.755,3,0.18,4,0.314,5,0.107,10,0.346,11,0.968,15,2.651,16,0.604,22,1.01,25,0.011,27,1.214,32,1.351,39,0.431,43,0.169,55,0.004,56,0.006,57,0.004,61,2.928,73,1.622,138,2.442,140,3.266,141,3.122,144,2.378,146,2.309,147,1.696,153,3.849,162,2.796,185,1.752,187,2.209,218,3.013,219,2.596,221,3.013,319,2.872,320,2.667,321,3.017,322,3.134,323,2.9,325,2.759,326,3.964,327,3.756,350,1.948,351,2.132,355,4.103,409,4.162,410,3.057,411,4.162,412,3.849,415,4.596,416,4.596,417,4.103,420,4.208,421,4.162,422,2.918,425,5.033,426,1.797,430,2.51,431,4.866,432,3.964,717,4.162,866,3.213,954,3.599,994,3.599,1035,4.916,1159,2.684,1160,6.283,1161,3.638,1162,6.663,1163,3.638,1164,4.866,1165,3.638,1166,3.638,1167,3.638,1168,3.849,1169,3.638,1170,4.208,1171,4.581,1172,3.638,1173,5.355,1174,3.638,1175,4.866,1176,3.638,1177,5.217,1178,3.638,1179,2.902,1180,3.638,1181,3.638,1182,3.638,1183,3.638,1184,3.638,1185,3.849,1186,3.638,1187,5.217,1188,3.638,1189,3.638]],["title/classes/NewsScope.html",[0,0.104,1145,3.031]],["body/classes/NewsScope.html",[0,0.109,2,0.961,3,0.229,4,0.188,5,0.136,10,0.44,11,1.143,16,0.525,17,1.594,22,0.935,24,1.478,25,0.011,26,1.146,27,1.146,37,1.743,39,0.478,43,0.215,55,0.007,56,0.007,57,0.006,73,1.842,80,1.641,81,0.934,138,1.853,143,2.479,147,0.909,193,1.456,194,1.74,219,1.637,223,1.265,224,1.637,319,2.054,320,1.853,323,2.201,466,3.501,483,4.779,491,2.589,546,3.009,549,3.76,553,3.693,621,3.193,752,3.795,753,3.876,920,3.448,1129,4.801,1145,5.457,1190,6.311,1191,4.064,1192,6.928,1193,6.163,1194,6.163,1195,6.163,1196,5.411,1197,8.201,1198,4.629,1199,6.163,1200,4.629,1201,6.163,1202,4.629,1203,6.163,1204,4.629,1205,4.629,1206,4.629,1207,4.916,1208,4.064,1209,6.163,1210,4.006,1211,4.629,1212,4.629,1213,4.006,1214,4.629,1215,4.629,1216,4.629,1217,6.163,1218,4.629,1219,4.629,1220,3.009,1221,4.629,1222,4.629,1223,6.163,1224,4.629,1225,4.629,1226,4.629]],["title/interfaces/NewsTargetFilter.html",[374,0.862,1129,2.855]],["body/interfaces/NewsTargetFilter.html",[3,0.314,4,0.259,5,0.187,10,0.604,11,1.397,16,0.535,25,0.011,39,0.487,43,0.295,55,0.008,56,0.009,57,0.008,137,3.115,138,3.318,139,3.8,147,1.249,161,1.945,320,2.547,374,1.249,552,6.114,558,2.391,1129,4.893,1190,5.075,1227,5.586]],["title/injectables/NewsUc.html",[127,1.201,989,2.705]],["body/injectables/NewsUc.html",[0,0.059,3,0.123,4,0.101,5,0.073,10,0.236,16,0.526,17,1.013,19,0.829,22,0.882,24,1.548,25,0.011,26,1.2,27,1.2,32,0.779,37,1.944,39,0.446,41,0.576,43,0.116,55,0.003,56,0.005,57,0.003,61,0.854,73,2.114,80,1.548,81,0.502,120,3.896,127,1.071,128,1.141,130,3.212,137,3.228,138,2.905,139,2.521,140,3.56,141,3.377,144,1.73,146,1.101,147,0.488,148,4.471,149,3.093,161,0.761,162,1.141,164,1.332,165,4.321,167,3.492,185,1.681,219,1.714,223,0.68,224,1.714,228,2.305,314,2.013,319,2.802,320,2.544,322,1.278,323,1.863,325,0.935,328,2.222,342,3.402,343,2.413,348,2.845,386,1.101,387,1.141,388,1.101,389,1.101,422,1.392,430,1.716,466,3.419,467,3.416,480,2.185,491,1.392,514,3.126,523,3.44,546,4.321,552,2.891,556,1.835,580,1.734,584,4.153,585,2.547,588,3.539,672,2.098,730,1.392,737,1.392,740,3.574,749,3.794,751,4.321,752,3.684,753,2.712,760,2.413,794,3.794,804,2.098,866,1.532,920,1.392,951,2.703,954,3.344,965,3.505,989,2.413,1006,3.126,1033,3.344,1061,2.185,1067,2.185,1075,4.828,1088,3.44,1104,3.913,1106,2.185,1129,2.547,1143,1.716,1144,1.835,1228,1.985,1229,3.918,1230,3.918,1231,3.918,1232,3.918,1233,4.847,1234,2.488,1235,2.488,1236,3.918,1237,2.488,1238,3.918,1239,2.488,1240,3.918,1241,2.488,1242,3.918,1243,2.488,1244,3.918,1245,2.488,1246,2.488,1247,3.918,1248,2.488,1249,2.703,1250,2.488,1251,4.847,1252,2.488,1253,3.918,1254,2.488,1255,2.488,1256,2.488,1257,3.126,1258,4.387,1259,2.488,1260,2.185,1261,2.488,1262,5.499,1263,2.488,1264,2.488,1265,3.918,1266,2.488,1267,4.828,1268,2.488,1269,2.488,1270,2.488,1271,3.918,1272,2.488,1273,3.918,1274,2.488,1275,3.918,1276,2.488,1277,2.488,1278,1.392,1279,4.847,1280,2.488,1281,3.918,1282,2.488,1283,2.488,1284,5.499,1285,2.488,1286,2.185,1287,1.985,1288,2.488,1289,2.488,1290,2.488,1291,2.488,1292,2.185,1293,3.918,1294,2.488,1295,2.488,1296,2.488,1297,3.918,1298,2.488,1299,2.488,1300,2.488,1301,2.488,1302,2.488]],["title/interfaces/PaginationModel.html",[374,0.862,1130,3.031]],["body/interfaces/PaginationModel.html",[3,0.318,4,0.262,5,0.19,10,0.612,11,1.407,12,3.606,16,0.539,25,0.01,27,1.377,29,3.443,43,0.299,55,0.008,56,0.009,57,0.008,374,1.264,558,2.421,796,5.124,797,5.124,1130,5.231,1303,5.655]],["title/classes/PaginationQuery.html",[0,0.104,966,2.855]],["body/classes/PaginationQuery.html",[0,0.166,2,1.179,3,0.281,4,0.231,5,0.167,10,0.54,11,1.305,16,0.5,22,0.854,25,0.011,27,1.32,29,3.344,39,0.455,43,0.264,55,0.007,56,0.008,57,0.007,61,2.413,187,1.869,223,1.922,224,2.486,426,2.807,429,3.5,733,5.609,796,5.049,797,4.702,920,3.933,966,4.57,1035,5.633,1137,6.174,1210,4.57,1304,4.99,1305,5.885,1306,5.683,1307,3.344,1308,6.174,1309,7.031,1310,7.031,1311,7.031,1312,5.683,1313,5.683,1314,7.031,1315,5.683,1316,7.635,1317,4.99,1318,5.683,1319,5.683,1320,5.683,1321,5.683]],["title/classes/PaginationResponse.html",[0,0.104,987,2.855]],["body/classes/PaginationResponse.html",[0,0.129,2,1.136,3,0.27,4,0.222,5,0.161,10,0.52,11,1.274,16,0.576,19,1.824,22,0.985,24,1.167,25,0.011,26,0.905,27,1.341,29,3.529,39,0.354,43,0.254,55,0.007,56,0.008,57,0.007,187,2.092,425,5.275,426,2.703,585,4.464,617,6.468,719,3.856,796,5.171,797,5.171,987,4.464,1322,4.805,1323,5.458,1324,6.867,1325,5.472,1326,5.472,1327,5.472,1328,5.472,1329,5.472,1330,5.472,1331,5.472,1332,5.472,1333,5.472]],["title/injectables/ParseObjectIdPipe.html",[127,1.201,984,3.031]],["body/injectables/ParseObjectIdPipe.html",[0,0.142,3,0.296,4,0.244,5,0.177,10,0.57,16,0.427,17,1.88,22,0.73,24,1.281,25,0.011,26,0.993,27,0.993,32,1.338,37,1.51,39,0.506,41,1.391,43,0.279,55,0.007,56,0.009,57,0.007,73,1.596,80,1.281,81,1.212,127,1.987,128,2.752,137,2.256,161,1.835,177,3.518,186,3.007,193,1.888,195,3.518,224,2.571,481,3.902,720,4.726,984,5.016,1334,6.384,1335,3.894,1336,4.789,1337,7.271,1338,6.003,1339,7.271,1340,6.003,1341,7.271,1342,6.003,1343,6.003]],["title/classes/SchoolInfo.html",[0,0.104,347,2.353]],["body/classes/SchoolInfo.html",[0,0.135,2,1.186,3,0.282,4,0.232,5,0.168,8,2.219,10,0.543,11,1.309,16,0.595,19,1.905,22,0.971,24,1.219,25,0.011,26,1.358,27,0.945,30,3.235,32,1.284,39,0.456,43,0.265,45,2.529,55,0.007,56,0.009,57,0.007,147,1.385,161,1.747,182,3.184,184,2.918,185,1.635,186,2.364,187,2.035,188,2.62,190,2.62,192,2.968,193,1.798,194,2.148,230,2.718,231,2.718,304,3.349,310,3.942,311,3.947,312,4.345,313,5.205,314,2.936,315,4.559,316,4.559,347,3.778,745,3.715,1344,6.72]],["title/classes/SchoolInfoMapper.html",[0,0.104,1057,3.241]],["body/classes/SchoolInfoMapper.html",[0,0.145,2,1.27,3,0.302,4,0.249,5,0.18,10,0.581,16,0.435,17,1.903,22,0.744,24,1.306,25,0.011,26,1.013,27,1.013,37,1.54,39,0.476,43,0.284,55,0.007,56,0.009,57,0.007,73,1.628,80,1.306,81,1.236,147,1.202,328,3.617,347,4.483,403,3.499,1046,5.428,1056,4.517,1057,5.428,1060,4.517,1170,5.645,1345,6.46,1346,4.884,1347,7.357,1348,5.375,1349,6.122,1350,5.375,1351,6.122]],["title/classes/SchoolInfoResponse.html",[0,0.104,1170,3.031]],["body/classes/SchoolInfoResponse.html",[0,0.143,2,1.253,3,0.298,4,0.245,5,0.178,10,0.573,11,1.354,16,0.519,22,0.887,25,0.011,26,1.38,32,1.309,39,0.391,43,0.28,55,0.007,56,0.009,57,0.007,61,2.692,147,1.599,185,1.932,187,1.94,325,3.061,415,5.034,416,5.034,425,4.829,426,2.982,432,3.925,1160,4.817,1170,5.034,1179,4.817,1352,6.885,1353,4.817,1354,5.302,1355,5.302]],["title/classes/SchoolNews.html",[0,0.104,398,2.574]],["body/classes/SchoolNews.html",[0,0.137,2,0.573,3,0.136,4,0.255,5,0.081,8,1.976,10,0.262,11,0.788,15,2.493,16,0.592,17,1.099,22,1.028,24,0.589,25,0.011,26,0.857,27,1.21,30,3.865,32,1.311,37,0.695,39,0.447,43,0.292,45,1.222,55,0.003,56,0.005,57,0.003,80,0.589,81,1.395,137,2.36,138,2.766,139,3.041,141,2.293,144,0.869,147,1.233,161,0.844,162,1.266,166,1.795,182,2.435,184,2.95,185,1.731,186,2.406,187,2.233,188,2.667,190,2.667,192,3.142,193,0.869,194,1.038,198,3.154,205,2.293,210,1.888,218,2.873,219,2.443,221,2.873,223,1.717,224,2.221,227,2.377,228,2.021,230,1.313,231,1.313,233,2.377,254,1.795,284,1.105,296,3.102,298,1.618,299,1.618,300,1.618,301,1.618,302,3.409,306,1.795,307,2.898,308,2.377,311,1.545,314,2.662,317,1.545,318,1.795,319,2.903,320,3.088,321,2.836,322,3.227,323,2.766,324,4.013,325,2.493,326,3.781,327,3.582,328,2.375,329,3.135,330,4.378,332,2.203,333,2.762,334,3.19,335,2.762,336,2.203,337,2.203,338,2.931,339,3.781,340,2.931,341,2.762,342,2.099,343,2.617,344,2.931,345,2.203,346,2.203,347,3.363,348,2.021,349,2.203,350,2.774,351,3.035,352,2.203,353,2.203,354,2.203,355,2.617,356,2.203,357,2.617,358,2.203,359,2.931,360,2.203,361,2.203,362,2.203,363,2.203,364,2.203,365,2.203,366,2.203,367,2.931,368,3.868,369,2.203,370,3.781,371,1.905,372,2.377,373,1.479,374,0.542,375,1.905,376,1.364,377,1.905,378,1.905,379,1.905,380,1.905,381,1.905,382,1.905,383,1.905,384,1.905,385,2.931,386,2.293,387,2.375,388,2.293,389,2.293,390,2.293,391,3.035,392,2.662,393,1.905,394,2.931,395,1.905,396,1.905,397,3.573,398,2.49,399,1.618,1356,2.761]],["title/controllers/ServerController.html",[433,2.089,1357,3.241]],["body/controllers/ServerController.html",[0,0.148,3,0.31,4,0.255,5,0.185,10,0.597,17,1.933,22,0.764,25,0.011,32,1.201,37,1.581,39,0.406,41,1.456,43,0.292,47,2.881,55,0.008,56,0.009,57,0.008,80,1.341,113,3.104,187,1.671,223,2.042,433,3.554,437,7.247,439,4.857,440,3.554,441,5.155,442,3.84,859,3.104,1357,5.513,1358,5.517,1359,6.284,1360,5.013]],["title/modules/ServerModule.html",[84,1.201,1361,3.031]],["body/modules/ServerModule.html",[0,0.114,3,0.238,4,0.196,5,0.142,16,0.342,25,0.011,32,0.774,39,0.557,41,1.116,43,0.224,52,2.579,55,0.006,56,0.008,57,0.006,80,1.027,81,0.972,84,1.931,85,5.518,86,1.81,87,2.131,88,2.694,89,2.694,90,2.475,91,1.992,92,2.208,96,3.539,97,2.579,98,2.131,111,3.251,113,3.125,156,2.579,193,1.99,194,1.81,208,1.928,257,5.518,284,2.533,296,3.125,308,3.539,317,3.539,319,2.109,347,3.388,370,4.112,372,3.539,386,2.131,387,2.208,388,2.131,389,2.131,390,2.131,398,3.707,399,3.707,531,3.842,683,3.842,684,3.842,685,3.842,847,3.896,893,4.112,898,3.553,899,3.842,907,3.553,909,4.112,1099,5.518,1357,5.212,1361,5.909,1362,4.229,1363,4.229,1364,5.518,1365,4.816,1366,6.326,1367,6.326,1368,4.816,1369,4.816,1370,4.816,1371,6.326,1372,3.13,1373,4.816,1374,4.816,1375,3.009,1376,4.112,1377,4.816,1378,4.816,1379,4.816,1380,4.816,1381,4.229,1382,2.822,1383,3.13,1384,4.816,1385,4.816,1386,6.326,1387,4.816,1388,3.842,1389,3.322]],["title/classes/Submission.html",[0,0.104,1376,2.855]],["body/classes/Submission.html",[0,0.122,2,1.075,3,0.256,4,0.21,5,0.153,8,2.086,10,0.492,11,1.231,16,0.58,22,1.021,25,0.011,30,3.74,32,1.065,39,0.499,43,0.24,55,0.006,56,0.008,57,0.006,81,1.338,147,1.302,161,1.583,163,3.573,182,2.572,184,3.19,185,1.787,186,2.743,187,2.233,188,3.041,190,3.041,192,2.008,193,1.629,194,1.946,198,3.944,218,3.276,219,2.345,221,3.276,223,1.813,224,2.345,227,2.897,228,2.463,230,2.463,231,2.463,296,3.613,298,3.035,299,3.035,300,3.035,301,3.035,304,3.035,307,3.71,330,4.287,334,4.084,1375,3.479,1376,4.311,1390,4.547,1391,5.836,1392,5.397,1393,6.632,1394,5.179,1395,6.632,1396,5.179,1397,5.179,1398,4.547]],["title/classes/Task.html",[0,0.104,1375,2.089]],["body/classes/Task.html",[0,0.114,2,0.998,3,0.237,4,0.195,5,0.142,8,1.988,10,0.457,11,1.173,16,0.595,22,1.034,25,0.011,26,1.168,27,1.323,30,3.666,32,1.205,39,0.485,43,0.223,55,0.006,56,0.008,57,0.006,81,1.276,147,1.241,161,1.47,182,2.451,184,3.102,185,1.737,186,2.614,187,2.262,188,2.898,190,2.898,192,3.207,193,1.513,194,1.807,198,3.876,218,3.122,219,2.652,221,3.122,223,1.727,224,2.235,227,2.69,228,2.287,230,2.287,231,2.287,284,3.201,298,2.818,299,2.818,300,2.818,301,2.818,304,2.818,307,3.536,330,4.137,334,3.892,466,3.124,753,3.536,847,4.924,850,5.549,853,4.222,1375,3.006,1399,4.222,1400,5.632,1401,4.808,1402,4.808,1403,6.32,1404,4.808,1405,4.808,1406,4.808,1407,4.808,1408,4.222]],["title/controllers/TaskController.html",[433,2.089,1409,3.241]],["body/controllers/TaskController.html",[0,0.122,3,0.255,4,0.21,5,0.152,10,0.49,12,2.455,16,0.367,17,1.711,22,0.627,24,1.101,25,0.011,26,0.854,27,1.095,37,1.299,39,0.548,41,1.196,43,0.24,55,0.009,56,0.008,57,0.006,73,2.048,80,1.101,81,1.042,113,2.549,130,2.832,149,2.649,164,2.764,167,2.207,187,1.372,208,2.066,403,2.455,426,2.549,433,2.455,549,3.532,734,3.179,737,2.888,754,4.514,796,4.075,797,4.075,830,3.808,950,4.532,952,5.389,958,5.315,963,4.532,966,5.51,973,3.179,983,4.532,987,3.355,988,4.532,991,3.808,992,4.532,993,4.532,998,4.532,1013,3.808,1323,4.301,1335,2.764,1375,2.455,1409,4.882,1410,4.532,1411,6.617,1412,5.162,1413,5.162,1414,4.748,1415,4.532,1416,3.561,1417,3.808,1418,5.162,1419,3.808,1420,5.162,1421,4.532,1422,5.162,1423,3.179,1424,6.617,1425,5.162,1426,5.162,1427,3.355,1428,5.162,1429,5.162,1430,5.162,1431,5.162,1432,5.162]],["title/classes/TaskMapper.html",[0,0.104,1417,3.241]],["body/classes/TaskMapper.html",[0,0.141,2,1.239,3,0.295,4,0.243,5,0.176,10,0.567,16,0.424,17,1.874,22,0.725,24,1.273,25,0.011,26,0.987,27,0.987,37,1.502,39,0.469,43,0.277,55,0.007,56,0.009,57,0.007,73,1.587,80,1.273,81,1.205,147,1.171,328,3.577,403,3.446,1046,5.345,1056,4.403,1060,4.403,1083,5.241,1085,5.241,1350,5.241,1375,3.953,1416,5.597,1417,5.345,1433,5.241,1434,7.245,1435,5.968,1436,5.968,1437,5.968,1438,5.968,1439,5.968,1440,5.968,1441,5.968,1442,5.968,1443,5.968,1444,5.968,1445,5.968]],["title/modules/TaskModule.html",[84,1.201,1364,3.031]],["body/modules/TaskModule.html",[0,0.143,3,0.299,4,0.246,5,0.178,25,0.011,39,0.527,41,1.402,43,0.281,55,0.007,56,0.009,57,0.007,84,2.145,86,2.274,87,2.678,88,3.385,89,3.385,90,3.109,91,3.246,92,2.774,96,4.087,97,3.24,98,2.678,113,3.608,1364,5.968,1409,5.79,1414,5.511,1415,5.312,1446,5.312,1447,5.312,1448,5.511,1449,6.05,1450,6.05,1451,5.312]],["title/injectables/TaskRepo.html",[127,1.201,1448,2.855]],["body/injectables/TaskRepo.html",[0,0.1,3,0.21,4,0.173,5,0.125,10,0.403,12,2.02,16,0.413,17,1.504,19,1.416,22,0.707,24,1.241,25,0.011,26,0.962,27,0.962,37,1.069,39,0.511,41,0.984,43,0.197,52,2.275,55,0.005,56,0.007,57,0.005,73,2.051,80,0.906,81,0.857,127,1.589,128,1.947,130,2.571,137,2.68,144,1.336,147,0.834,148,3.551,149,2.328,161,1.299,164,2.275,167,3.05,185,0.984,193,1.829,194,1.596,195,2.489,208,3.088,219,1.502,223,1.161,224,1.502,228,2.02,284,2.855,287,3.134,319,1.416,376,2.098,466,1.88,491,3.253,549,1.947,551,2.275,556,4.29,796,3.581,797,3.581,847,4.084,849,3.134,861,2.93,865,2.616,965,3.407,973,2.616,1122,3.729,1123,5.689,1125,4.29,1130,4.92,1143,2.93,1144,3.134,1145,2.93,1168,3.134,1208,3.729,1323,3.78,1375,3.153,1376,2.761,1392,3.134,1400,5.689,1427,2.761,1448,3.78,1452,3.729,1453,5.815,1454,4.247,1455,5.815,1456,4.247,1457,4.247,1458,3.729,1459,2.275,1460,4.247,1461,3.729,1462,3.388,1463,4.247,1464,2.93,1465,4.247,1466,4.639,1467,3.729,1468,3.134,1469,2.761,1470,3.388,1471,4.247,1472,2.93,1473,3.134,1474,6.631,1475,4.247,1476,5.815,1477,4.247,1478,4.247,1479,4.247,1480,5.815,1481,4.247,1482,4.247,1483,5.815,1484,4.247,1485,3.388,1486,5.815,1487,4.247,1488,4.247,1489,2.761,1490,3.729,1491,4.247,1492,4.247,1493,4.247,1494,4.247,1495,4.639,1496,3.729,1497,3.729,1498,4.247,1499,4.247,1500,4.247,1501,4.247]],["title/classes/TaskResponse.html",[0,0.104,1416,3.031]],["body/classes/TaskResponse.html",[0,0.127,2,1.112,3,0.265,4,0.218,5,0.158,10,0.509,11,1.257,16,0.594,22,1.016,25,0.011,26,1.23,27,1.362,32,1.371,39,0.347,43,0.249,47,3.107,55,0.006,56,0.008,57,0.006,61,1.839,185,1.722,187,2.222,218,3.671,219,2.91,221,3.671,403,3.223,405,3.791,425,5.416,426,2.647,1375,3.223,1400,5.93,1416,4.675,1502,4.705,1503,5.951,1504,3.971,1505,7.433,1506,7.433,1507,5.358,1508,5.358,1509,5.358,1510,5.358,1511,5.358,1512,5.358,1513,5.358,1514,3.953]],["title/injectables/TaskUC.html",[127,1.201,1414,2.855]],["body/injectables/TaskUC.html",[0,0.13,3,0.272,4,0.224,5,0.162,10,0.523,16,0.49,17,1.784,19,1.837,22,0.838,24,1.472,25,0.011,26,1.141,27,1.141,37,1.387,39,0.525,41,1.277,43,0.256,55,0.007,56,0.008,57,0.007,73,1.465,80,1.176,127,1.885,128,2.527,130,2.92,137,2.966,141,2.439,144,1.734,147,1.082,148,2.951,149,2.762,161,1.685,164,2.951,167,2.357,207,3.229,208,3.014,491,3.083,794,5.444,965,4.624,1143,3.802,1144,4.066,1323,4.484,1375,2.621,1414,4.484,1427,5.129,1448,5.387,1451,4.839,1467,4.839,1515,4.839,1516,6.898,1517,5.511,1518,5.511,1519,6.898,1520,5.511,1521,4.397,1522,3.802,1523,5.511,1524,4.066,1525,4.066,1526,4.839,1527,3.802,1528,5.511]],["title/classes/TeamInfo.html",[0,0.104,372,2.458]],["body/classes/TeamInfo.html",[0,0.135,2,1.186,3,0.282,4,0.232,5,0.168,8,2.219,10,0.543,11,1.309,16,0.595,19,1.905,22,0.971,24,1.219,25,0.011,26,1.358,27,0.945,30,3.235,32,1.284,39,0.456,43,0.265,45,2.529,55,0.007,56,0.009,57,0.007,147,1.385,161,1.747,182,3.184,184,2.918,185,1.635,186,2.364,187,2.035,188,2.62,190,2.62,192,2.968,193,1.798,194,2.148,230,2.718,231,2.718,304,3.349,310,3.942,311,3.947,312,4.345,313,5.205,314,2.936,315,4.559,316,4.559,372,3.947,746,3.942,1529,6.72]],["title/classes/TeamNews.html",[0,0.104,399,2.574]],["body/classes/TeamNews.html",[0,0.137,2,0.573,3,0.136,4,0.255,5,0.081,8,1.976,10,0.262,11,0.788,15,2.493,16,0.592,17,1.099,22,1.028,24,0.589,25,0.011,26,0.857,27,1.21,30,3.865,32,1.311,37,0.695,39,0.447,43,0.292,45,1.222,55,0.003,56,0.005,57,0.003,80,0.589,81,1.395,137,2.36,138,2.766,139,3.041,141,2.293,144,0.869,147,1.233,161,0.844,162,1.266,166,1.795,182,2.435,184,2.95,185,1.731,186,2.406,187,2.233,188,2.667,190,2.667,192,3.142,193,0.869,194,1.038,198,3.154,205,2.293,210,1.888,218,2.873,219,2.443,221,2.873,223,1.717,224,2.221,227,2.377,228,2.021,230,1.313,231,1.313,233,2.377,254,1.795,284,1.105,296,3.102,298,1.618,299,1.618,300,1.618,301,1.618,302,3.409,306,1.795,307,2.898,308,2.377,311,1.545,314,2.662,317,1.545,318,1.795,319,2.903,320,3.088,321,2.836,322,3.227,323,2.766,324,4.013,325,2.493,326,3.781,327,3.582,328,2.375,329,3.135,330,4.378,332,2.203,333,2.762,334,3.19,335,2.762,336,2.203,337,2.203,338,2.931,339,3.781,340,2.931,341,2.762,342,2.099,343,2.617,344,2.931,345,2.203,346,2.203,347,3.115,348,2.021,349,2.203,350,2.774,351,3.035,352,2.203,353,2.203,354,2.203,355,2.617,356,2.203,357,2.617,358,2.203,359,2.931,360,2.203,361,2.203,362,2.203,363,2.203,364,2.203,365,2.203,366,2.203,367,2.931,368,3.868,369,2.203,370,3.781,371,1.905,372,2.898,373,1.479,374,0.542,375,1.905,376,1.364,377,1.905,378,1.905,379,1.905,380,1.905,381,1.905,382,1.905,383,1.905,384,1.905,385,2.931,386,2.293,387,2.375,388,2.293,389,2.293,390,2.293,391,3.035,392,2.662,393,1.905,394,2.931,395,1.905,396,1.905,397,3.573,398,1.618,399,2.49,1530,2.761]],["title/injectables/TimeoutInterceptor.html",[127,1.201,807,3.241]],["body/injectables/TimeoutInterceptor.html",[0,0.115,3,0.239,4,0.197,5,0.143,10,0.46,11,1.179,16,0.504,17,1.643,22,0.949,24,1.355,25,0.011,26,1.051,27,1.244,29,3.208,37,1.598,39,0.486,41,1.123,43,0.225,55,0.006,56,0.008,57,0.006,61,1.663,80,1.605,106,3.866,127,1.736,128,2.222,223,1.325,224,1.714,328,3.249,386,2.145,387,2.222,388,3.329,389,2.145,390,2.145,391,2.84,433,3.021,443,4.687,448,5.068,455,4.129,466,3.136,468,5.578,469,5.578,470,5.549,471,6.604,473,2.394,474,6.223,477,3.866,479,4.255,481,3.15,568,3.264,569,3.021,595,3.866,621,3.343,632,3.866,804,2.595,805,5.912,807,4.687,930,4.382,1196,5.578,1531,4.255,1532,6.352,1533,4.382,1534,4.382,1535,4.382,1536,5.068,1537,7.087,1538,7.087,1539,7.087,1540,4.846,1541,4.846,1542,5.228,1543,4.846,1544,4.846,1545,4.846,1546,4.846,1547,4.846,1548,6.352,1549,6.352,1550,4.846,1551,6.352,1552,4.846,1553,4.846,1554,4.846,1555,4.846,1556,4.846,1557,4.846,1558,4.846,1559,6.352,1560,4.846,1561,4.846]],["title/classes/UpdateNewsParams.html",[0,0.104,978,3.031]],["body/classes/UpdateNewsParams.html",[0,0.184,2,1.108,3,0.264,4,0.217,5,0.157,10,0.507,11,1.448,15,3.025,16,0.528,22,0.902,25,0.011,27,1.119,32,1.253,39,0.437,43,0.248,55,0.006,56,0.008,57,0.006,61,2.678,147,1.614,187,1.973,219,2.391,319,2.817,321,3.442,323,3.529,402,3.94,403,3.216,405,3.783,407,4.689,409,5.395,410,3.962,411,5.395,412,4.989,426,2.637,427,5.938,428,5.92,429,3.289,712,4.395,748,4.665,978,4.665,1035,5.755,1039,6.85,1562,6.85,1563,6.762,1564,6.762,1565,4.989,1566,4.665,1567,5.938,1568,6.762,1569,5.34,1570,5.34,1571,5.34]],["title/interfaces/User.html",[144,1.382,374,0.862]],["body/interfaces/User.html",[0,0.109,3,0.228,4,0.188,5,0.136,10,0.439,11,1.142,16,0.492,25,0.011,32,1.235,39,0.497,41,1.071,43,0.215,55,0.006,56,0.007,57,0.006,73,2.229,80,1.687,81,0.933,121,2.708,127,1.683,130,2.981,137,3.12,138,2.465,139,3.174,140,3.297,141,3.499,144,2.611,148,3.297,149,3.078,150,3.004,161,1.413,163,3.188,164,2.475,167,3.288,177,2.708,182,2.387,184,3.053,186,3.338,193,1.454,195,2.708,325,1.737,348,3.76,374,0.907,439,4.002,440,2.198,466,2.045,511,3.687,512,3.41,514,3.687,517,3.687,519,3.873,521,4.058,525,4.058,527,4.058,531,4.911,532,4.058,533,3.687,534,5.406,535,3.687,536,5.406,537,5.406,538,4.058,539,4.058,540,2.961,541,4.058,542,5.406,543,5.406,544,5.406,545,4.058,546,3.004,547,4.058,548,4.058,549,2.119,550,4.058,551,2.475,552,4.542,553,3.687,554,4.058,555,4.058,556,3.41,558,1.737]],["title/classes/UserInfo.html",[0,0.104,296,2.17]],["body/classes/UserInfo.html",[0,0.13,2,1.146,3,0.273,4,0.224,5,0.163,8,2.172,10,0.524,11,1.281,16,0.598,19,1.84,22,0.988,24,1.178,25,0.011,26,0.913,27,0.913,30,3.166,32,1.352,39,0.447,43,0.256,45,2.443,55,0.007,56,0.008,57,0.007,147,1.355,161,1.688,182,3.152,184,2.856,185,1.6,186,2.284,187,2.099,188,2.531,190,2.531,192,3.152,193,1.737,194,2.075,230,2.626,231,2.626,296,3.411,304,3.235,310,3.809,311,3.863,312,4.253,313,4.073,314,2.837,760,3.4,1572,6.933,1573,6.933,1574,6.933,1575,6.906,1576,5.521,1577,5.521,1578,5.521,1579,5.521]],["title/classes/UserInfoMapper.html",[0,0.104,1059,3.241]],["body/classes/UserInfoMapper.html",[0,0.144,2,1.263,3,0.3,4,0.247,5,0.179,10,0.578,16,0.433,17,1.896,22,0.74,24,1.298,25,0.011,26,1.007,27,1.007,37,1.531,39,0.474,43,0.283,55,0.007,56,0.009,57,0.007,73,1.618,80,1.298,81,1.228,147,1.195,296,4.128,328,3.607,403,3.486,1046,5.409,1056,4.49,1059,5.409,1060,4.49,1164,5.634,1346,4.855,1348,5.344,1580,6.437,1581,7.331,1582,6.086,1583,6.086,1584,6.086,1585,6.086,1586,6.086]],["title/classes/UserInfoResponse.html",[0,0.104,1164,3.031]],["body/classes/UserInfoResponse.html",[0,0.137,2,1.201,3,0.286,4,0.235,5,0.171,10,0.55,11,1.32,16,0.547,22,0.935,25,0.011,26,1.328,32,1.348,39,0.374,43,0.269,55,0.007,56,0.009,57,0.007,61,2.756,144,2.639,147,1.396,185,1.91,187,2.047,415,4.906,416,4.906,425,4.945,426,2.86,432,3.763,1160,5.674,1164,4.906,1179,4.619,1353,4.619,1354,5.084,1355,5.084,1573,6.759,1574,6.759,1587,7.05,1588,4.906,1589,6.245,1590,5.79]],["title/classes/ValidationErrorDetailResponse.html",[0,0.104,68,3.241]],["body/classes/ValidationErrorDetailResponse.html",[0,0.152,2,1.337,3,0.318,4,0.262,5,0.19,12,3.063,16,0.458,19,2.147,22,0.783,24,1.374,25,0.01,26,1.066,27,1.066,32,1.382,43,0.299,44,5.655,49,3.136,55,0.008,56,0.009,57,0.008,65,3.981,68,5.594,1591,6.658,1592,5.655,1593,6.441,1594,6.441,1595,6.049]],["title/modules/ValidationModule.html",[84,1.201,263,3.031]],["body/modules/ValidationModule.html",[0,0.153,3,0.319,4,0.262,5,0.19,25,0.011,39,0.522,41,1.495,43,0.3,55,0.008,56,0.009,57,0.008,84,2.075,86,2.426,91,2.669,263,5.238,277,6.666,446,3.782,457,3.316,496,5.149,704,5.601,1596,6.454,1597,6.454,1598,6.454]],["title/changelog.html",[1599,2.723,1600,2.723,1601,3.241]],["body/changelog.html",[0,0.053,2,0.856,3,0.034,4,0.028,5,0.134,10,0.066,13,1.132,14,0.37,22,0.274,25,0.003,26,0.298,27,0.298,29,0.514,37,0.453,39,0.116,47,2.506,48,1.713,49,2.31,51,1.242,53,0.425,55,0.002,56,0.003,57,0.002,65,2.036,80,0.147,81,1.127,84,0.351,87,0.568,92,0.316,97,0.688,98,0.568,125,0.856,130,0.268,141,1.333,143,0.37,144,2.143,146,0.305,148,0.688,149,0.514,150,0.449,153,0.509,156,0.964,157,1.328,165,0.386,167,0.295,177,0.404,185,0.522,197,0.509,202,0.425,203,2.16,206,0.551,209,1.94,210,1.655,212,2.89,214,0.886,215,0.449,219,0.939,223,0.616,224,0.454,235,0.37,236,0.476,237,0.718,238,1.556,239,0.835,240,0.305,269,0.551,271,2.68,273,2.354,284,1.206,287,2.672,289,0.449,302,1.321,305,1.388,321,0.549,322,0.925,325,2.477,341,0.449,342,1.789,348,0.328,350,0.964,357,0.425,373,1.422,374,0.135,376,0.341,386,0.797,387,0.589,390,0.568,392,0.355,404,1.328,405,0.718,410,1.765,417,0.791,422,1.261,439,3.182,440,2.064,441,0.476,442,1.548,457,0.66,465,0.449,473,0.341,483,4.587,491,1.007,502,0.886,504,0.606,506,1.321,507,0.531,508,0.718,509,0.449,535,1.024,540,3.078,549,1.217,551,0.688,567,0.386,568,0.355,569,1.723,570,1.953,572,1.958,576,1.381,580,0.998,584,0.404,588,0.355,590,0.425,592,0.551,594,2.231,608,0.509,612,0.551,633,0.551,634,1.024,636,0.449,638,0.476,640,0.791,651,0.476,655,1.024,665,1.465,667,0.947,672,2.08,686,0.509,687,1.436,696,0.551,708,1.855,710,0.551,711,1.798,712,1.726,715,2.299,716,1.242,717,2.659,719,1.961,728,2.403,730,2.173,733,0.551,734,1.109,736,1.959,737,0.386,745,3.072,746,1.555,748,0.476,758,1.555,759,2.89,760,4.284,761,0.947,762,0.886,764,0.509,772,1.242,778,1.17,802,0.425,804,1.613,806,3.099,816,0.509,820,0.551,830,1.328,832,2.659,834,1.242,847,0.791,854,1.581,859,1.919,861,5.192,863,0.509,866,0.791,868,4.41,872,0.606,875,1.953,886,0.886,893,0.449,902,0.835,915,0.476,917,0.509,920,0.718,927,1.024,928,1.242,929,2.459,930,0.476,931,0.947,951,1.555,954,2.078,965,0.752,973,1.109,975,1.17,982,2.645,1013,0.509,1025,0.551,1031,2.645,1112,0.449,1113,4.149,1117,0.835,1139,0.476,1168,1.328,1185,2.223,1210,1.17,1213,0.835,1220,1.17,1249,0.476,1278,1.007,1286,0.606,1287,2.118,1305,4.281,1307,1.072,1308,0.606,1317,0.606,1335,1.207,1360,0.551,1372,1.958,1375,0.611,1376,0.835,1382,4.173,1383,1.726,1388,1.436,1389,0.476,1391,3.099,1392,0.509,1398,1.581,1408,1.581,1419,0.947,1423,0.791,1427,0.835,1458,0.606,1459,1.422,1462,0.551,1464,0.886,1466,2.403,1469,1.17,1473,0.947,1485,0.551,1489,0.835,1490,1.127,1495,0.551,1503,0.606,1504,1.321,1514,0.947,1521,0.551,1522,0.476,1527,0.476,1533,0.886,1534,0.886,1542,0.509,1565,2.223,1566,0.886,1588,0.886,1589,1.581,1595,1.024,1601,2.645,1602,0.69,1603,1.242,1604,1.024,1605,0.606,1606,1.555,1607,0.69,1608,0.69,1609,1.801,1610,1.024,1611,3.042,1612,5.585,1613,7.276,1614,4.149,1615,0.69,1616,7.778,1617,0.69,1618,6.76,1619,1.127,1620,2.078,1621,0.886,1622,1.127,1623,0.606,1624,0.69,1625,6.91,1626,4.896,1627,4.725,1628,0.69,1629,0.69,1630,6.651,1631,1.284,1632,0.69,1633,4.123,1634,3.622,1635,0.69,1636,4.896,1637,0.69,1638,0.69,1639,3.013,1640,0.69,1641,2.655,1642,0.69,1643,1.979,1644,4.541,1645,0.69,1646,0.69,1647,1.801,1648,0.69,1649,1.979,1650,0.69,1651,1.959,1652,1.979,1653,0.69,1654,1.801,1655,3.099,1656,1.127,1657,1.127,1658,1.284,1659,1.284,1660,1.979,1661,3.333,1662,1.284,1663,0.69,1664,0.606,1665,0.69,1666,2.927,1667,0.69,1668,3.486,1669,0.69,1670,1.284,1671,0.69,1672,0.69,1673,1.127,1674,1.979,1675,0.69,1676,1.127,1677,0.69,1678,1.465,1679,3.62,1680,0.69,1681,0.606,1682,0.69,1683,5.054,1684,2.927,1685,3.013,1686,1.284,1687,1.284,1688,0.69,1689,0.551,1690,0.606,1691,0.69,1692,0.69,1693,0.69,1694,0.606,1695,0.69,1696,1.801,1697,0.69,1698,0.606,1699,2.655,1700,2.331,1701,0.606,1702,0.69,1703,0.69,1704,0.69,1705,0.69,1706,1.801,1707,0.69,1708,1.855,1709,0.69,1710,1.127,1711,0.69,1712,1.284,1713,0.69,1714,0.606,1715,1.284,1716,0.69,1717,1.581,1718,1.024,1719,0.69,1720,0.69,1721,1.284,1722,1.284,1723,0.69,1724,5.102,1725,2.459,1726,0.69,1727,1.17,1728,0.69,1729,0.69,1730,2.645,1731,0.69,1732,0.69,1733,2.254,1734,3.884,1735,0.69,1736,3.289,1737,0.69,1738,0.69,1739,1.581,1740,1.127,1741,0.551,1742,0.69,1743,0.69,1744,0.69,1745,2.89,1746,1.284,1747,1.284,1748,1.284,1749,1.127,1750,1.284,1751,0.69,1752,1.581,1753,0.69,1754,0.69,1755,1.328,1756,0.69,1757,2.123,1758,0.69,1759,1.284,1760,0.69,1761,2.927,1762,0.69,1763,1.127,1764,1.979,1765,0.69,1766,1.024,1767,0.69,1768,1.581,1769,1.979,1770,0.69,1771,0.69,1772,1.024,1773,0.69,1774,4.725,1775,0.69,1776,0.69,1777,0.69,1778,0.69,1779,5.054,1780,3.013,1781,1.284,1782,0.69,1783,0.69,1784,0.69,1785,0.69,1786,0.69,1787,0.69,1788,1.127,1789,0.69,1790,4.123,1791,0.69,1792,1.801,1793,2.645,1794,0.69,1795,1.581,1796,0.69,1797,0.69,1798,1.127,1799,0.69,1800,0.69,1801,2.655,1802,1.127,1803,0.69,1804,1.801,1805,0.69,1806,0.606,1807,0.69,1808,0.69,1809,1.284,1810,1.798,1811,0.69,1812,0.69,1813,1.127,1814,0.69,1815,0.69,1816,0.606,1817,1.024,1818,1.284,1819,1.959,1820,3.013,1821,0.69,1822,0.69,1823,0.69,1824,0.551,1825,1.284,1826,0.69,1827,1.284,1828,1.798,1829,1.284,1830,0.69,1831,0.69,1832,0.69,1833,0.69,1834,2.655,1835,0.606,1836,0.69,1837,1.284,1838,0.69,1839,0.606,1840,2.254,1841,1.127,1842,0.69,1843,1.284,1844,1.801,1845,1.958,1846,0.69,1847,0.69,1848,0.476,1849,0.69,1850,0.69,1851,1.284,1852,0.69,1853,1.635,1854,0.551,1855,0.69,1856,1.581,1857,0.69,1858,0.69,1859,1.801,1860,0.69,1861,0.69,1862,1.284,1863,0.835,1864,1.801,1865,0.69,1866,0.69,1867,0.69,1868,0.69,1869,1.284,1870,0.69,1871,1.801,1872,1.127,1873,1.979,1874,0.69,1875,3.62,1876,0.551,1877,0.69,1878,1.242,1879,1.284,1880,1.663,1881,0.69,1882,0.69,1883,0.69,1884,0.69,1885,1.801,1886,1.979,1887,0.69,1888,1.801,1889,0.606,1890,0.69,1891,1.801,1892,2.645,1893,0.69,1894,0.69,1895,0.69,1896,1.801,1897,0.69,1898,0.69,1899,0.69,1900,1.284,1901,0.69,1902,1.581,1903,1.284,1904,0.69,1905,0.69,1906,0.69,1907,0.69,1908,0.69,1909,0.947,1910,0.509,1911,0.947,1912,0.551,1913,0.69,1914,0.69,1915,0.606,1916,1.127,1917,0.69,1918,0.69,1919,0.69,1920,4.896,1921,0.69,1922,1.801,1923,0.69,1924,0.69,1925,0.69,1926,2.254,1927,0.69,1928,1.284,1929,1.284,1930,0.69,1931,0.69,1932,0.69,1933,1.284,1934,0.69,1935,0.69,1936,0.69,1937,0.606,1938,0.606,1939,0.69,1940,0.69,1941,0.606,1942,0.69,1943,1.284,1944,0.606,1945,0.69,1946,0.69,1947,0.69,1948,0.69,1949,0.69,1950,0.69,1951,0.69,1952,0.69,1953,3.013,1954,0.69,1955,0.69,1956,0.69,1957,0.69,1958,0.69,1959,0.69,1960,0.69,1961,1.284,1962,0.69,1963,0.69,1964,1.801,1965,0.69,1966,1.284,1967,0.69,1968,1.465,1969,0.69,1970,1.284,1971,0.606,1972,0.69,1973,0.606,1974,0.69,1975,1.284,1976,0.69,1977,0.69,1978,0.69,1979,2.655,1980,0.69,1981,0.69,1982,0.551,1983,0.69,1984,0.69,1985,0.69,1986,0.69,1987,0.69,1988,0.69,1989,0.69,1990,0.69,1991,0.509,1992,0.69,1993,1.801,1994,0.69,1995,0.509,1996,0.69,1997,0.69,1998,0.69,1999,0.69,2000,1.007,2001,0.791,2002,1.801,2003,1.284,2004,0.69,2005,1.801,2006,0.69,2007,1.979,2008,0.69,2009,0.69,2010,2.655,2011,3.013,2012,0.69,2013,0.69,2014,0.69,2015,3.013,2016,0.69,2017,1.284,2018,0.69,2019,0.69,2020,1.284,2021,0.551,2022,1.284,2023,0.606,2024,1.436,2025,0.69,2026,0.69,2027,0.551,2028,1.321,2029,0.69,2030,7.726,2031,2.659,2032,0.69,2033,0.69,2034,0.551,2035,0.69,2036,0.69,2037,0.69,2038,0.69,2039,0.69,2040,3.013,2041,0.69,2042,1.328,2043,0.69,2044,0.69,2045,0.69,2046,0.69,2047,0.69,2048,2.254,2049,2.254,2050,2.331,2051,1.663,2052,1.581,2053,2.655,2054,1.284,2055,1.284,2056,3.181,2057,1.663,2058,3.333,2059,1.284,2060,1.284,2061,1.242,2062,1.284,2063,1.024,2064,1.024,2065,1.284,2066,0.69,2067,0.69,2068,2.927,2069,0.551,2070,0.449,2071,2.655,2072,1.127,2073,0.69,2074,0.551,2075,0.476,2076,0.509,2077,0.69,2078,0.69,2079,0.606,2080,1.127,2081,0.69,2082,1.284,2083,0.69,2084,0.69,2085,1.284,2086,0.69,2087,0.69,2088,1.284,2089,0.69,2090,0.69,2091,1.284,2092,0.69,2093,0.69,2094,0.69,2095,0.606,2096,1.555,2097,0.69,2098,0.69,2099,1.127,2100,0.509,2101,0.69,2102,1.801,2103,2.118,2104,0.69,2105,0.606,2106,1.284,2107,0.69,2108,0.69,2109,0.606,2110,0.69,2111,3.411,2112,1.284,2113,0.69,2114,0.69,2115,0.69,2116,0.69,2117,0.69,2118,1.127,2119,1.127,2120,2.254,2121,1.798,2122,0.69,2123,1.801,2124,0.69,2125,0.69,2126,1.436,2127,0.69,2128,0.69,2129,0.69,2130,1.284,2131,1.801,2132,0.551,2133,0.69,2134,0.69,2135,0.69,2136,0.69,2137,1.284,2138,0.69,2139,1.024,2140,0.606,2141,1.284,2142,0.69,2143,0.606,2144,0.69,2145,0.69,2146,0.69,2147,1.284,2148,1.284,2149,0.69,2150,1.284,2151,0.69,2152,0.69,2153,0.69,2154,0.69,2155,0.69,2156,1.726,2157,1.801,2158,1.801,2159,1.663,2160,0.476,2161,2.118,2162,0.69,2163,1.801,2164,1.284,2165,0.476,2166,0.449,2167,0.606,2168,0.69,2169,0.69,2170,0.606,2171,0.509,2172,1.284,2173,1.328,2174,1.801,2175,1.127,2176,0.69,2177,0.606,2178,0.69,2179,0.606,2180,0.69,2181,0.69,2182,0.69,2183,1.832,2184,0.69,2185,0.69,2186,0.69,2187,0.69,2188,0.947,2189,0.69,2190,0.69,2191,0.69,2192,0.69,2193,0.69,2194,0.69,2195,1.284,2196,0.606,2197,0.551,2198,0.606,2199,0.69,2200,0.606,2201,0.69,2202,0.551,2203,1.127,2204,0.69,2205,1.436,2206,0.69,2207,0.69,2208,0.69,2209,1.284,2210,0.69,2211,0.69,2212,0.69,2213,0.69,2214,0.69,2215,1.024,2216,0.69,2217,0.69,2218,1.284,2219,0.69,2220,0.69,2221,0.69,2222,2.254,2223,0.606,2224,0.69,2225,1.284,2226,0.69,2227,0.69,2228,1.284,2229,1.284,2230,1.284,2231,1.801,2232,1.801,2233,1.979,2234,1.284,2235,1.581,2236,1.024,2237,0.606,2238,0.476,2239,0.69,2240,0.551,2241,0.606,2242,0.69,2243,0.886,2244,0.69,2245,1.801,2246,0.69,2247,0.69,2248,0.69,2249,0.69,2250,1.832,2251,0.606,2252,1.436,2253,0.69,2254,1.284,2255,1.024,2256,1.801,2257,1.127,2258,0.69,2259,0.69,2260,0.69,2261,1.284,2262,1.436,2263,1.127,2264,1.284,2265,0.69,2266,0.69,2267,0.69,2268,0.69,2269,0.69,2270,0.69,2271,0.69,2272,0.69,2273,0.69,2274,0.606,2275,0.606,2276,0.69,2277,0.69,2278,1.801,2279,0.69,2280,1.284,2281,0.69,2282,1.127,2283,0.69,2284,1.284,2285,0.69,2286,1.284,2287,0.476,2288,0.69,2289,1.024,2290,0.69,2291,0.69,2292,0.606,2293,0.69,2294,0.69,2295,0.606,2296,1.801,2297,2.254,2298,1.284,2299,0.835,2300,1.127,2301,1.284,2302,1.127,2303,1.284,2304,0.886,2305,0.69,2306,1.284,2307,0.606,2308,0.69,2309,1.284,2310,1.127,2311,0.69,2312,0.69,2313,0.69,2314,0.606,2315,0.69,2316,0.69,2317,1.284,2318,0.69,2319,0.69,2320,2.645,2321,1.024,2322,0.69,2323,3.622,2324,0.69,2325,0.606,2326,0.606,2327,0.69,2328,0.69,2329,0.69,2330,0.69,2331,2.254,2332,0.69,2333,0.69,2334,1.436,2335,0.69,2336,0.69,2337,0.69,2338,0.69,2339,0.606,2340,1.127,2341,0.69,2342,0.69,2343,0.69,2344,0.69,2345,1.024,2346,0.69,2347,0.69,2348,0.69,2349,1.127,2350,0.69,2351,0.69,2352,0.69,2353,0.69,2354,0.69,2355,1.979,2356,0.69,2357,0.69,2358,0.551,2359,0.69,2360,0.551,2361,0.69,2362,0.69,2363,0.606,2364,0.69,2365,0.509,2366,0.69,2367,0.69,2368,0.606,2369,0.69,2370,0.69,2371,0.69,2372,0.69,2373,0.69,2374,0.69,2375,0.69,2376,1.801,2377,0.551,2378,0.69,2379,0.551,2380,0.69,2381,0.69,2382,0.69,2383,0.69,2384,1.801,2385,0.69,2386,1.284,2387,1.801,2388,1.284,2389,1.284,2390,1.284,2391,1.284,2392,0.69,2393,1.284,2394,1.284,2395,0.69,2396,0.69,2397,0.69,2398,0.69,2399,0.69,2400,0.606,2401,0.69,2402,1.284,2403,0.69,2404,0.69,2405,0.509,2406,0.69,2407,0.551,2408,0.69,2409,1.284,2410,0.69,2411,0.606,2412,0.69,2413,0.69,2414,0.69,2415,0.69,2416,0.551,2417,0.69,2418,0.69,2419,1.801,2420,1.801,2421,0.69,2422,1.284,2423,0.69,2424,0.69,2425,1.127,2426,0.69,2427,0.69,2428,0.69,2429,0.69,2430,0.69,2431,0.69,2432,0.69,2433,1.284,2434,0.606,2435,0.69,2436,0.606,2437,0.69,2438,0.69,2439,0.69,2440,0.69,2441,0.69,2442,0.69,2443,0.69,2444,0.69,2445,0.69,2446,1.284,2447,1.284,2448,0.69,2449,0.606,2450,0.69,2451,0.69,2452,0.69,2453,1.284,2454,0.69,2455,0.69,2456,1.284,2457,0.69,2458,1.581,2459,1.284,2460,0.69,2461,0.69,2462,1.284,2463,0.449,2464,2.254,2465,0.69,2466,0.69,2467,0.69,2468,0.69,2469,0.551,2470,0.69,2471,0.947,2472,0.606,2473,0.606,2474,1.284,2475,0.69,2476,0.69,2477,1.284,2478,0.69,2479,0.69,2480,0.69,2481,0.69,2482,0.69,2483,1.284,2484,0.69,2485,0.69,2486,0.69,2487,0.69,2488,0.69,2489,0.69,2490,0.69,2491,1.801,2492,0.69,2493,0.69,2494,0.69,2495,0.69,2496,0.69,2497,0.69,2498,0.69,2499,0.69,2500,1.284,2501,1.284,2502,0.69,2503,0.69,2504,0.69,2505,2.254,2506,4.541,2507,1.284,2508,1.127,2509,1.127,2510,1.284,2511,2.254,2512,1.127,2513,1.284,2514,0.69,2515,1.284,2516,1.127,2517,1.284,2518,1.284,2519,1.284,2520,1.127,2521,1.284,2522,2.254,2523,1.284,2524,2.254,2525,1.284,2526,1.284,2527,1.127,2528,1.127,2529,1.801,2530,1.284,2531,0.69,2532,0.69,2533,1.284,2534,0.947,2535,0.476,2536,1.284,2537,0.69,2538,2.655,2539,1.284,2540,0.69,2541,0.606,2542,0.69,2543,2.254,2544,0.69,2545,0.69,2546,0.69,2547,0.69,2548,0.69,2549,0.476,2550,0.606,2551,0.69,2552,0.69,2553,0.69,2554,1.284,2555,1.284,2556,1.284,2557,0.69,2558,0.69,2559,0.69,2560,0.606,2561,0.551,2562,0.69,2563,0.69,2564,1.284,2565,1.284,2566,0.69,2567,0.69,2568,0.69,2569,1.284,2570,0.509,2571,0.69,2572,0.69,2573,0.69,2574,1.284,2575,0.69,2576,1.801,2577,1.581,2578,0.69,2579,0.69,2580,0.551,2581,1.284,2582,1.284,2583,0.69,2584,0.509,2585,0.69,2586,0.69,2587,1.801,2588,1.284,2589,0.69,2590,1.284,2591,0.551,2592,0.69,2593,1.284,2594,0.69,2595,0.69,2596,0.69,2597,2.254,2598,0.69,2599,0.69,2600,0.69,2601,0.69,2602,0.69,2603,0.69,2604,0.69,2605,1.284,2606,0.69,2607,0.69,2608,0.69,2609,0.606,2610,1.284,2611,0.69,2612,1.284,2613,0.69,2614,0.69,2615,0.551,2616,0.69,2617,1.284,2618,2.254,2619,0.69,2620,0.606,2621,0.69,2622,1.284,2623,1.284,2624,0.69,2625,0.69,2626,0.606,2627,1.284,2628,0.69,2629,0.69,2630,1.284,2631,0.551,2632,0.551,2633,1.284,2634,0.69,2635,0.69,2636,0.69,2637,1.284,2638,1.284,2639,0.69,2640,0.69,2641,1.284,2642,0.69,2643,0.69,2644,0.69,2645,0.69,2646,1.284,2647,0.69,2648,0.69,2649,0.551,2650,0.69,2651,2.254,2652,0.551,2653,0.69,2654,0.69,2655,1.284,2656,0.606,2657,0.509,2658,1.284,2659,0.69,2660,2.655,2661,1.284,2662,0.551,2663,1.284,2664,0.551,2665,0.69,2666,0.69,2667,0.551,2668,0.69,2669,0.69,2670,0.69,2671,0.69,2672,0.69,2673,0.69,2674,0.69,2675,0.69,2676,0.69,2677,0.69,2678,0.69,2679,0.69,2680,1.127,2681,0.69,2682,0.69,2683,0.69,2684,0.69,2685,0.69,2686,0.551,2687,0.69,2688,0.69,2689,0.69,2690,0.69,2691,0.69,2692,0.69,2693,0.69,2694,0.606,2695,0.476,2696,0.69,2697,0.69,2698,0.606,2699,1.801,2700,0.69,2701,0.606,2702,0.606,2703,0.69,2704,0.606,2705,0.69,2706,0.69,2707,0.69,2708,0.69,2709,0.69,2710,2.254,2711,0.69,2712,0.69,2713,0.606,2714,0.69,2715,1.581,2716,0.69,2717,0.69,2718,0.69,2719,0.69,2720,0.69,2721,0.69,2722,1.284,2723,0.69,2724,0.69,2725,0.69,2726,0.551,2727,1.284,2728,0.69,2729,0.69,2730,0.69,2731,0.69,2732,0.69,2733,1.801,2734,1.284,2735,1.284,2736,0.69,2737,0.606,2738,0.69,2739,1.284,2740,0.606,2741,1.801,2742,0.69,2743,0.69,2744,0.69,2745,0.69,2746,0.69,2747,1.284,2748,1.284,2749,1.284,2750,1.284,2751,1.581,2752,1.284,2753,0.69,2754,1.284,2755,0.69,2756,1.284,2757,0.449,2758,0.606,2759,1.801,2760,0.69,2761,0.606,2762,0.69,2763,0.69,2764,0.69,2765,2.655,2766,0.69,2767,0.606,2768,0.69,2769,0.69,2770,0.69,2771,0.606,2772,0.69,2773,1.284,2774,1.127,2775,0.69,2776,0.606,2777,0.509,2778,0.69,2779,0.69,2780,0.69,2781,0.69,2782,1.284,2783,0.69,2784,0.69,2785,0.69,2786,0.69,2787,0.606,2788,0.69,2789,0.69,2790,0.551,2791,0.69,2792,0.69,2793,0.509,2794,0.69,2795,0.69,2796,0.69,2797,1.284,2798,0.606,2799,0.606]],["title/coverage.html",[2001,3.664]],["body/coverage.html",[0,0.203,1,1.622,5,0.078,6,2.313,7,2.313,9,1.712,16,0.187,25,0.011,38,1.474,48,1.353,49,2.346,55,0.003,56,0.005,57,0.003,58,2.101,59,2.313,60,2.313,68,1.943,81,0.532,90,1.353,95,1.817,105,2.663,120,1.544,121,1.544,127,2.113,129,2.313,144,0.829,162,1.208,182,1.021,183,3.269,198,1.253,232,2.313,243,1.817,284,1.055,285,2.313,296,1.301,308,1.474,309,2.313,310,3.914,317,1.474,318,3.995,319,0.878,320,1.055,347,1.411,368,1.622,372,1.474,374,1.535,398,1.544,399,1.544,400,1.712,401,3.269,402,3.71,420,3.469,433,2.698,434,1.943,435,4.011,436,4.011,447,2.101,454,2.101,460,2.101,461,2.313,462,2.313,467,1.353,493,1.817,497,2.313,501,2.101,511,3.269,512,3.023,519,1.474,557,1.817,559,2.313,560,2.313,577,1.943,578,3.023,579,2.827,609,5.541,610,5.182,613,2.101,629,2.101,631,2.101,637,2.101,641,2.101,651,4.24,679,1.943,680,2.101,693,2.101,704,1.943,705,2.313,706,2.313,740,1.712,741,3.469,751,1.712,754,1.544,755,3.269,756,3.269,763,1.817,773,2.313,774,2.313,775,1.943,776,2.313,794,1.817,795,2.313,807,1.943,809,1.943,810,2.313,811,2.313,814,4.011,826,2.313,847,1.622,848,2.313,855,2.313,885,2.101,886,2.827,887,2.101,888,2.101,903,2.101,920,5.004,948,1.943,949,2.313,958,1.817,964,1.817,966,1.712,978,1.817,984,1.817,987,1.712,989,1.622,991,1.943,994,1.817,995,1.943,1022,3.269,1023,3.269,1040,2.101,1043,2.313,1057,1.943,1059,1.943,1104,1.622,1118,2.313,1129,1.712,1130,1.817,1145,1.817,1159,3.71,1164,1.817,1170,1.817,1175,2.101,1190,3.269,1191,2.313,1207,2.101,1227,2.313,1228,2.101,1303,2.313,1304,2.313,1322,2.313,1334,2.313,1335,1.411,1336,2.101,1344,2.313,1345,2.313,1346,3.269,1352,2.313,1353,3.269,1357,1.943,1358,2.313,1372,1.712,1375,1.253,1376,1.712,1390,2.313,1399,2.313,1409,1.943,1410,2.313,1414,1.712,1416,1.817,1417,1.943,1433,2.313,1448,1.712,1452,2.313,1502,2.313,1515,2.313,1529,2.313,1531,2.313,1542,1.943,1562,2.313,1572,2.313,1580,2.313,1587,2.313,1591,2.313,1592,2.313,1745,2.101,1755,3.023,1766,2.101,1795,3.598,1813,2.313,1856,4.415,1968,1.712,2001,1.622,2031,2.101,2334,2.101,2339,2.313,2649,6.931,2800,2.313,2801,2.313,2802,5.964,2803,6.792,2804,5.673,2805,5.673,2806,5.673,2807,5.673,2808,6.507,2809,6.507,2810,2.313,2811,8.688,2812,2.313,2813,4.415,2814,4.415,2815,2.313,2816,2.313,2817,5.028,2818,4.526,2819,2.313,2820,2.101,2821,2.313,2822,7.511,2823,4.011,2824,2.101,2825,2.313,2826,2.634,2827,2.634,2828,2.634,2829,2.313,2830,2.634,2831,5.028,2832,4.097,2833,2.634,2834,4.097,2835,6.145,2836,5.028,2837,2.634,2838,5.028,2839,2.634,2840,2.634,2841,2.634,2842,4.097,2843,2.634,2844,5.964,2845,2.313,2846,2.313,2847,2.313,2848,2.313,2849,2.634,2850,2.313,2851,2.313,2852,2.101,2853,2.313,2854,3.598,2855,2.313,2856,2.313,2857,4.415,2858,2.634]],["title/dependencies.html",[87,2.333,2358,2.944]],["body/dependencies.html",[0,0.128,4,0.156,5,0.16,16,0.273,25,0.011,41,0.891,47,1.763,55,0.005,56,0.007,57,0.005,87,1.702,101,2.837,103,3.377,125,2.991,130,2.105,149,2.735,156,2.06,185,0.891,193,1.978,194,1.445,195,2.254,238,3.685,265,2.5,267,2.369,333,3.528,351,2.254,386,2.402,426,1.9,429,3.873,446,2.254,477,3.068,540,1.645,569,2.581,590,4.207,591,3.068,626,3.377,833,5.522,834,2.653,899,3.068,902,2.5,973,2.369,981,2.837,1383,5.101,1419,4.004,1619,3.377,1718,4.33,1749,3.377,1848,2.653,1915,3.377,1916,3.377,1971,3.377,2095,3.377,2118,3.377,2119,3.377,2156,2.5,2165,2.653,2166,3.528,2167,3.377,2170,3.377,2179,3.377,2223,3.377,2238,2.653,2243,3.744,2257,3.377,2262,3.068,2473,3.377,2737,3.377,2776,3.377,2859,5.427,2860,7.684,2861,3.846,2862,3.846,2863,3.846,2864,3.846,2865,3.846,2866,5.427,2867,5.427,2868,3.846,2869,5.427,2870,3.846,2871,3.846,2872,3.846,2873,3.846,2874,3.846,2875,3.846,2876,3.846,2877,3.846,2878,3.846,2879,5.427,2880,3.846,2881,3.846,2882,3.846,2883,3.846,2884,3.846,2885,3.846,2886,5.427,2887,3.846,2888,3.846,2889,5.427,2890,3.846,2891,3.846,2892,7.205,2893,3.846,2894,3.846,2895,3.846,2896,3.846,2897,3.846,2898,3.846,2899,3.846,2900,3.846,2901,3.846,2902,3.846,2903,3.846,2904,3.846,2905,2.837,2906,3.846,2907,3.846,2908,5.427,2909,3.846,2910,3.846,2911,5.427,2912,5.427,2913,3.846,2914,3.846,2915,3.846,2916,3.068,2917,3.846,2918,3.846,2919,3.846,2920,3.846,2921,3.846,2922,5.427,2923,3.846,2924,3.846,2925,3.846,2926,3.846,2927,3.846,2928,3.846,2929,3.846,2930,3.846,2931,3.846,2932,3.846,2933,3.846,2934,3.846,2935,3.846,2936,3.846,2937,3.846,2938,3.846,2939,3.846,2940,5.427,2941,4.766,2942,3.846,2943,3.846,2944,3.846,2945,3.846,2946,3.846,2947,3.846,2948,3.846,2949,3.846,2950,5.427,2951,3.846,2952,3.846,2953,3.846,2954,3.846,2955,3.846,2956,3.846,2957,3.846,2958,3.846,2959,3.846,2960,3.846,2961,3.846,2962,3.846,2963,5.427,2964,3.846,2965,3.846,2966,3.846,2967,3.846,2968,3.846,2969,5.427,2970,3.846,2971,3.377,2972,3.068,2973,3.846,2974,3.846,2975,3.846,2976,3.846,2977,3.846,2978,3.846,2979,3.846,2980,3.846,2981,3.846,2982,3.846,2983,3.846,2984,3.846,2985,3.846,2986,3.846,2987,3.846,2988,3.846,2989,3.846,2990,3.068,2991,3.846,2992,3.846,2993,3.846,2994,3.846,2995,3.846,2996,3.846,2997,3.846,2998,3.846,2999,3.846,3000,3.846,3001,3.846,3002,3.846,3003,3.846]],["title/miscellaneous/functions.html",[3004,2.399,3005,3.636]],["body/miscellaneous/functions.html",[10,0.573,16,0.429,24,1.673,25,0.01,26,1.297,27,1.297,32,1.172,37,1.973,38,4.082,49,3.243,55,0.007,56,0.009,57,0.007,90,4.029,224,2.135,376,2.982,551,3.234,585,3.925,609,4.455,610,5.619,652,4.817,654,4.817,659,4.817,679,5.383,720,3.925,753,3.378,920,3.378,1040,6.255,1210,3.925,2698,5.302,2810,6.407,2812,6.407,2818,4.817,2850,5.302,2851,6.407,3004,3.925,3005,4.166,3006,5.302,3007,6.885,3008,6.038,3009,4.817,3010,6.038,3011,6.038]],["title/index.html",[10,0.351,1599,2.723,1600,2.723]],["body/index.html",[5,0.177,13,2.558,14,2.393,15,1.679,17,1.156,25,0.009,26,0.996,29,2.915,52,3.645,53,2.752,55,0.005,56,0.007,57,0.005,61,1.534,64,2.904,81,0.902,125,2.125,185,1.035,202,4.485,203,3.724,207,3.527,209,3.223,210,1.629,223,1.221,238,2.618,284,1.789,392,2.296,405,2.5,410,2.618,440,3.615,509,2.904,540,1.911,569,2.862,570,2.618,594,2.752,665,2.904,672,4.286,708,4.191,727,3.296,730,2.5,737,3.367,804,2.393,808,2.904,859,2.973,868,3.367,902,2.904,906,3.296,973,2.752,1278,2.5,1419,3.296,1472,3.082,1535,3.082,1588,3.082,1603,3.082,1604,5.43,1606,4.152,1616,3.923,1622,3.923,1623,3.923,1668,4.44,1678,5.504,1725,3.296,1757,3.988,1768,3.923,1806,7.027,1810,3.565,1819,3.296,1845,2.904,1941,3.923,1968,2.904,2000,2.5,2001,2.752,2021,4.801,2051,3.296,2100,3.296,2160,3.082,2165,3.082,2166,3.912,2200,5.976,2202,4.801,2205,3.565,2241,3.923,2287,3.082,2436,3.923,2472,3.923,2534,4.44,2535,3.082,2580,3.565,2694,3.923,2695,3.082,2771,3.923,2793,3.296,2802,3.923,2990,3.565,3012,3.565,3013,6.019,3014,6.247,3015,4.468,3016,3.923,3017,4.468,3018,3.082,3019,4.468,3020,4.468,3021,3.082,3022,3.082,3023,4.468,3024,3.923,3025,4.152,3026,3.923,3027,4.468,3028,3.565,3029,4.468,3030,5.976,3031,5.373,3032,5.024,3033,3.707,3034,3.923,3035,6.019,3036,6.019,3037,7.601,3038,7.282,3039,4.468,3040,4.468,3041,6.019,3042,3.923,3043,4.468,3044,3.923,3045,6.019,3046,4.468,3047,3.923,3048,6.019,3049,6.019,3050,3.296,3051,3.923,3052,4.468,3053,4.468,3054,4.468,3055,4.468,3056,4.468,3057,2.752,3058,4.468,3059,4.468,3060,3.565,3061,4.468,3062,3.296,3063,3.923,3064,4.468,3065,4.468,3066,4.468,3067,3.565,3068,3.923,3069,4.44,3070,4.468,3071,4.468,3072,3.923,3073,4.468,3074,3.923]],["title/license.html",[1599,2.723,1600,2.723,3075,3.241]],["body/license.html",[0,0.022,4,0.319,5,0.049,13,2.796,17,0.236,22,0.111,25,0.002,29,0.666,39,0.059,52,1.509,53,0.563,55,0.003,56,0.002,57,0.002,64,1.081,80,0.195,81,0.871,98,0.404,141,2.137,143,1.509,144,1.806,146,1.247,147,0.326,153,1.227,158,2.009,159,3.341,192,0.354,197,2.959,210,2.345,215,5.473,219,0.323,235,0.489,237,0.93,240,0.404,267,0.563,272,0.674,321,0.391,325,0.343,339,0.594,342,2.385,343,0.563,374,0.787,388,0.404,389,0.404,405,1.28,410,1.651,412,0.674,422,0.511,441,4.88,442,2.217,457,1.883,466,0.404,473,0.451,502,0.63,506,1.651,507,2.312,509,2.805,540,0.711,558,0.86,566,1.409,570,2.148,576,1.292,580,0.736,588,0.469,590,1.024,621,0.63,640,1.024,686,1.227,712,0.594,715,0.63,719,1.088,723,0.674,728,2.247,730,0.93,731,1.147,734,1.735,737,0.93,760,3.108,796,1.024,800,3.618,859,2.493,860,0.63,865,0.563,868,1.28,869,0.674,893,0.594,911,0.594,912,2.767,914,0.729,915,2.529,917,1.688,929,2.078,931,3.87,975,1.081,981,0.674,1014,0.729,1025,4.184,1033,1.943,1112,0.594,1139,0.63,1210,2.126,1249,0.63,1278,2.051,1287,0.729,1305,1.688,1335,3.445,1382,1.651,1389,0.63,1421,2.009,1423,1.409,1459,2.809,1469,1.831,1473,1.227,1485,1.326,1514,0.674,1521,0.729,1522,2.767,1524,0.674,1525,4.002,1526,2.872,1534,1.578,1535,1.943,1567,4.027,1588,0.63,1605,0.802,1606,1.578,1611,2.078,1613,1.46,1621,0.63,1656,1.46,1668,0.674,1674,0.802,1678,2.607,1689,0.729,1694,0.802,1708,1.735,1714,1.46,1718,1.326,1727,0.594,1745,0.729,1752,0.802,1755,1.227,1757,2.148,1761,1.46,1769,0.802,1772,0.729,1788,0.802,1810,5.837,1817,2.61,1819,1.227,1828,0.729,1839,1.46,1841,0.802,1854,1.326,1863,0.594,1875,1.46,1876,2.61,1878,0.63,1886,0.802,1889,0.802,1892,0.802,1910,0.674,1911,2.413,1937,0.802,1973,0.802,1991,0.674,2001,1.024,2023,1.46,2027,1.326,2034,0.729,2051,0.674,2057,2.959,2064,2.247,2072,0.802,2074,5.686,2075,3.331,2076,1.688,2079,5.936,2096,2.257,2100,1.227,2140,0.802,2156,1.487,2159,3.184,2173,4.874,2183,2.977,2188,0.674,2197,0.729,2215,0.729,2233,0.802,2235,1.46,2236,1.326,2240,3.442,2274,0.802,2299,1.831,2300,0.802,2302,0.802,2334,0.729,2340,0.802,2345,0.729,2349,0.802,2365,1.227,2368,0.802,2379,0.729,2405,1.227,2425,0.802,2463,2.383,2469,1.326,2508,1.46,2534,2.078,2535,1.578,2541,1.46,2549,1.943,2561,0.729,2580,1.326,2584,1.688,2620,1.46,2631,0.729,2657,1.688,2664,0.729,2667,2.924,2686,4.027,2695,0.63,2701,5.274,2702,1.46,2704,1.46,2713,0.802,2751,0.802,2758,1.46,2761,0.802,2777,3.724,2787,2.009,2829,0.802,2916,0.729,3014,0.729,3018,2.257,3021,1.943,3022,0.63,3025,0.63,3026,2.474,3028,1.825,3033,0.563,3047,0.802,3050,1.688,3057,3.108,3069,1.688,3075,7.443,3076,6.006,3077,5.878,3078,0.914,3079,2.288,3080,7.018,3081,3.271,3082,4.69,3083,4.932,3084,3.271,3085,0.914,3086,0.914,3087,1.663,3088,2.288,3089,2.288,3090,5.245,3091,0.914,3092,0.914,3093,1.46,3094,3.271,3095,3.521,3096,1.663,3097,1.663,3098,4.908,3099,4.315,3100,0.914,3101,0.914,3102,3.665,3103,1.46,3104,0.802,3105,0.802,3106,4.432,3107,7.609,3108,2.288,3109,2.009,3110,0.914,3111,0.914,3112,2.817,3113,4.586,3114,0.914,3115,4.586,3116,1.227,3117,0.914,3118,2.817,3119,0.729,3120,2.817,3121,0.729,3122,5.04,3123,0.802,3124,0.914,3125,4.829,3126,5.047,3127,3.271,3128,5.245,3129,0.914,3130,1.663,3131,0.914,3132,0.914,3133,2.009,3134,0.914,3135,0.914,3136,0.914,3137,0.914,3138,0.914,3139,0.914,3140,2.817,3141,0.914,3142,2.288,3143,0.914,3144,0.914,3145,4.974,3146,1.688,3147,0.914,3148,0.914,3149,1.825,3150,2.288,3151,0.914,3152,0.674,3153,1.663,3154,1.663,3155,2.288,3156,7.639,3157,0.914,3158,3.271,3159,3.271,3160,3.665,3161,0.729,3162,2.288,3163,4.6,3164,1.663,3165,0.914,3166,0.914,3167,0.914,3168,2.288,3169,0.914,3170,0.914,3171,1.663,3172,3.665,3173,0.914,3174,1.663,3175,0.914,3176,3.331,3177,0.914,3178,2.817,3179,0.802,3180,1.663,3181,7.578,3182,2.288,3183,4.586,3184,2.474,3185,1.227,3186,0.914,3187,1.663,3188,2.288,3189,4.586,3190,4.829,3191,0.914,3192,2.817,3193,1.663,3194,2.817,3195,2.474,3196,0.914,3197,2.288,3198,6.83,3199,1.46,3200,0.914,3201,4.315,3202,0.914,3203,2.009,3204,2.383,3205,0.914,3206,5.74,3207,2.009,3208,1.663,3209,3.521,3210,5.047,3211,3.665,3212,0.914,3213,1.663,3214,4.01,3215,0.914,3216,5.425,3217,1.663,3218,0.914,3219,0.914,3220,0.914,3221,2.288,3222,0.914,3223,0.914,3224,0.914,3225,0.729,3226,2.288,3227,2.474,3228,0.914,3229,0.914,3230,0.914,3231,1.46,3232,4.829,3233,0.802,3234,0.802,3235,2.009,3236,2.288,3237,1.688,3238,2.288,3239,0.914,3240,2.872,3241,3.218,3242,0.802,3243,1.081,3244,2.009,3245,0.914,3246,0.914,3247,0.914,3248,0.914,3249,1.46,3250,0.914,3251,6.055,3252,1.46,3253,2.009,3254,0.63,3255,1.663,3256,2.817,3257,0.802,3258,0.914,3259,1.663,3260,2.61,3261,0.914,3262,0.914,3263,0.914,3264,1.663,3265,0.914,3266,1.326,3267,0.914,3268,2.872,3269,0.914,3270,0.729,3271,4.01,3272,2.247,3273,0.914,3274,2.872,3275,0.914,3276,1.663,3277,0.914,3278,0.914,3279,0.914,3280,0.914,3281,0.914,3282,2.288,3283,0.914,3284,1.663,3285,1.663,3286,1.663,3287,0.914,3288,5.425,3289,1.663,3290,0.914,3291,0.914,3292,0.802,3293,0.914,3294,0.674,3295,0.914,3296,0.914,3297,2.288,3298,0.802,3299,0.914,3300,5.04,3301,0.674,3302,0.914,3303,0.914,3304,3.271,3305,3.218,3306,0.914,3307,0.914,3308,2.288,3309,0.914,3310,0.914,3311,2.817,3312,0.914,3313,0.914,3314,0.914,3315,0.914,3316,0.914,3317,0.914,3318,1.663,3319,0.914,3320,2.288,3321,0.914,3322,0.914,3323,1.663,3324,0.914,3325,0.914,3326,0.914,3327,0.914,3328,0.914,3329,1.663,3330,1.147,3331,4.027,3332,0.914,3333,3.665,3334,0.914,3335,0.914,3336,1.46,3337,2.288,3338,2.817,3339,2.817,3340,2.817,3341,0.914,3342,2.872,3343,3.271,3344,0.914,3345,2.288,3346,0.914,3347,1.663,3348,0.914,3349,1.46,3350,3.271,3351,1.663,3352,2.817,3353,2.817,3354,0.914,3355,2.288,3356,3.271,3357,0.914,3358,0.914,3359,3.199,3360,2.288,3361,2.288,3362,1.663,3363,0.63,3364,0.914,3365,0.802,3366,0.914,3367,0.914,3368,2.009,3369,0.914,3370,0.914,3371,0.914,3372,0.914,3373,0.914,3374,2.288,3375,0.914,3376,0.802,3377,2.009,3378,1.663,3379,3.665,3380,5.649,3381,2.288,3382,1.663,3383,1.663,3384,1.663,3385,0.802,3386,0.914,3387,0.914,3388,0.914,3389,3.218,3390,1.663,3391,0.914,3392,0.914,3393,0.914,3394,0.914,3395,1.663,3396,0.914,3397,1.663,3398,0.914,3399,3.271,3400,0.914,3401,2.977,3402,0.914,3403,4.432,3404,0.914,3405,0.914,3406,0.914,3407,0.914,3408,1.663,3409,0.914,3410,2.817,3411,1.663,3412,0.802,3413,0.914,3414,0.914,3415,0.914,3416,0.914,3417,1.663,3418,0.914,3419,0.914,3420,0.729,3421,2.474,3422,0.914,3423,1.663,3424,0.914,3425,0.914,3426,2.009,3427,0.914,3428,0.914,3429,0.914,3430,0.914,3431,2.817,3432,0.914,3433,0.914,3434,0.914,3435,0.802,3436,0.802,3437,0.802,3438,0.914,3439,0.914,3440,0.914,3441,3.271,3442,0.914,3443,0.914,3444,2.817,3445,0.914,3446,0.802,3447,0.914,3448,0.914,3449,0.914,3450,0.914,3451,0.914,3452,2.817,3453,0.914,3454,0.914,3455,2.288,3456,0.914,3457,0.729,3458,2.288,3459,0.914,3460,0.914,3461,0.914,3462,0.914,3463,0.914,3464,0.914,3465,0.914,3466,0.802,3467,1.46,3468,0.914,3469,0.63,3470,1.663,3471,0.802,3472,0.914,3473,2.817,3474,0.914,3475,0.914,3476,1.663,3477,2.288,3478,2.288,3479,0.729,3480,1.663,3481,0.914,3482,2.288,3483,4.01,3484,0.914,3485,0.914,3486,1.663,3487,0.914,3488,0.914,3489,0.914,3490,0.914,3491,2.817,3492,2.288,3493,0.914,3494,3.271,3495,0.914,3496,0.914,3497,0.914,3498,0.914,3499,0.802,3500,0.914,3501,1.663,3502,1.663,3503,1.46,3504,2.288,3505,0.802,3506,0.914,3507,1.326,3508,2.288,3509,0.914,3510,1.46,3511,0.914,3512,1.663,3513,0.914,3514,0.914,3515,1.663,3516,6.607,3517,2.288,3518,0.914,3519,3.271,3520,4.829,3521,2.288,3522,0.914,3523,0.802,3524,0.914,3525,0.914,3526,2.817,3527,0.914,3528,2.288,3529,0.914,3530,0.914,3531,0.914,3532,0.914,3533,0.914,3534,0.914,3535,0.914,3536,2.817,3537,1.663,3538,0.914,3539,0.914,3540,2.288,3541,0.914,3542,1.663,3543,2.288,3544,1.663,3545,0.914,3546,0.914,3547,0.914,3548,1.663,3549,2.288,3550,0.914,3551,0.802,3552,0.914,3553,0.914,3554,1.663,3555,0.914,3556,0.802,3557,0.914,3558,0.914,3559,0.914,3560,0.914,3561,2.288,3562,1.663,3563,0.802,3564,0.914,3565,0.914,3566,2.817,3567,0.914,3568,2.288,3569,0.914,3570,0.914,3571,1.663,3572,0.914,3573,0.914,3574,0.914,3575,2.288,3576,1.663,3577,1.663,3578,0.914,3579,1.663,3580,4.01,3581,1.46,3582,2.288,3583,2.817,3584,0.802,3585,0.914,3586,1.663,3587,0.914,3588,2.288,3589,0.914,3590,0.914,3591,0.914,3592,0.914,3593,0.914,3594,0.914,3595,2.288,3596,1.663,3597,0.914,3598,1.663,3599,0.802,3600,0.914,3601,0.914,3602,1.663,3603,1.663,3604,0.914,3605,1.663,3606,0.914,3607,0.914,3608,0.729,3609,0.914,3610,2.288,3611,0.914,3612,0.914,3613,0.914,3614,0.914,3615,1.663,3616,2.288,3617,0.914,3618,0.914,3619,0.914,3620,0.914,3621,0.729,3622,1.663,3623,0.914,3624,0.914,3625,0.914,3626,0.914,3627,0.914,3628,0.914,3629,0.914,3630,0.914,3631,0.674,3632,0.914,3633,0.914,3634,0.914,3635,2.817,3636,0.914,3637,0.914,3638,1.663,3639,0.914,3640,0.914,3641,0.914,3642,0.914,3643,0.914,3644,0.914,3645,0.914,3646,0.729,3647,0.914,3648,0.914,3649,0.914,3650,0.802,3651,1.663,3652,0.914,3653,0.914,3654,0.914,3655,0.914,3656,0.802,3657,1.663,3658,0.914,3659,0.914,3660,0.802,3661,0.802,3662,0.594,3663,0.914,3664,1.663,3665,1.663,3666,2.872,3667,0.914,3668,0.914,3669,0.802,3670,0.914,3671,0.914,3672,2.288,3673,1.46,3674,0.914,3675,1.663,3676,1.663,3677,1.663,3678,0.914,3679,0.802,3680,0.802,3681,0.914,3682,0.802,3683,0.914,3684,0.914,3685,1.663,3686,0.914,3687,2.288,3688,0.914,3689,0.914,3690,0.914,3691,0.914,3692,0.914,3693,0.914,3694,0.914,3695,0.914,3696,0.914,3697,0.914,3698,0.802,3699,0.914,3700,0.729,3701,0.914,3702,0.914,3703,0.802,3704,0.914,3705,0.914,3706,0.914,3707,0.914,3708,0.914,3709,0.914,3710,0.914,3711,0.914,3712,0.914,3713,0.914,3714,0.914,3715,0.729,3716,0.802,3717,1.663,3718,1.46,3719,0.914,3720,0.914,3721,0.914,3722,0.914,3723,0.914,3724,0.914,3725,1.663,3726,0.914,3727,0.914,3728,0.802,3729,0.729,3730,0.914,3731,0.914,3732,0.729,3733,0.914,3734,0.914,3735,0.914,3736,0.914]],["title/modules.html",[86,2.236]],["body/modules.html",[25,0.009,55,0.007,56,0.009,57,0.007,85,4.274,86,2.329,114,4.027,119,4.027,257,4.274,260,4.274,261,4.274,262,3.63,263,4.274,884,4.943,1099,4.274,1361,4.274,1364,4.274,2156,5.647,3057,5.06,3737,8.688,3738,8.688,3739,7.777,3740,8.215]],["title/overview.html",[3741,4.747]],["body/overview.html",[2,1.02,25,0.011,55,0.006,56,0.008,57,0.006,84,1.344,85,5.412,86,1.847,87,2.176,88,2.75,89,2.75,90,2.526,91,2.033,92,2.254,93,4.316,94,4.316,95,4.923,96,3.587,97,2.632,98,2.176,113,2.428,114,5.509,115,4.316,116,4.316,117,4.316,118,4.316,119,5.229,120,4.801,121,4.181,128,2.254,257,5.89,258,4.316,259,4.316,260,4.923,261,4.923,262,4.801,263,4.923,467,4.21,519,4.583,558,1.847,562,4.316,563,4.316,564,4.316,879,4.316,880,4.316,881,4.316,989,5.046,1099,5.927,1100,4.316,1101,4.316,1102,4.316,1104,4.395,1361,5.847,1362,4.316,1363,4.316,1364,5.652,1414,4.638,1446,4.316,1447,4.316,1448,4.638,1766,3.921,1772,3.921,2031,3.921,2535,3.391,3741,3.921,3742,4.915]],["title/todo.html",[208,1.478,1599,2.723,1600,2.723]],["body/todo.html",[0,0.099,5,0.123,11,0.776,13,1.573,16,0.409,25,0.01,26,0.952,32,0.672,47,2.639,48,2.15,49,2.381,51,2.887,52,3.979,55,0.007,56,0.007,57,0.005,65,2.067,84,1.798,92,1.918,98,2.547,111,2.15,125,2.737,130,2.551,144,1.316,146,1.852,147,1.458,156,2.241,161,1.279,185,1.334,199,4.592,202,3.545,203,3.741,208,1.675,209,3.523,210,2.583,223,1.573,234,3.971,265,3.741,271,3.741,275,2.341,276,2.887,279,3.087,319,1.395,322,2.15,387,2.639,392,2.15,403,2.737,405,3.22,433,1.99,440,3.651,467,2.15,473,2.843,490,2.452,491,2.341,508,3.22,558,1.573,567,3.681,569,2.737,576,1.918,580,2.912,589,2.72,608,3.087,610,2.887,636,2.72,639,2.577,669,4.364,670,3.741,708,2.577,709,5.927,715,2.887,730,4.4,778,3.741,805,3.087,859,2.067,860,2.887,875,2.452,893,4.276,897,5.777,909,2.72,911,2.72,912,2.887,924,2.887,928,4.539,929,3.087,975,2.72,1112,2.72,1125,3.087,1185,3.087,1278,2.341,1335,2.241,1383,4.276,1468,3.087,1472,2.887,1527,2.887,1606,3.971,1611,3.087,1630,3.674,1666,3.674,1679,3.674,1708,4.364,1724,5.653,1725,3.087,1730,3.674,1853,2.577,1863,2.72,1909,3.087,1968,2.72,1982,3.338,2028,2.452,2052,3.674,2056,3.674,2064,3.338,2103,3.338,2139,3.338,2156,2.72,2159,3.087,2160,2.887,2166,2.72,2255,4.592,2287,2.887,2345,3.338,2358,3.338,2360,3.338,2463,2.72,2695,2.887,2726,3.338,2757,3.741,2790,3.338,2793,3.087,2941,3.674,2971,3.674,2972,3.338,3032,2.887,3033,2.577,3044,3.674,3062,3.087,3116,3.087,3119,3.338,3254,2.887,3292,3.674,3336,3.674,3420,3.338,3669,5.054,3715,4.592,3743,3.338,3744,4.184,3745,3.674,3746,3.674,3747,3.087,3748,3.338,3749,4.184,3750,4.184,3751,4.184,3752,5.054,3753,4.184,3754,4.539,3755,4.184,3756,4.184,3757,4.184,3758,4.184,3759,3.674,3760,4.184,3761,3.338,3762,4.184,3763,4.184,3764,4.184,3765,4.184,3766,3.674,3767,4.184,3768,4.184,3769,4.184,3770,4.184,3771,2.887,3772,3.674,3773,4.184,3774,4.184,3775,4.184,3776,3.674,3777,3.674,3778,4.184,3779,3.674,3780,4.184,3781,4.184,3782,4.184,3783,4.184,3784,4.184,3785,4.184,3786,5.777,3787,4.184,3788,4.184,3789,4.184,3790,4.184,3791,4.184,3792,4.184,3793,3.674,3794,3.674,3795,4.184,3796,5.755,3797,3.674,3798,4.184]],["title/miscellaneous/typealiases.html",[3004,2.399,3799,5.271]],["body/miscellaneous/typealiases.html",[10,0.533,16,0.581,25,0.01,29,2.246,32,0.902,55,0.007,56,0.008,57,0.007,137,2.622,139,3.198,146,2.483,147,1.369,185,1.3,205,3.087,289,4.534,312,4.296,319,2.647,320,2.793,342,3.445,374,1.101,578,4.14,579,5.237,580,2.483,582,5.565,596,5.565,597,5.565,617,6.056,741,3.871,743,5.565,744,6.335,747,5.565,748,3.871,749,4.812,1143,5.237,1159,4.14,1173,6.125,1228,4.476,1257,4.476,1258,4.476,1323,3.647,1701,4.927,1739,4.927,1741,4.476,2823,4.476,2824,5.565,2852,4.476,3004,3.647,3412,4.927,3800,5.611,3801,5.611,3802,5.611,3803,6.976,3804,6.976,3805,6.973,3806,5.611,3807,6.976,3808,6.125,3809,6.976,3810,4.927,3811,4.927,3812,5.611,3813,6.976,3814,5.611,3815,5.611,3816,5.611,3817,3.647,3818,5.611,3819,5.611,3820,5.611,3821,5.611]],["title/miscellaneous/variables.html",[1620,3.636,3004,2.399]],["body/miscellaneous/variables.html",[1,2.222,9,2.345,10,0.213,13,1.356,15,1.701,16,0.529,25,0.011,29,1.444,32,0.727,37,0.564,38,2.532,43,0.21,47,1.654,48,1.152,49,3.531,50,1.655,55,0.004,56,0.004,57,0.003,62,1.381,63,3.039,65,1.108,73,2.052,80,1.646,81,1.147,91,1.492,105,2.942,113,1.108,125,2.152,130,0.87,143,1.201,144,1.788,149,0.898,160,1.969,162,1.654,167,0.959,177,2.114,184,0.928,187,0.596,192,0.87,203,1.716,207,1.314,208,0.898,223,2.342,224,3.03,228,1.066,235,1.932,241,3.61,243,1.547,275,1.255,276,1.547,284,0.898,305,1.381,312,1.381,325,0.843,350,1.201,351,1.314,373,1.201,376,1.782,386,0.993,387,1.028,388,0.993,389,0.993,390,0.993,401,1.789,402,2.661,420,4.188,430,3.122,434,1.655,435,1.789,436,3.61,439,1.458,440,1.716,443,1.655,447,2.878,448,2.878,449,1.969,450,1.969,454,2.878,455,2.345,456,1.789,457,2.325,458,1.789,459,1.655,467,3.279,470,1.655,473,1.782,490,3.039,492,1.854,508,1.255,549,1.654,551,1.932,557,2.489,567,1.255,568,1.152,569,1.716,576,1.028,580,0.993,589,1.458,609,1.655,610,4.579,612,1.789,613,2.878,621,1.547,629,2.878,630,1.969,631,2.878,632,4.843,633,1.789,634,1.789,635,1.969,636,2.345,637,2.878,638,1.547,639,2.787,640,1.381,641,2.878,642,1.969,643,3.168,644,1.969,645,1.789,646,1.969,647,1.969,648,1.969,649,1.969,650,1.969,652,1.789,654,1.789,655,4.533,659,1.789,665,1.458,666,3.168,667,1.655,668,1.969,669,1.381,670,1.458,671,3.168,672,2.424,673,1.789,674,3.168,675,1.969,676,2.878,677,1.969,678,1.969,679,1.655,680,2.878,681,1.969,682,1.969,683,1.789,684,1.789,685,1.789,686,1.655,687,1.789,688,1.969,689,1.969,690,1.969,691,1.969,692,4.99,693,2.878,694,4.99,695,1.969,696,1.789,697,1.969,711,1.789,720,1.458,723,1.655,734,1.381,741,1.547,745,1.458,746,1.547,754,1.314,762,1.547,800,1.547,814,1.789,815,1.969,816,1.655,817,1.969,820,1.789,824,1.969,825,1.969,832,1.789,834,3.577,865,1.381,868,1.255,875,1.314,885,1.789,886,3.122,887,1.789,888,2.878,891,3.168,893,2.345,894,3.168,898,2.661,901,4.533,903,2.878,904,1.969,905,3.168,906,1.655,907,2.661,908,1.789,909,1.458,910,1.789,911,1.458,912,1.547,913,1.655,914,1.789,915,1.547,916,1.969,917,1.655,918,3.168,919,1.969,920,1.255,921,1.969,922,1.969,958,3.122,991,2.661,1022,1.789,1023,2.878,1111,1.547,1159,1.655,1168,1.655,1175,2.878,1207,2.878,1220,1.458,1305,1.655,1335,1.201,1372,3.371,1382,2.652,1388,1.789,1389,2.489,1504,2.114,1533,1.547,1542,2.661,1566,1.547,1620,1.547,1664,1.969,1673,3.168,1678,2.942,1708,1.381,1764,1.969,1845,1.458,1863,1.458,1911,1.655,2001,1.381,2028,1.314,2070,1.458,2139,1.789,2177,1.969,2197,1.789,2205,1.789,2237,1.969,2238,2.489,2250,3.92,2275,3.168,2287,1.547,2321,1.789,2434,1.969,2790,1.789,2800,1.969,2801,1.969,2813,1.969,2814,4.553,2815,3.168,2816,3.974,2818,1.789,2819,3.168,2820,2.878,2821,3.168,2823,1.789,2824,4.137,2825,3.974,2844,1.969,2845,3.974,2846,3.974,2847,3.974,2848,3.974,2852,1.789,2853,3.168,2854,1.969,2855,1.969,2856,3.168,2857,4.553,2905,1.655,3004,1.458,3005,2.489,3006,3.974,3007,5.604,3009,1.789,3032,3.577,3254,1.547,3748,1.789,3761,3.61,3766,1.969,3771,1.547,3786,1.969,3805,1.969,3808,1.969,3810,3.168,3811,3.974,3822,6.382,3823,2.243,3824,4.526,3825,2.243,3826,5.185,3827,4.526,3828,2.243,3829,2.243,3830,2.243,3831,2.243,3832,2.243,3833,3.168,3834,2.243,3835,2.243,3836,2.243,3837,2.243,3838,2.243,3839,2.243,3840,2.243,3841,2.243,3842,1.969,3843,2.243,3844,2.243,3845,2.243,3846,2.243,3847,2.243,3848,2.878,3849,1.969,3850,1.969,3851,1.969,3852,2.243,3853,2.243,3854,2.243,3855,3.168,3856,2.243,3857,2.243,3858,2.243,3859,2.243,3860,2.243,3861,1.969,3862,2.243,3863,2.243,3864,2.243,3865,2.243,3866,2.243,3867,2.243,3868,2.243,3869,2.243,3870,2.243,3871,2.243,3872,2.243,3873,2.243,3874,2.243,3875,2.243,3876,2.243,3877,2.243,3878,2.243,3879,2.243,3880,2.243,3881,2.243,3882,2.243,3883,2.243,3884,3.607,3885,3.607]],["title/additional-documentation/nestjs-application.html",[240,1.408,492,1.635,507,1.316,1307,1.513]],["body/additional-documentation/nestjs-application.html",[8,1.336,13,2.899,25,0.009,55,0.005,56,0.007,57,0.007,84,1.161,86,1.596,125,2.02,143,2.275,159,2.616,203,3.756,208,1.7,209,3.114,210,2.417,223,1.161,237,2.376,240,3.559,321,1.816,328,2.666,386,2.574,390,2.574,417,2.616,440,2.765,459,3.134,492,3.963,507,1.757,508,2.376,509,3.78,510,3.388,540,1.816,558,1.596,567,2.376,570,3.407,576,1.947,580,2.574,590,2.616,636,4.31,665,2.761,669,4.084,676,3.388,719,2.02,723,3.134,730,2.376,777,3.729,799,3.729,800,4.012,808,2.761,859,2.872,861,2.93,863,3.134,865,2.616,868,2.376,913,3.134,1033,4.012,1111,4.575,1112,4.31,1117,2.761,1121,3.388,1185,3.134,1307,2.765,1389,2.93,1469,2.761,1566,4.92,1678,5.227,1708,2.616,1724,3.388,1727,2.761,1802,3.729,1828,3.388,1853,2.616,1968,5.133,1982,3.388,1995,3.134,2000,2.376,2001,3.581,2024,5.29,2165,2.93,2166,2.761,2183,4.012,2363,5.106,2471,3.134,2512,5.106,2528,3.729,2561,5.29,2820,5.29,2905,3.134,3012,3.388,3014,3.388,3016,3.729,3031,4.892,3032,4.92,3033,4.084,3057,2.616,3082,3.388,3237,3.134,3242,3.729,3243,2.761,3253,3.729,3254,4.575,3300,3.729,3330,2.93,3401,2.93,3469,2.93,3556,3.729,3563,3.729,3700,3.388,3739,3.729,3759,3.729,3771,2.93,3772,5.822,3776,5.106,3777,5.106,3817,3.78,3833,3.729,3848,4.639,3849,3.729,3850,3.729,3851,3.729,3886,4.247,3887,3.388,3888,4.247,3889,4.247,3890,5.815,3891,3.388,3892,4.247,3893,6.631,3894,3.134,3895,4.247,3896,3.729,3897,4.247,3898,4.247,3899,4.247,3900,7.469,3901,4.247,3902,4.247,3903,3.729,3904,4.247,3905,4.247,3906,4.247,3907,4.247,3908,4.247,3909,5.815,3910,4.247,3911,4.247,3912,4.247,3913,4.247,3914,4.247,3915,4.247,3916,4.247,3917,4.247,3918,4.247,3919,4.247,3920,4.247,3921,4.247,3922,4.247,3923,3.134,3924,4.247,3925,4.247,3926,4.247,3927,4.247,3928,5.815,3929,3.729,3930,4.247,3931,5.815,3932,4.247,3933,4.247,3934,4.639,3935,3.729,3936,4.247,3937,4.247,3938,6.631,3939,5.815,3940,4.247,3941,4.247,3942,4.247,3943,3.729,3944,4.247,3945,3.388,3946,3.729,3947,4.247,3948,4.247,3949,4.247,3950,4.247,3951,4.247,3952,4.247]],["title/additional-documentation/nestjs-application/software-architecture.html",[507,1.316,1307,1.513,3083,2.348,3953,2.069]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.616,4,0.09,5,0.087,13,2.525,14,0.674,22,0.545,24,0.633,25,0.005,26,0.366,29,0.504,45,0.98,47,3.08,48,2.091,49,2.421,51,0.868,52,1.588,53,1.827,55,0.003,56,0.003,57,0.002,62,1.364,63,1.298,65,1.764,80,0.269,81,0.599,87,1.801,92,0.577,98,0.98,111,0.647,141,0.98,143,1.588,144,2.04,146,3.281,147,0.582,150,0.818,156,0.674,159,2.2,170,1.004,177,0.738,185,1.122,202,4.493,203,0.599,205,0.557,208,0.504,209,1.186,210,2.521,214,0.868,215,1.928,223,0.344,224,1.049,233,0.704,235,4.401,236,0.868,237,1.998,238,3.634,240,3.019,267,3.171,268,1.767,271,3.148,272,0.929,273,3.671,275,0.704,284,0.504,287,1.634,305,1.827,320,0.887,321,0.947,342,1.094,350,1.588,355,0.775,373,0.674,374,1.108,376,0.622,389,0.557,392,1.138,404,0.929,410,1.298,417,2.764,422,1.239,432,0.818,440,1.411,441,0.868,442,3.64,453,1.004,457,2.782,464,4.166,465,3.346,473,3.369,483,0.868,490,0.738,506,2.838,507,1.227,509,3.671,540,3.03,549,1.638,558,0.833,567,1.659,568,2.488,569,3.641,570,2.385,572,1.44,576,1.638,588,0.647,594,1.827,598,2.188,638,0.868,639,3.605,640,0.775,645,1.004,667,0.929,670,0.818,672,1.913,708,1.364,719,3.679,720,0.818,730,0.704,734,1.364,736,3.798,737,1.239,745,0.818,758,1.528,760,2.983,761,0.929,762,0.868,772,0.868,778,1.928,784,3.58,797,0.775,801,0.929,802,2.2,804,1.913,805,0.929,806,4.319,808,0.818,816,0.929,849,0.929,860,2.046,861,0.868,865,1.364,866,0.775,868,0.704,869,2.635,873,1.634,902,0.818,910,1.004,911,0.818,912,2.808,915,2.046,928,2.808,930,0.868,931,3.003,965,0.738,971,1.945,973,0.775,1117,0.818,1139,0.868,1213,0.818,1220,0.818,1249,0.868,1278,0.704,1307,0.599,1335,0.674,1382,1.298,1392,0.929,1423,2.2,1427,1.928,1459,2.757,1461,1.945,1462,3.247,1464,0.868,1469,3.148,1470,1.004,1472,0.868,1473,0.929,1489,5.294,1497,2.604,1504,2.63,1524,2.188,1533,0.868,1535,0.868,1536,1.004,1565,1.634,1603,1.528,1604,1.767,1610,1.004,1611,2.188,1614,2.366,1620,0.868,1621,2.808,1643,1.105,1652,1.105,1655,1.767,1657,1.105,1660,1.105,1698,1.105,1700,2.604,1725,0.929,1727,0.818,1736,1.004,1740,1.105,1741,1.767,1755,0.929,1757,2.093,1798,1.945,1817,6.513,1819,0.929,1824,1.767,1845,1.44,1848,2.046,1853,2.2,1863,0.818,1872,1.105,1873,1.105,1878,2.464,1880,5.382,1902,1.105,1910,1.634,1944,1.945,1968,1.44,1991,1.634,1995,0.929,2000,0.704,2007,2.604,2021,1.004,2027,1.004,2028,3.172,2042,3.003,2050,1.105,2051,2.188,2057,2.635,2061,0.868,2068,3.136,2075,3.096,2076,0.929,2080,1.105,2096,4.473,2099,1.105,2100,1.634,2103,1.004,2105,1.105,2111,1.105,2121,1.767,2126,2.366,2143,4.958,2159,2.188,2160,0.868,2161,1.004,2165,2.046,2166,1.928,2171,3.311,2173,3.311,2183,1.528,2202,1.004,2236,1.004,2243,0.868,2250,0.868,2251,3.574,2252,1.004,2263,1.945,2295,2.604,2299,2.646,2304,0.868,2314,1.945,2320,2.604,2355,1.105,2360,1.004,2365,0.929,2377,2.366,2379,1.004,2405,2.635,2407,1.004,2416,1.004,2463,2.917,2469,1.004,2471,0.929,2509,1.105,2516,1.105,2527,1.945,2549,2.046,2550,3.574,2560,1.945,2570,1.634,2584,1.634,2615,1.004,2649,1.004,2652,1.004,2656,3.136,2657,0.929,2664,2.366,2667,1.004,2680,1.105,2686,1.767,2715,1.105,2726,3.864,2740,1.105,2757,0.818,2767,1.105,2777,1.634,2798,1.945,2799,1.945,2990,1.767,3012,2.366,3018,2.046,3021,3.341,3022,2.464,3025,0.868,3028,1.767,3030,1.105,3031,0.929,3050,0.929,3057,1.364,3069,1.634,3082,1.767,3083,0.929,3093,1.945,3095,1.105,3098,1.105,3103,1.105,3106,1.105,3109,1.105,3119,1.004,3122,1.105,3133,1.105,3145,1.767,3146,3.311,3149,3.58,3152,1.634,3163,2.635,3176,2.808,3179,1.105,3184,1.105,3185,4.166,3204,0.818,3207,1.105,3209,1.945,3225,1.004,3227,2.604,3231,1.105,3233,1.105,3240,1.105,3241,2.604,3243,1.928,3251,1.105,3252,1.105,3260,4.947,3266,1.004,3268,1.105,3270,1.767,3272,1.004,3274,1.105,3294,0.929,3301,2.635,3305,1.105,3330,0.868,3331,1.105,3349,1.105,3359,1.004,3363,0.868,3377,1.105,3380,1.105,3385,1.105,3389,1.945,3401,0.868,3403,1.105,3421,1.105,3435,1.945,3436,3.574,3446,1.105,3457,1.004,3466,3.136,3467,1.105,3469,0.868,3471,1.105,3479,1.004,3499,1.105,3503,1.105,3505,1.105,3507,4.319,3510,1.105,3523,1.105,3551,3.941,3581,1.105,3599,1.105,3608,3.864,3631,4.454,3646,1.004,3660,1.105,3661,1.105,3662,3.671,3673,1.105,3703,1.945,3716,1.105,3732,1.004,3741,1.004,3743,1.767,3746,1.105,3747,3.311,3752,1.105,3779,1.945,3797,1.105,3891,1.004,3894,1.634,3923,0.929,3935,1.105,3953,4.819,3954,1.259,3955,1.259,3956,5.139,3957,5.414,3958,2.215,3959,2.966,3960,2.966,3961,4.107,3962,2.215,3963,2.604,3964,4.843,3965,1.259,3966,1.259,3967,2.635,3968,3.136,3969,1.259,3970,1.259,3971,1.259,3972,1.259,3973,1.259,3974,2.215,3975,2.215,3976,1.259,3977,1.259,3978,4.07,3979,1.259,3980,1.259,3981,2.966,3982,2.215,3983,1.259,3984,1.259,3985,1.259,3986,1.259,3987,6.228,3988,1.259,3989,1.259,3990,1.259,3991,1.259,3992,2.215,3993,4.488,3994,1.259,3995,1.259,3996,2.215,3997,2.215,3998,3.572,3999,2.966,4000,3.572,4001,1.259,4002,3.136,4003,3.136,4004,1.259,4005,1.259,4006,1.259,4007,1.259,4008,1.259,4009,1.259,4010,2.849,4011,2.215,4012,1.004,4013,2.604,4014,1.259,4015,1.259,4016,1.259,4017,6.718,4018,1.259,4019,6.197,4020,1.259,4021,1.945,4022,1.259,4023,1.259,4024,2.215,4025,1.105,4026,3.735,4027,5.414,4028,1.259,4029,2.966,4030,1.945,4031,2.215,4032,1.259,4033,1.259,4034,1.259,4035,1.259,4036,1.259,4037,1.259,4038,3.136,4039,2.215,4040,1.259,4041,1.105,4042,1.259,4043,1.259,4044,1.259,4045,1.105,4046,1.259,4047,2.604,4048,1.259,4049,1.259,4050,1.259,4051,1.259,4052,1.259,4053,1.259,4054,1.259,4055,1.105,4056,1.259,4057,2.966,4058,1.259,4059,1.259,4060,1.259,4061,2.849,4062,2.215,4063,1.259,4064,2.215,4065,2.966,4066,1.259,4067,1.259,4068,1.259,4069,1.945,4070,2.215,4071,2.966,4072,1.259,4073,1.259,4074,1.259,4075,1.259,4076,1.259,4077,1.259,4078,1.105,4079,1.259,4080,2.215,4081,1.259,4082,1.634,4083,1.259,4084,5.414,4085,1.259,4086,1.105,4087,1.004,4088,1.259,4089,1.259,4090,1.259,4091,0.929,4092,1.259,4093,1.259,4094,1.259,4095,1.259,4096,1.259,4097,2.215,4098,2.966,4099,1.259,4100,1.259,4101,1.259,4102,1.259,4103,2.215,4104,1.259,4105,1.259,4106,1.259,4107,1.945,4108,1.259,4109,1.259,4110,1.259,4111,2.215,4112,1.259,4113,1.259,4114,2.215,4115,1.259,4116,1.259,4117,1.105,4118,1.259,4119,1.259,4120,1.105,4121,1.259,4122,1.259,4123,2.215,4124,1.259,4125,1.259,4126,1.259,4127,1.259,4128,1.259,4129,1.105,4130,1.259,4131,1.259,4132,1.259,4133,1.105,4134,1.105,4135,2.966,4136,1.259,4137,1.259,4138,1.259,4139,1.259,4140,1.259,4141,1.259,4142,2.215,4143,1.259,4144,1.105,4145,1.259,4146,2.966,4147,1.259,4148,1.259,4149,1.259,4150,2.215,4151,1.259,4152,2.215,4153,1.259,4154,1.259,4155,1.259,4156,1.259,4157,1.259,4158,1.259,4159,1.259,4160,2.215,4161,1.259,4162,1.259,4163,1.259,4164,1.259,4165,1.259,4166,1.259,4167,1.259,4168,1.259,4169,7.23,4170,1.259,4171,1.259,4172,4.07,4173,1.105,4174,1.259,4175,1.259,4176,2.215,4177,1.259,4178,1.259,4179,1.259,4180,1.259,4181,1.259,4182,1.259,4183,1.259,4184,1.105,4185,1.259,4186,1.259,4187,1.259,4188,1.105,4189,1.259,4190,1.259,4191,1.259,4192,1.259,4193,2.215,4194,1.259,4195,1.259,4196,2.366,4197,1.259,4198,1.259,4199,1.105,4200,1.259,4201,1.259,4202,1.259,4203,4.07,4204,1.259,4205,1.259,4206,1.259,4207,1.259,4208,1.259,4209,1.259,4210,1.259,4211,1.259,4212,1.259,4213,1.259,4214,1.259,4215,1.259,4216,1.259,4217,2.215,4218,1.259,4219,1.259,4220,1.259,4221,2.215,4222,1.259,4223,1.259,4224,1.259,4225,2.215,4226,1.259,4227,1.259,4228,1.259,4229,1.259,4230,1.259,4231,1.105,4232,2.215,4233,1.259,4234,2.215,4235,1.259,4236,1.259,4237,1.259,4238,1.105,4239,2.215]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.051,507,1.157,1307,1.33,3953,1.818,4026,1.93]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.17,2,0.469,3,0.112,4,0.092,5,0.212,11,0.844,13,1.365,16,0.258,19,0.753,22,0.809,25,0.011,26,1.101,39,0.235,43,0.283,47,2.793,48,2.338,52,1.944,55,0.006,56,0.004,57,0.003,63,1.325,64,3.386,65,1.117,73,1.385,80,0.971,81,0.733,84,2.168,86,2.707,87,1,91,1.502,92,2.793,111,1.866,113,2.818,114,1.469,119,2.958,120,2.128,121,3.053,125,2.713,127,0.618,130,1.408,143,1.211,144,1.795,146,2.306,147,1.257,149,1.454,150,1.469,156,3.678,164,1.211,167,1.553,185,0.524,187,1.517,192,0.877,203,2.164,205,2.696,207,3.053,210,2.93,216,1.668,217,1.803,223,0.618,233,2.031,234,1.56,235,2.79,237,2.545,239,2.36,240,1,265,2.958,275,2.031,289,1.469,319,1.517,321,1.553,325,1.71,350,1.944,374,0.444,390,1,392,1.162,400,1.469,403,3.045,405,1.265,417,2.236,422,1.265,429,2.802,433,3.166,440,1.727,442,3.29,455,1.469,464,3.357,490,1.325,492,2.932,506,3.343,507,1.882,508,1.265,510,1.803,512,1.668,517,1.803,519,3.408,540,3.137,549,1.036,558,1.365,566,1.392,567,3.192,568,3.13,571,2.958,572,1.469,573,1.469,574,1.469,576,2.389,579,1.56,580,1,584,1.325,589,2.36,594,1.392,598,1.668,625,1.985,636,1.469,639,1.392,670,2.958,672,2.79,707,3.63,709,2.896,719,3.266,720,1.469,727,1.668,731,1.56,734,1.392,736,3.357,737,2.031,754,2.128,772,1.56,801,1.668,802,2.236,809,1.668,834,1.56,849,2.679,859,1.117,868,2.545,873,2.679,875,1.325,911,2.36,956,1.668,958,2.505,966,1.469,975,3.709,981,1.668,984,1.56,1000,1.985,1001,1.985,1002,1.985,1003,1.985,1004,1.985,1005,1.985,1014,1.803,1033,3.139,1111,1.56,1171,1.985,1213,1.469,1278,2.031,1335,1.944,1336,1.803,1372,1.469,1375,1.075,1382,1.325,1383,1.469,1391,1.803,1423,1.392,1459,3.263,1464,1.56,1466,1.803,1468,1.668,1489,4.327,1504,1.325,1527,3.139,1534,1.56,1588,1.56,1610,3.63,1614,1.803,1620,1.56,1621,3.139,1655,4.156,1681,1.985,1708,2.802,1757,2.128,1816,1.985,1848,2.505,1853,1.392,1863,3.96,1878,2.505,1880,1.668,1909,1.668,1911,1.668,1912,2.896,2000,2.031,2028,1.325,2057,1.668,2061,1.56,2063,1.803,2069,1.803,2070,2.36,2075,1.56,2076,1.668,2096,1.56,2121,3.63,2132,1.803,2171,1.668,2183,2.505,2188,2.679,2196,1.985,2198,1.985,2238,3.936,2250,2.505,2282,1.985,2289,1.803,2292,1.985,2299,1.469,2304,1.56,2307,1.985,2325,1.985,2326,1.985,2411,1.985,2458,1.985,2463,1.469,2534,1.668,2570,1.668,2591,2.896,2626,1.985,2632,1.803,2652,1.803,2662,1.803,2757,1.469,3009,1.803,3021,1.56,3024,1.985,3025,1.56,3031,3.843,3033,1.392,3042,1.985,3050,1.668,3051,1.985,3057,1.392,3063,1.985,3068,1.985,3069,3.843,3072,1.985,3074,1.985,3105,1.985,3121,1.803,3123,1.985,3152,1.668,3161,3.63,3163,1.668,3176,3.936,3185,1.668,3199,1.985,3204,1.469,3225,1.803,3234,1.985,3235,1.985,3237,1.668,3243,1.469,3257,1.985,3266,1.803,3272,1.803,3294,1.668,3301,1.668,3330,2.505,3342,1.985,3363,1.56,3401,1.56,3457,1.803,3469,1.56,3507,2.896,3584,3.995,3621,2.896,3631,2.679,3656,1.985,3662,1.469,3682,1.985,3732,1.803,3747,3.843,3748,3.63,3754,4.739,3761,3.63,3793,3.995,3817,2.958,3842,1.985,3855,1.985,3861,1.985,3891,1.803,3896,1.985,3934,2.896,3953,2.958,3956,1.985,3967,1.668,3987,3.63,4003,1.985,4019,6.055,4021,1.985,4025,3.188,4026,3.936,4041,1.985,4045,1.985,4047,1.985,4055,1.985,4061,1.803,4069,1.985,4078,3.188,4082,5.068,4086,3.995,4091,2.679,4117,1.985,4120,3.188,4134,3.995,4144,3.188,4184,3.188,4188,1.985,4196,1.803,4240,1.803,4241,2.261,4242,2.261,4243,4.55,4244,2.261,4245,5.622,4246,3.188,4247,2.261,4248,2.261,4249,3.631,4250,5.209,4251,2.261,4252,2.261,4253,2.261,4254,2.261,4255,2.261,4256,2.261,4257,2.261,4258,3.631,4259,2.261,4260,5.01,4261,2.261,4262,2.261,4263,1.985,4264,3.631,4265,4.55,4266,2.261,4267,2.261,4268,2.261,4269,2.261,4270,2.261,4271,2.261,4272,1.985,4273,3.631,4274,2.261,4275,1.803,4276,2.261,4277,2.261,4278,2.261,4279,2.261,4280,2.261,4281,2.261,4282,2.261,4283,2.261,4284,3.631,4285,3.631,4286,2.261,4287,2.261,4288,3.631,4289,2.261,4290,2.261,4291,2.261,4292,2.261,4293,2.261,4294,2.261,4295,2.261,4296,2.261,4297,2.261,4298,2.261,4299,2.261,4300,2.261,4301,2.261,4302,2.261,4303,2.261,4304,2.261,4305,2.261,4306,2.261,4307,2.261,4308,2.261,4309,2.261,4310,2.261,4311,1.668,4312,2.261,4313,2.261,4314,2.261,4315,2.261,4316,2.261,4317,1.985,4318,2.261,4319,2.261,4320,2.261,4321,2.261,4322,2.261,4323,2.261,4324,2.261,4325,1.985,4326,2.261,4327,2.261,4328,1.803,4329,2.261,4330,1.985,4331,2.261,4332,2.261,4333,2.261,4334,2.261,4335,2.261,4336,2.261,4337,2.261,4338,2.261,4339,2.261,4340,1.985,4341,2.261]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[507,1.157,1307,1.33,3754,1.93,3967,2.064,4342,2.456]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,1.928,22,0.432,25,0.01,32,0.571,46,2.835,49,1.47,52,3.224,53,3.159,55,0.004,56,0.006,57,0.004,64,2.31,73,1.364,80,1.094,81,1.33,98,1.573,130,1.378,137,1.928,144,2.501,147,1.007,149,1.423,156,3.9,167,2.989,170,4.093,177,2.083,187,0.945,205,2.271,208,1.423,209,2.747,210,2.934,235,4.021,236,4.153,237,1.988,238,2.083,239,2.31,240,3.223,265,2.31,268,4.093,271,2.31,272,2.622,273,2.31,314,1.826,322,1.826,325,2.263,335,3.335,342,1.756,348,2.44,374,0.698,404,4.441,422,3.688,442,1.826,453,2.835,465,2.31,473,1.756,483,2.452,490,2.083,492,2.636,506,4.504,540,1.52,549,2.352,568,4.024,573,2.31,574,2.31,576,2.352,638,2.452,639,2.189,651,2.452,665,2.31,672,2.747,719,3.324,727,2.622,731,2.452,800,2.452,804,1.903,866,3.707,868,2.87,920,1.988,924,2.452,956,2.622,1117,2.31,1220,2.31,1249,2.452,1260,3.121,1292,3.121,1375,1.69,1383,2.31,1423,2.189,1427,2.31,1459,3.224,1470,2.835,1489,2.31,1496,4.505,1522,2.452,1525,2.622,1566,2.452,1603,2.452,1606,2.452,1649,5.286,1651,2.622,1678,2.31,1684,3.121,1757,2.083,1853,3.159,1878,4.153,1910,2.622,1912,2.835,2034,2.835,2042,2.622,2070,2.31,2074,4.093,2132,2.835,2173,2.622,2203,3.121,2243,2.452,2262,4.093,2299,2.31,2304,4.822,2405,2.622,2416,2.835,2549,3.539,2591,4.093,2615,2.835,2632,4.093,2657,2.622,2757,3.335,2777,2.622,2916,2.835,3005,2.452,3018,3.539,3021,2.452,3022,3.539,3025,2.452,3060,2.835,3062,2.622,3116,2.622,3121,4.093,3146,5.373,3152,2.622,3163,2.622,3176,3.539,3204,2.31,3243,3.335,3294,3.785,3363,2.452,3401,3.539,3469,2.452,3608,2.835,3631,2.622,3650,3.121,3662,2.31,3700,2.835,3715,2.835,3728,4.505,3729,2.835,3743,2.835,3754,5.748,3817,2.31,3887,2.835,3923,2.622,3934,2.835,3953,4.285,3963,3.121,3967,3.785,3968,3.121,4010,2.835,4012,2.835,4019,5.157,4061,2.835,4082,2.622,4091,3.785,4133,3.121,4173,3.121,4199,3.121,4240,2.835,4245,4.505,4263,4.505,4311,2.622,4325,3.121,4328,2.835,4330,3.121,4342,3.121,4343,3.554,4344,3.554,4345,3.554,4346,3.554,4347,3.554,4348,3.554,4349,3.554,4350,3.554,4351,5.13,4352,3.554,4353,3.554,4354,3.554,4355,3.554,4356,3.554,4357,3.554,4358,3.554,4359,3.554,4360,3.554,4361,3.554,4362,3.554,4363,3.554,4364,3.554,4365,3.554,4366,3.554,4367,3.554,4368,3.554,4369,3.554,4370,3.121,4371,3.554,4372,3.554,4373,3.121,4374,3.554,4375,3.554,4376,3.554,4377,3.554,4378,3.554,4379,3.554,4380,5.13,4381,3.554,4382,3.554,4383,3.554,4384,3.554,4385,3.554,4386,3.554,4387,3.554,4388,3.554,4389,3.554,4390,3.554,4391,3.554,4392,3.554,4393,3.554,4394,3.554,4395,3.554,4396,3.554,4397,3.554,4398,3.554,4399,3.554,4400,3.554,4401,3.554,4402,3.554,4403,3.554,4404,3.554,4405,3.554,4406,3.554,4407,3.554,4408,3.554,4409,3.554,4410,3.554,4411,3.121,4412,3.554,4413,2.835,4414,3.554,4415,3.121,4416,3.554,4417,3.554,4418,3.554,4419,3.554,4420,2.835]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[267,1.723,507,1.157,1307,1.33,3662,1.818,3961,2.231]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.138,13,2.496,14,2.281,15,1.601,16,0.508,19,1.42,21,4.648,25,0.011,26,0.705,29,2.332,32,1.311,39,0.429,43,0.198,46,3.398,47,2.671,48,3.412,49,3.092,53,2.623,55,0.005,56,0.007,57,0.007,62,2.623,63,2.496,65,3.693,84,2.043,111,2.994,127,1.164,130,1.652,143,2.281,159,4.089,200,3.398,203,2.025,205,2.939,207,2.496,210,2.602,223,2.043,233,2.383,235,4.004,236,2.938,237,3.259,238,2.496,240,1.885,262,3.414,265,2.768,267,3.588,271,2.768,273,4.641,279,3.142,374,1.144,410,3.414,466,1.885,467,4.134,473,4.031,489,3.74,490,3.414,491,2.383,492,2.994,493,2.938,501,3.398,502,4.019,506,2.496,507,2.41,508,3.715,540,2.492,569,2.025,571,2.768,639,4.089,640,4.955,669,3.588,673,3.398,719,2.025,737,3.259,778,3.787,783,3.74,784,3.398,786,3.74,790,3.74,792,3.74,793,3.74,802,2.623,804,3.12,859,2.104,860,2.938,862,3.74,865,2.623,873,4.298,875,3.414,1013,4.298,1109,3.74,1267,3.74,1278,2.383,1382,2.496,1459,3.12,1464,2.938,1595,3.398,1668,3.142,1757,2.496,1845,2.768,2000,2.383,2028,2.496,2061,2.938,2171,3.142,2310,3.74,2365,3.142,2520,5.116,3033,2.623,3249,3.74,3376,3.74,3621,3.398,3662,2.768,3666,3.74,3894,3.142,3929,3.74,3961,4.648,4087,3.398,4129,3.74,4246,3.74,4272,3.74,4275,3.398,4311,3.142,4317,3.74,4328,3.398,4340,3.74,4420,3.398,4421,4.259,4422,7.139,4423,4.259,4424,4.259,4425,7.139,4426,3.74,4427,4.259,4428,4.259,4429,6.64,4430,4.259,4431,4.259,4432,4.259,4433,4.259,4434,5.826,4435,4.259,4436,4.259,4437,4.259,4438,4.259,4439,3.74,4440,4.259,4441,5.826,4442,4.259,4443,4.259,4444,4.259,4445,4.259,4446,4.259,4447,4.259,4448,4.259,4449,4.259,4450,4.259,4451,4.259,4452,4.259,4453,4.259]],["title/additional-documentation/nestjs-application/testing.html",[507,1.527,808,2.399,1307,1.755]],["body/additional-documentation/nestjs-application/testing.html",[0,0.088,2,0.483,13,1.991,16,0.165,22,0.564,24,0.496,25,0.011,37,0.585,39,0.151,47,1.067,49,0.962,55,0.006,56,0.004,57,0.003,62,2.857,63,3.392,73,1.891,80,0.793,81,0.47,84,1.985,86,1.397,87,2.053,91,1.919,98,1.03,111,2.383,113,1.149,120,2.177,130,1.441,131,2.043,132,2.043,138,0.932,141,1.03,143,3.305,144,1.459,146,1.03,147,0.457,148,1.246,154,2.043,156,2.484,167,3.211,193,0.732,203,3.977,205,1.645,209,1.99,210,2.773,214,1.605,216,1.717,223,1.448,234,1.605,235,2.484,237,1.302,239,2.415,240,2.344,262,1.364,269,1.856,317,1.302,319,1.765,348,1.107,357,1.433,376,1.149,388,1.03,392,1.909,403,1.107,433,2.519,440,3.733,442,2.975,444,5.083,456,4.618,457,2.975,458,4.225,459,4.271,464,1.717,465,2.415,470,1.717,473,1.149,492,1.196,502,1.605,506,3.392,508,1.302,540,1.984,546,1.513,551,1.246,566,1.433,568,1.196,569,2.206,576,2.428,588,1.909,594,2.288,608,1.717,640,1.433,651,3.994,669,3.801,670,3.443,672,2.836,708,1.433,710,1.856,716,2.563,719,3.199,731,1.605,757,1.856,758,1.605,802,2.288,804,1.246,808,5.103,859,1.149,863,1.717,866,1.433,867,2.043,869,3.908,875,2.718,886,1.605,898,1.717,900,2.043,901,2.964,906,1.717,907,1.717,908,1.856,909,1.513,913,1.717,924,4.258,927,2.964,930,1.605,951,1.605,952,2.741,956,2.741,965,2.177,987,1.513,989,1.433,1104,2.288,1111,3.994,1112,2.415,1117,3.443,1121,1.856,1123,1.856,1125,2.741,1210,3.763,1213,3.443,1220,2.415,1257,1.856,1258,1.856,1323,1.513,1335,1.246,1361,2.563,1381,2.043,1423,1.433,1459,2.484,1468,1.717,1472,1.605,1489,4.373,1504,1.364,1514,1.717,1522,3.654,1524,1.717,1525,2.741,1527,5.179,1533,3.994,1534,1.605,1536,1.856,1621,3.654,1651,1.717,1676,3.263,1689,1.856,1690,2.043,1710,2.043,1717,5.083,1727,1.513,1736,1.856,1757,1.364,1763,5.687,1793,2.043,1835,2.043,1845,1.513,1853,2.288,1854,1.856,1876,4.225,1880,1.717,1909,1.717,2000,4.136,2028,4.256,2042,2.741,2061,4.258,2063,1.856,2069,1.856,2070,1.513,2075,2.563,2096,2.563,2109,2.043,2126,1.856,2160,1.605,2161,1.856,2188,4.553,2215,3.701,2240,1.856,2243,1.605,2250,2.563,2255,1.856,2287,1.605,2304,2.563,2321,3.701,2407,1.856,2449,4.073,2471,1.717,2535,2.563,2549,3.994,2570,1.717,2577,5.083,2584,2.741,2757,1.513,2774,2.043,2905,2.741,2972,1.856,3005,3.654,3018,2.563,3022,1.605,3057,2.288,3060,1.856,3062,1.717,3083,1.717,3104,2.043,3116,1.717,3145,1.856,3146,3.422,3149,1.856,3176,1.605,3185,1.717,3195,2.043,3203,2.043,3204,1.513,3237,2.741,3243,3.443,3244,2.043,3260,2.964,3270,1.856,3298,2.043,3301,1.717,3330,1.605,3359,1.856,3363,1.605,3368,2.043,3420,1.856,3426,2.043,3437,5.083,3479,1.856,3679,2.043,3680,2.043,3698,4.651,3747,3.422,3754,1.605,3771,1.605,3794,2.043,3817,1.513,3887,1.856,3903,2.043,3923,4.779,3987,1.856,4002,2.043,4010,1.856,4013,3.263,4019,5.247,4026,4.258,4030,2.043,4082,3.908,4087,1.856,4091,3.908,4238,3.263,4240,2.964,4260,2.043,4275,1.856,4311,3.908,4370,2.043,4373,2.043,4411,5.083,4415,2.043,4420,1.856,4426,2.043,4439,2.043,4454,3.716,4455,2.327,4456,2.327,4457,2.327,4458,2.327,4459,2.327,4460,2.327,4461,2.327,4462,2.327,4463,2.327,4464,2.327,4465,2.327,4466,3.716,4467,2.327,4468,3.716,4469,2.327,4470,2.327,4471,2.327,4472,3.716,4473,2.327,4474,2.327,4475,2.327,4476,4.639,4477,3.716,4478,3.716,4479,2.327,4480,2.327,4481,5.296,4482,2.327,4483,2.327,4484,2.327,4485,2.327,4486,2.327,4487,2.327,4488,2.327,4489,3.716,4490,3.716,4491,3.716,4492,2.327,4493,3.716,4494,3.716,4495,2.327,4496,3.716,4497,3.716,4498,3.716,4499,2.327,4500,2.327,4501,2.327,4502,3.716,4503,2.327,4504,2.327,4505,2.327,4506,2.327,4507,2.327,4508,2.327,4509,3.716,4510,3.716,4511,2.327,4512,2.327,4513,2.327,4514,2.327,4515,2.327,4516,2.327,4517,2.327,4518,2.327,4519,2.327,4520,2.327,4521,2.327,4522,2.327,4523,2.327,4524,2.327,4525,2.327,4526,2.327,4527,2.327,4528,2.327,4529,2.327,4530,2.327,4531,2.327,4532,2.327,4533,2.327,4534,2.327,4535,2.327,4536,2.327,4537,2.327,4538,2.327,4539,2.327,4540,2.327,4541,2.327,4542,2.327,4543,2.327,4544,2.327,4545,2.327,4546,2.327,4547,2.327,4548,2.327,4549,2.327]],["title/additional-documentation/nestjs-application/decisions.html",[507,1.527,1307,1.755,4413,2.944]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.451,25,0.009,47,2.582,55,0.007,56,0.008,57,0.007,147,1.105,156,3.744,185,1.305,187,1.497,193,1.772,202,3.468,210,2.771,215,3.66,238,3.3,302,3.3,390,3.094,457,2.894,492,2.894,569,2.678,573,4.544,574,3.66,588,2.894,712,3.66,716,3.885,719,2.678,859,2.782,874,4.945,902,4.942,909,3.66,924,3.885,1213,4.544,1278,3.15,1360,4.493,1459,3.016,1495,5.577,1504,4.097,1603,3.885,1727,3.66,1824,4.493,1848,3.885,1938,4.945,1995,5.61,2000,3.15,2024,4.493,2028,3.3,2156,4.942,2175,4.945,2238,3.885,2252,4.493,2299,3.66,2377,5.577,2400,4.945,2463,3.66,2609,4.945,2662,4.493,3204,3.66,3646,4.493,3729,4.493,3894,4.155,3953,3.66,4012,5.577,4026,3.885,4038,4.945,4196,4.493,4231,4.945,4413,5.577,4550,5.631,4551,5.631,4552,5.631,4553,5.631,4554,5.631,4555,5.631,4556,5.631,4557,5.631,4558,5.631,4559,6.991,4560,5.631,4561,5.631,4562,5.631,4563,5.631,4564,5.631,4565,5.631,4566,5.631,4567,5.631,4568,5.631,4569,5.631,4570,5.631,4571,5.631,4572,5.631,4573,5.631]],["title/additional-documentation/nestjs-application/vscode.html",[507,1.527,1307,1.755,3945,2.944]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.218,25,0.01,52,3.954,55,0.007,56,0.009,57,0.007,203,3.511,239,4.003,240,3.268,267,3.793,440,2.929,492,3.794,580,3.268,1139,4.249,1459,3.298,1469,4.003,1504,3.609,1535,4.249,1565,4.544,1651,4.544,1708,4.547,1991,4.544,2000,3.445,2070,4.003,2289,5.89,2631,4.913,3032,4.249,3033,3.793,3034,6.483,3161,4.913,3254,4.249,3365,5.408,3718,6.944,3745,5.408,3771,5.094,3817,4.003,3848,4.913,3943,5.408,3945,5.89,3946,5.408,4574,6.158,4575,6.158,4576,6.158,4577,6.158,4578,6.158,4579,6.158,4580,6.158,4581,6.158,4582,6.158,4583,6.158]],["title/additional-documentation/nestjs-application/git.html",[507,1.527,1307,1.755,3067,2.944]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.008,56,0.009,57,0.008,275,3.76,389,2.974,802,4.139,804,3.599,1372,4.368,1382,3.938,2695,4.636,2793,5.735,3067,6.543,4107,5.901,4584,6.72,4585,6.72,4586,6.72,4587,6.72,4588,6.72]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":920,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2811,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2822,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2817,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1633,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1210,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2803,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2805,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2849,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1305,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":2802,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1875,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2031,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["12.0.0",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1772,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1316",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1766,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1667,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1761,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1755,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1856,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1752,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3317,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1876,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.0.3",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["2.2.6",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1745,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3079,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2339,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1795,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1874,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1836,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1837,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1731,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2334,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3767,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1522,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1788,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":3742,"title":{},"body":{"overview.html":{}}}],["3607",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2535,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2860,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3020,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2828,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3779,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1689,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2806,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2827,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1690,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1749,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2829,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3396,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3415,"title":{},"body":{"license.html":{}}}],["7",{"_index":1485,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1654,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1650,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8020",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":3904,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":1890,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":1887,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1648,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1843,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1861,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1735,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1767,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1662,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":3912,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1311,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3041,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":416,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":625,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":3921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":184,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1192,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1537,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":3071,"title":{},"body":{"index.html":{}}}],["ability",{"_index":3457,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3069,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3341,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3708,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":233,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3537,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3536,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3759,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":2698,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":442,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":344,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2236,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2251,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1196,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3381,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3712,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3151,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3340,"title":{},"body":{"license.html":{}}}],["according",{"_index":3703,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":759,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["accountid",{"_index":757,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3716,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3280,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3586,"title":{},"body":{"license.html":{}}}],["action",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2631,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":846,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3197,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3627,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3608,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3436,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3175,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1382,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["added",{"_index":868,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1652,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":507,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":3901,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1193,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1199,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3661,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3170,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2263,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2007,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2111,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3315,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3463,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3699,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3464,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3077,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3567,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3277,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2528,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3330,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3368,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3736,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3644,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3686,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3595,"title":{},"body":{"license.html":{}}}],["aims",{"_index":3954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":822,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3574,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1651,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1423,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1565,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["along",{"_index":3343,"title":{},"body":{"license.html":{}}}],["already",{"_index":1139,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3134,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3392,"title":{},"body":{"license.html":{}}}],["always",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1741,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":3929,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3538,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3127,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3303,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3353,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3184,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":425,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({description",{"_index":1160,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1181,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1179,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1035,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1177,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1174,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":3978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":983,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":997,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1425,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":739,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":279,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":278,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":276,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":277,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3798,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3189,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":3914,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":240,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":603,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3894,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3667,"title":{},"body":{"license.html":{}}}],["apply",{"_index":800,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":3993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3335,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3707,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3811,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../create",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3006,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3810,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3805,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../sorting.ts",{"_index":3808,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":3008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../task.schema.ts",{"_index":3822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":3812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":3896,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":3937,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":3942,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":264,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":497,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":499,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1591,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":488,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":609,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":773,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":559,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":798,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":776,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":787,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":785,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":791,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":782,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":789,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":882,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":855,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":705,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1596,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2818,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":814,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2823,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":810,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":755,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":826,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":122,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":129,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":152,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":142,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":135,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":511,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":885,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":578,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":565,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":401,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1022,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1159,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1167,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1183,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1161,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1166,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1176,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1178,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1182,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1180,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1172,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1165,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1186,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1163,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1184,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1169,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1352,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1562,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1587,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":949,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":957,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":967,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":970,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":980,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":961,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":309,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":318,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":331,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1530,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":945,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":936,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":938,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":939,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":941,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":942,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":943,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":944,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":940,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":937,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":946,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":935,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":947,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1356,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":741,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1344,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1529,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1572,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1043,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1051,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1049,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1055,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1053,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1345,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1580,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1105,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1190,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1118,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1124,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:14",{"_index":1141,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:25",{"_index":1131,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:40",{"_index":1135,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:45",{"_index":1127,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:49",{"_index":1133,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1228,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1254,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1239,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1235,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1246,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1252,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1245,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1248,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1237,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1241,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1243,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1502,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1510,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1507,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1509,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1511,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1508,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1513,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1512,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1410,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1412,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":285,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":292,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":291,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":297,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":290,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":848,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:11",{"_index":851,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:8",{"_index":852,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1390,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1396,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1394,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1399,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1402,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1406,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1401,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1404,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1405,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1433,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":1435,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1452,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":1454,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:15",{"_index":1456,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1449,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1515,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1520,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1518,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1358,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1359,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1365,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":232,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":245,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":247,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":246,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":244,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":248,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":461,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1531,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1541,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1540,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1304,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1312,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1315,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1322,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1326,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1329,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1328,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1327,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1325,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1334,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":2850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":183,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":191,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":222,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":226,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":225,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":229,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":189,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":795,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":3814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":3818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/sorting.ts",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":3819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/interceptor/constants.ts",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/interceptor/test/create",{"_index":435,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/interface/pagination.interface.ts",{"_index":1303,"title":{},"body":{"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3953,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3731,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["aren't",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":619,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":3986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3690,"title":{},"body":{"license.html":{}}}],["around",{"_index":3743,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3605,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3616,"title":{},"body":{"license.html":{}}}],["array",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":538,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["arrays",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3312,"title":{},"body":{"license.html":{}}}],["asc",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asking",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3124,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3556,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":1891,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3261,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3682,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3711,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3503,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3718,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3514,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1859,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3487,"title":{},"body":{"license.html":{}}}],["aud",{"_index":765,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":764,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":811,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":126,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":512,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":520,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":528,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":530,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":524,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":522,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":526,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":819,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":825,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":824,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":991,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":998,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authenticated",{"_index":762,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2250,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":992,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentication/interface/jwt",{"_index":993,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authguard",{"_index":812,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":813,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":85,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3486,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1524,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":124,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1108,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1255,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":114,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":120,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3479,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3581,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3620,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3492,"title":{},"body":{"license.html":{}}}],["auto",{"_index":3919,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":1674,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2534,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":3057,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["avoiding",{"_index":3970,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3101,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2776,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2170,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3241,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1116,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1340,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1343,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":234,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":570,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":182,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":231,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":230,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":198,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":298,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":300,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":299,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":301,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3270,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":1916,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["become",{"_index":3136,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3147,"title":{},"body":{"license.html":{}}}],["before",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":3915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3042,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3290,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":269,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1536,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2235,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["believe",{"_index":3614,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":3996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3298,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3130,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3817,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3715,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["better",{"_index":911,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1621,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3370,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1467,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["bob",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":981,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":753,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":2851,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2302,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":1806,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1673,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brb",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3739,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3737,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":636,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1488,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":3903,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1643,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3749,"title":{},"body":{"todo.html":{}}}],["business",{"_index":235,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1194,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1201,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1195,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1203,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3081,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2400,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3059,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":465,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":932,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["called",{"_index":2549,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":471,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2042,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2070,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3347,"title":{},"body":{"license.html":{}}}],["case",{"_index":506,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3146,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":612,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":616,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1555,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":3994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1839,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":870,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3518,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":742,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3476,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3529,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1611,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changed",{"_index":861,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1601,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1603,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1828,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3454,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3113,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":131,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":136,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":710,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3052,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3065,"title":{},"body":{"index.html":{}}}],["checks",{"_index":2471,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2541,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["choosing",{"_index":3671,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1851,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3296,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3304,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3710,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3571,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3583,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":561,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":803,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2304,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2255,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3404,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":3938,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":1941,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":238,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":907,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clipboard",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3066,"title":{},"body":{"index.html":{}}}],["close",{"_index":927,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":3706,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3012,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3782,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":2771,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2167,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":115,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":118,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":117,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":116,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":258,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":259,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":562,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":563,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":564,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":879,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":881,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":880,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1100,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1101,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1103,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1102,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1362,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1363,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1446,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1447,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2436,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2449,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":722,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":3982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3646,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":302,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":293,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":286,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3656,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1421,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3141,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3354,"title":{},"body":{"license.html":{}}}],["command",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3219,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3439,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2202,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3596,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3064,"title":{},"body":{"index.html":{}}}],["common",{"_index":2916,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3266,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3097,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":633,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3362,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3369,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3630,"title":{},"body":{"license.html":{}}}],["compile",{"_index":459,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3248,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3051,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":873,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["compliance",{"_index":3552,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3287,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":3931,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1817,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["component(s",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":3987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3192,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1655,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3662,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["conditioned",{"_index":3624,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1525,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1372,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1725,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('request_timeout",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":3944,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":266,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2527,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":929,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1657,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2355,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1834,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3540,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3689,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3505,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2027,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":3935,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3334,"title":{},"body":{"license.html":{}}}],["const",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3279,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":600,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1324,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1122,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":134,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":518,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1593,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(newsrepo",{"_index":1234,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":288,"title":{},"body":{"classes/Course.html":{}}}],["constructor(private",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":311,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":605,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1517,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":498,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":242,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3634,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1694,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3631,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":3975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3047,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3507,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":321,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3593,"title":{},"body":{"license.html":{}}}],["context",{"_index":473,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2023,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3448,"title":{},"body":{"license.html":{}}}],["contract",{"_index":3974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3502,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3640,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3104,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3580,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3582,"title":{},"body":{"license.html":{}}}],["control",{"_index":2667,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3585,"title":{},"body":{"license.html":{}}}],["controller",{"_index":433,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":999,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1426,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller.ts",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1056,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1107,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1450,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3212,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["converted",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3198,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3618,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3455,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3206,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3501,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3096,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3090,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2079,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3158,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3092,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3080,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3167,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3293,"title":{},"body":{"license.html":{}}}],["core",{"_index":265,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1378,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1109,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":257,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2061,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3684,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2577,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3251,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3390,"title":{},"body":{"license.html":{}}}],["count",{"_index":1007,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1143,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1152,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3572,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":3820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3196,"title":{},"body":{"license.html":{}}}],["country",{"_index":3610,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":3984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":284,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course.entity",{"_index":853,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1465,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":850,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":308,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1505,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":317,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":305,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1474,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3639,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3705,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3600,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3060,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2001,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3181,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1000,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":955,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1236,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":866,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":613,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":622,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2810,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2812,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":329,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":903,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":926,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":400,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":638,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":454,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":404,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1849,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":717,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":322,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":335,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3224,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":267,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2320,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":201,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3532,"title":{},"body":{"license.html":{}}}],["current",{"_index":1168,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":913,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":958,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1003,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1002,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":508,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3383,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3653,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3387,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":270,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":877,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":3961,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3360,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3687,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":719,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":2028,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1384,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":888,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:47",{"_index":892,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:57",{"_index":896,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":887,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1461,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":484,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1714,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":928,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_url",{"_index":1371,"title":{},"body":{"modules/ServerModule.html":{}}}],["dbs",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dburl",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dd",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1460,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":777,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":781,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":792,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3034,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3928,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3316,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3669,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4413,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["declare",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3493,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":729,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":187,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":3955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3306,"title":{},"body":{"license.html":{}}}],["default",{"_index":223,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1308,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1539,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3681,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3131,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3636,"title":{},"body":{"license.html":{}}}],["define",{"_index":205,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":3891,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3161,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":447,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":451,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":434,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":951,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":960,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1238,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1126,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":959,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["deletedid",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":1902,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3460,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3597,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dependecy",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3887,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":592,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3606,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["describe('get",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":3995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":3976,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":3967,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3398,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3095,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designing",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":3965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3660,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1592,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1594,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3023,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":635,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2099,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3430,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":3909,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3014,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developers",{"_index":3120,"title":{},"body":{"license.html":{}}}],["development",{"_index":2160,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3073,"title":{},"body":{"index.html":{}}}],["di",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1366,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3788,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3659,"title":{},"body":{"license.html":{}}}],["different",{"_index":2463,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3484,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3291,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3405,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3185,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1491,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":3755,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3327,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3672,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3481,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":199,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3622,"title":{},"body":{"license.html":{}}}],["display",{"_index":3361,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":323,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1506,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":412,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3208,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2473,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":3897,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguishing",{"_index":3663,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3088,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3722,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3625,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3159,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1706,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3775,"title":{},"body":{"todo.html":{}}}],["docu",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":405,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":1968,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documented",{"_index":1605,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1712,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":916,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1420,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3754,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1472,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3432,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3548,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4342,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":403,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1064,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1440,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1083,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1078,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1066,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1442,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1438,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1583,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1060,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1585,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1350,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1087,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1076,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1068,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1070,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1090,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1072,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1074,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1062,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1092,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1085,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1081,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":628,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1010,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":709,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["due",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1400,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3382,"title":{},"body":{"license.html":{}}}],["duration",{"_index":463,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":460,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2103,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3429,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3262,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":894,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":202,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1111,"title":{},"body":{"modules/NewsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2075,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3180,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":593,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":341,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3702,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3324,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3307,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3720,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["efforts",{"_index":3565,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3726,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1137,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1125,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":2262,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3378,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3733,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1220,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1207,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":715,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["enabled",{"_index":711,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":725,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enables",{"_index":3200,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3139,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2188,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2126,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3598,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3329,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":143,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3632,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3352,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3648,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":147,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":137,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1123,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1386,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":972,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":431,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":421,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1619,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3762,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2161,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3282,"title":{},"body":{"license.html":{}}}],["err",{"_index":1556,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":783,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":495,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":610,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":615,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":620,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":623,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":560,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":280,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":260,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":256,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3244,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":3989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2726,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2580,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2340,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1649,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3087,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2063,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3179,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3260,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2064,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":490,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":738,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":611,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":640,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":3973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3419,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1889,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2274,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3590,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3285,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3641,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3236,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1112,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1117,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":3900,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3191,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1533,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":470,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3566,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3325,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":845,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1566,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2203,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":767,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expect(data.length).tobe(0",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3437,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2300,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":766,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":823,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":595,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3276,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2307,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3752,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":590,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3674,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3513,"title":{},"body":{"license.html":{}}}],["extend",{"_index":712,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3621,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3365,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3211,"title":{},"body":{"license.html":{}}}],["external",{"_index":1880,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":817,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":324,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":1497,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":735,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3499,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":415,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2143,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitating",{"_index":3654,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3286,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1841,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":1886,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failure",{"_index":3697,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3281,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3424,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3046,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3177,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["favicon",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3434,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":125,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":532,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["feathers/feathers.module",{"_index":123,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":121,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":557,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":630,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2859,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2861,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":591,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":119,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":577,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":582,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":519,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":597,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1668,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3045,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3934,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3345,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3948,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1595,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":307,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3751,"title":{},"body":{"todo.html":{}}}],["figure",{"_index":3992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":3922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1708,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":491,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1023,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1029,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1027,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1034,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1227,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":494,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1197,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1032,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3524,"title":{},"body":{"license.html":{}}}],["find",{"_index":580,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":581,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":952,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":963,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1128,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1229,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1240,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1453,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1455,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1516,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1519,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["finding",{"_index":750,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1119,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1132,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":747,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":953,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":968,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1120,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1134,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1230,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1242,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1385,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1588,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["firstname",{"_index":1573,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3677,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1724,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":3920,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1613,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2056,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1031,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3267,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1728,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3031,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2657,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1469,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":3941,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3323,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":732,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2140,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2686,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":502,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2363,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3373,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":889,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":890,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1389,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3084,"title":{},"body":{"license.html":{}}}],["framework",{"_index":3957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3082,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3102,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1623,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3310,"title":{},"body":{"license.html":{}}}],["full",{"_index":1727,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":268,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3449,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3005,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3401,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":343,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":3939,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1737,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2173,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["generalerror",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3258,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2072,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["generated",{"_index":3933,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":969,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1411,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":586,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":132,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":151,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":437,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getnewspermissions",{"_index":1231,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1244,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":133,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":513,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":521,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getpermittedtargets",{"_index":514,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["getpermittedtargets(userid",{"_index":523,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1205,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1232,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1247,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":604,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":601,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1233,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1250,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":1599,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":515,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":525,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getuserschoolpermissions",{"_index":516,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":527,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getusertargetpermissions",{"_index":517,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":529,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3067,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3890,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3342,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1534,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":566,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3348,"title":{},"body":{"license.html":{}}}],["global",{"_index":275,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalerrorfilter",{"_index":493,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":799,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["globals",{"_index":2177,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":704,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3076,"title":{},"body":{"license.html":{}}}],["go",{"_index":3030,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3062,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3152,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3473,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3153,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3494,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3271,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3543,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3740,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3400,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3714,"title":{},"body":{"license.html":{}}}],["group",{"_index":1490,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":1850,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1471,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1224,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1494,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1014,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guidelines",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1564,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1464,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":236,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2360,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handling",{"_index":271,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":3985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3284,"title":{},"body":{"license.html":{}}}],["header",{"_index":820,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3138,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hello",{"_index":452,"title":{},"body":{"controllers/DelayController.html":{}}}],["help",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":634,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":2196,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3587,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":849,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":3972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":3981,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["hints",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":2941,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3520,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3480,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1846,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1463,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1391,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1393,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1408,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1480,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":3988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2068,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2243,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":3723,"title":{},"body":{"license.html":{}}}],["host",{"_index":618,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3407,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3776,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3425,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2165,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":333,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3086,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3017,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3725,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":241,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/mikro",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3781,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":3950,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":3951,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":3949,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":3757,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":251,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":768,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":740,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":754,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":185,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1336,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1338,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3612,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":501,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identity",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":243,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2434,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":775,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":575,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":860,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3243,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2171,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":481,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3635,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":598,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["importer",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3578,"title":{},"body":{"license.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3504,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3638,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1219,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3132,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3691,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3694,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3085,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3688,"title":{},"body":{"license.html":{}}}],["include",{"_index":197,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3238,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3195,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2240,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3372,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":718,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3137,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3655,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3428,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1768,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3500,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3363,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3748,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1679,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3546,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3511,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1854,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3173,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3440,"title":{},"body":{"license.html":{}}}],["inewsproperties",{"_index":368,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":751,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":310,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1575,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":313,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1058,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1346,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1348,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1187,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1353,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1355,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1590,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1354,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3412,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":509,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3544,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3575,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3188,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":200,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1663,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":867,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3569,"title":{},"body":{"license.html":{}}}],["inject",{"_index":589,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":923,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":925,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":127,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"overview.html":{}}}],["injected",{"_index":571,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":863,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":802,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":239,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["install",{"_index":3253,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3444,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3458,"title":{},"body":{"license.html":{}}}],["instance",{"_index":716,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":632,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2774,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":1853,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3024,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3337,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1717,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3105,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3328,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3728,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3650,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3203,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3207,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":468,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":469,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":455,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":283,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":261,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3384,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3562,"title":{},"body":{"license.html":{}}}],["interface",{"_index":374,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"interfaces/User.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":558,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"interfaces/User.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3450,"title":{},"body":{"license.html":{}}}],["internal",{"_index":350,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":624,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3701,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3250,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3265,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":572,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2652,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2615,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3886,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3744,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3358,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":794,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1367,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3273,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1036,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":631,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":427,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":408,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":629,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1037,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1042,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1316,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1313,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1306,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1038,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1039,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1030,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1569,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1024,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1568,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1028,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1280,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":770,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":428,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":406,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":419,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":414,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":769,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2024,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":637,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":878,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["it('should",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3222,"title":{},"body":{"license.html":{}}}],["items",{"_index":1701,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3461,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":749,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3771,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3039,"title":{},"body":{"index.html":{}}}],["job",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2550,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":1938,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2905,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2139,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":771,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":809,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":105,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":815,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":763,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1606,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":3898,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3245,"title":{},"body":{"license.html":{}}}],["key",{"_index":1287,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":3821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":3446,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3199,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3093,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3119,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3602,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3609,"title":{},"body":{"license.html":{}}}],["known",{"_index":1912,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["knows",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3049,"title":{},"body":{"index.html":{}}}],["language",{"_index":2469,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3366,"title":{},"body":{"license.html":{}}}],["last",{"_index":1589,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1574,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3666,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":3943,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3190,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3164,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3573,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":3979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3747,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1630,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2416,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3730,"title":{},"body":{"license.html":{}}}],["lean",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":3795,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1532,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":567,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3785,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3126,"title":{},"body":{"license.html":{}}}],["legend",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lern",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2715,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":847,"title":{"classes/Lesson.html":{}},"body":{"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":1407,"title":{},"body":{"classes/Task.html":{}}}],["lessonid",{"_index":1403,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":854,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1476,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3143,"title":{},"body":{"license.html":{}}}],["level",{"_index":2570,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3483,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3187,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3235,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3420,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3075,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3168,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3169,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3171,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3099,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3547,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3491,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3541,"title":{},"body":{"license.html":{}}}],["limit",{"_index":796,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3685,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3675,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3482,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1819,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3263,"title":{},"body":{"license.html":{}}}],["links",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3772,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":312,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3570,"title":{},"body":{"license.html":{}}}],["living",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3760,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1852,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1718,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3015,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2198,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":626,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":778,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":786,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3773,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":467,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":614,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":475,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":857,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":883,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":281,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":627,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":262,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":273,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":462,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":476,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":472,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1489,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1470,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2458,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3746,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3050,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2472,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3692,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3695,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":3983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1225,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3375,"title":{},"body":{"license.html":{}}}],["made",{"_index":3133,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2425,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":3766,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2379,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2295,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2560,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3240,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":931,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3301,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1567,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":1824,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3750,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3588,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2100,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":303,"title":{},"body":{"classes/Course.html":{}}}],["manytomany({fieldname",{"_index":294,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":330,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":334,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1848,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1044,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1048,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1045,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1050,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":996,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1418,"title":{},"body":{"controllers/TaskController.html":{}}}],["mapping",{"_index":4026,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1046,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1052,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1347,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1434,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1581,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1047,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1054,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3633,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3489,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3498,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3166,"title":{},"body":{"license.html":{}}}],["master",{"_index":2021,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":510,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3288,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3462,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1660,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1317,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1321,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1310,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maybe",{"_index":910,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3778,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3506,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3070,"title":{},"body":{"index.html":{}}}],["means",{"_index":3163,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3309,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3320,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3333,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3346,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3223,"title":{},"body":{"license.html":{}}}],["member",{"_index":535,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["members",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":886,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3220,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3676,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3202,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3074,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1802,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3558,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1665,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3275,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":2972,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":594,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2119,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2411,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2680,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1113,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1115,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":193,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":897,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3770,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":918,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":921,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":922,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":898,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forroot",{"_index":1381,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":904,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":919,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":891,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1318,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1319,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1320,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1309,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3004,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3488,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1764,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1218,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2205,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocked",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2561,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":422,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3160,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3226,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2701,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3351,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3128,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3193,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":3889,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":84,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":900,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1368,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1374,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1379,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1380,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1369,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1377,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1373,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":909,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":906,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongod.geturi",{"_index":908,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongod.stop",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongodb",{"_index":902,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":884,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{}}}],["mongomemoryserver",{"_index":901,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongoose",{"_index":1383,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1757,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3530,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1466,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":448,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2516,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":736,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["named",{"_index":3068,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["names",{"_index":975,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["naming",{"_index":3793,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["nanoid",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1743,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3364,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1493,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2405,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3021,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3252,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1462,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nest",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":3784,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":3893,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":3899,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":3902,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":3932,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":3917,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":3918,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":3892,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":3905,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":3910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":3907,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":3913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":3930,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":3925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":3927,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":3924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2609,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":443,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":492,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":3940,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":446,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":426,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":445,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":856,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3098,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":150,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["new",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":319,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1065,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1084,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1264,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1067,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1061,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":402,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1571,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":424,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":407,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":413,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1570,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":423,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":418,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1088,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1069,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1071,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1284,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1073,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1075,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1063,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":371,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1086,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1080,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Submission.html":{},"interfaces/User.html":{}}}],["news:10",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":361,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":363,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":358,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":332,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":337,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":345,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":352,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":353,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":354,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":356,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":349,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":336,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":360,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":346,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1289,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1114,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1263,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1258,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1175,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1189,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1257,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":948,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1271,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":964,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":962,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1006,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1277,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1011,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1274,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":995,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1004,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1009,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1005,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1099,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1104,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":994,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1145,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstarget",{"_index":743,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1129,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":139,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":989,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1282,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1269,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":485,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1492,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2790,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3013,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2159,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3394,"title":{},"body":{"license.html":{}}}],["none",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1297,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":1910,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3423,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1602,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":196,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":531,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{},"interfaces/User.html":{}}}],["notfoundexception(`the",{"_index":1387,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3542,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3214,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3210,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3531,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3527,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3477,"title":{},"body":{"license.html":{}}}],["november",{"_index":3078,"title":{},"body":{"license.html":{}}}],["now",{"_index":483,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":487,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3032,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3665,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2252,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3019,"title":{},"body":{"index.html":{}}}],["o",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2223,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":1971,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1156,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1335,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":306,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1288,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":430,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":186,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{}}}],["objectid.isvalid(value",{"_index":1342,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":3645,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3409,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3311,"title":{},"body":{"license.html":{}}}],["observable",{"_index":474,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3393,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3539,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2034,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1498,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["of.ts",{"_index":3813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3125,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3414,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3397,"title":{},"body":{"license.html":{}}}],["official",{"_index":3228,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1499,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["old",{"_index":1873,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1521,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["once",{"_index":3962,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1278,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1483,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1484,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":895,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":2238,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":3911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3698,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3402,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3246,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2758,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2050,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3148,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3652,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1666,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":917,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":893,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1473,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["orderby",{"_index":1500,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3554,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3174,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":3964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":1937,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2704,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":924,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":3952,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":194,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":195,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":899,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3029,"title":{},"body":{"index.html":{}}}],["others",{"_index":731,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":915,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2365,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3294,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["over",{"_index":2377,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2321,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":489,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":274,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3741,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1835,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3584,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1171,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2358,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3357,"title":{},"body":{"license.html":{}}}],["packages",{"_index":3758,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3239,"title":{},"body":{"license.html":{}}}],["page",{"_index":1307,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1314,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["paginate",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["pagination",{"_index":965,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationmodel",{"_index":1130,"title":{"interfaces/PaginationModel.html":{}},"body":{"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["paginationquery",{"_index":966,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":987,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1012,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1432,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3727,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3517,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3594,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1793,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1013,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":584,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1095,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1096,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1261,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1098,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1097,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1094,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2080,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2282,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":984,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3176,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":289,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1563,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3232,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3201,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3268,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party",{"_index":3403,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3560,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":727,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1422,"title":{},"body":{"controllers/TaskController.html":{}}}],["passport",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":2349,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":338,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":982,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":979,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3516,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3579,"title":{},"body":{"license.html":{}}}],["path",{"_index":608,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2237,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":432,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["payload",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{}}}],["payload.ts",{"_index":756,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payment",{"_index":3626,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3410,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3413,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3063,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["performance",{"_index":1769,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3259,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3526,"title":{},"body":{"license.html":{}}}],["permission",{"_index":342,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1302,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":141,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1301,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3339,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3371,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3142,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1526,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3453,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2132,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2632,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1698,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["personal",{"_index":1656,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3643,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3379,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3391,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3117,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1684,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":707,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1597,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1339,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3399,"title":{},"body":{"license.html":{}}}],["plain",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3564,"title":{},"body":{"license.html":{}}}],["point",{"_index":409,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3721,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2626,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2095,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1495,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":976,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3417,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3388,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3355,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3700,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2051,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["post",{"_index":956,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3764,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3322,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3037,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3100,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3599,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices/layers/orm",{"_index":3769,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3091,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3157,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3561,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3225,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":950,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["preload",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":871,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2197,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3218,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3485,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2233,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3563,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3112,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3628,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":188,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":3963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3528,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1659,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":466,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["problems",{"_index":1991,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3027,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3445,"title":{},"body":{"license.html":{}}}],["process",{"_index":2407,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3617,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3249,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3380,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":1982,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3629,"title":{},"body":{"license.html":{}}}],["program",{"_index":3107,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3332,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3734,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3233,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3118,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3713,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3292,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3318,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3623,"title":{},"body":{"license.html":{}}}],["project",{"_index":1604,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2118,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3221,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3213,"title":{},"body":{"license.html":{}}}],["promise",{"_index":149,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise((resolve",{"_index":449,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1273,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promisify",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3183,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3545,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3194,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":192,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":227,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":314,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1577,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1579,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":316,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3121,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1538,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3302,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3344,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":3956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3466,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3680,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":457,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":875,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":869,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":272,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3478,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3522,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3668,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3670,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":441,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3490,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3150,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3336,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1033,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1150,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["pull",{"_index":2200,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3256,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3426,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3615,"title":{},"body":{"license.html":{}}}],["put",{"_index":2757,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2179,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3535,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3679,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1213,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1217,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1091,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1089,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1093,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1457,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1501,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["querys",{"_index":1424,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":973,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["readable",{"_index":3376,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3604,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3469,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reason",{"_index":3613,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3389,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3533,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3115,"title":{},"body":{"license.html":{}}}],["received",{"_index":3359,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3549,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3619,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3452,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3611,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3172,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3229,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":596,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3717,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1740,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2105,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":3971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1710,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":355,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":357,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":2662,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3111,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3162,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2971,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3647,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3474,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3356,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3269,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2275,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3521,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":417,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":1995,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3295,"title":{},"body":{"license.html":{}}}],["release",{"_index":1676,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3154,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3144,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3349,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3155,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3777,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3603,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3408,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3109,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3649,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3651,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3475,"title":{},"body":{"license.html":{}}}],["remove",{"_index":730,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1612,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3693,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1973,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1872,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1909,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["repo",{"_index":1527,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1256,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1106,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1451,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2512,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":3926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["repositories",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3442,"title":{},"body":{"license.html":{}}}],["req",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":569,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1388,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":806,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":1911,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":818,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('./tsconfig.json",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":734,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1281,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3350,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3018,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":723,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3178,"title":{},"body":{"license.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3433,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1136,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3326,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3789,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3551,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1664,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":3895,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3790,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":464,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1285,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3319,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3508,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2620,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3140,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3456,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":971,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1503,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":3969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3053,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3704,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3657,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2787,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3122,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3678,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2314,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":761,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":758,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["rollback",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3459,"title":{},"body":{"license.html":{}}}],["room",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":206,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":439,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1730,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["routes.test.js",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3568,"title":{},"body":{"license.html":{}}}],["rss",{"_index":351,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1878,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1678,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["runner",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1535,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3247,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":477,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":479,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3719,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3577,"title":{},"body":{"license.html":{}}}],["same",{"_index":2299,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":536,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["sample",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["samplecontroller",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleservice",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1915,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3756,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1121,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1140,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3406,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2591,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1681,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["school",{"_index":325,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":348,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":347,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1349,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1351,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1057,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1077,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1170,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":398,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":745,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":411,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2166,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1360,"title":{},"body":{"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":588,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1147,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1148,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":599,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1151,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1294,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":858,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1191,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1202,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1204,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1200,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1198,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1206,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1291,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1268,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["scopes",{"_index":974,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3254,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1736,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3186,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3129,"title":{},"body":{"license.html":{}}}],["secret",{"_index":816,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3300,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3374,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1614,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":3780,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3763,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2799,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3592,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3576,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1608,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3165,"title":{},"body":{"license.html":{}}}],["send",{"_index":1696,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":505,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["sentry",{"_index":2052,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3416,"title":{},"body":{"license.html":{}}}],["separate",{"_index":865,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3044,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2076,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":3968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["serialization",{"_index":3753,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2175,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":190,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3016,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":859,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1370,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3783,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1357,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1361,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":2713,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3242,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.findallforuser(userid",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.provider",{"_index":533,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/User.html":{}}}],["service.provider.ts",{"_index":579,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":587,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":583,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":606,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":607,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":568,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3683,"title":{},"body":{"license.html":{}}}],["session",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":804,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":876,"title":{},"body":{"injectables/Logger.html":{}}}],["sets",{"_index":2109,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":450,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2289,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["setup",{"_index":708,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["shall",{"_index":3305,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3103,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1863,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":986,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1413,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":988,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":985,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1041,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1144,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/pipes",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1208,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TaskRepo.html":{}}}],["shared/repo/interface/pagination.interface",{"_index":1142,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":1944,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3735,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3443,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3028,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplicity",{"_index":3797,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simulates",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3642,"title":{},"body":{"license.html":{}}}],["single",{"_index":737,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":797,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":733,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":3787,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2767,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3083,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3427,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3283,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3297,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3732,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1149,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":2853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortordermap",{"_index":3807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortordervalue",{"_index":3809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":326,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3908,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1173,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":3980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3386,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3110,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3467,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":146,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3094,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2121,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3231,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3664,"title":{},"body":{"license.html":{}}}],["specify",{"_index":914,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3658,"title":{},"body":{"license.html":{}}}],["split",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":249,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":250,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":480,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["stabilisation",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":3977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1677,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3227,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3230,"title":{},"body":{"license.html":{}}}],["start",{"_index":3033,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1600,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":3906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2310,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2215,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3274,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3510,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["states",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":328,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":3916,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3338,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1514,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1496,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3123,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["still",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":930,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":1892,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1700,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":2824,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":3966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":872,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1040,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":573,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["structures",{"_index":874,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1392,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["student_create",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1395,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":287,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3036,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3072,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":3991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":772,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3557,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3550,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3589,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3299,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1376,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1482,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1398,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1478,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1481,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3264,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3395,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3438,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3555,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["succesful",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2520,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3145,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3601,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3447,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":145,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3796,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3745,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3470,"title":{},"body":{"license.html":{}}}],["support",{"_index":2156,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3888,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2702,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3108,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3637,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3509,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3696,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3738,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1419,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["symmetric",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1618,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1286,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2096,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2656,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":617,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1813,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":304,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3025,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2069,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3422,"title":{},"body":{"license.html":{}}}],["tap",{"_index":478,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":320,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["target.targetids",{"_index":1216,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1299,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1214,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1215,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":420,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":140,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetids",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetmodel",{"_index":138,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1251,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1295,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["targets",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1298,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{},"interfaces/User.html":{}}}],["task",{"_index":1375,"title":{"classes/Task.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course?.color",{"_index":1443,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1441,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1444,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1439,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1397,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1436,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1437,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1445,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskcontroller",{"_index":1409,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmapper",{"_index":1417,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1431,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodel",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1364,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1448,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1416,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["tasks",{"_index":1427,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1430,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskschema",{"_index":2848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1429,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":1414,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":372,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":399,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":746,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["teardown",{"_index":3765,"title":{},"body":{"todo.html":{}}}],["tech",{"_index":3947,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":639,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3308,"title":{},"body":{"license.html":{}}}],["technology",{"_index":3958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":3936,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["tells",{"_index":3215,"title":{},"body":{"license.html":{}}}],["template",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3272,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3515,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3534,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3525,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3512,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2074,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":440,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":456,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":436,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":438,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3055,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tested",{"_index":3923,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":808,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":444,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":203,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1816,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":204,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2368,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["third",{"_index":3331,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1211,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1209,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1226,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1212,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1559,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1223,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1221,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1222,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1283,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1262,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1300,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1296,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.code",{"_index":252,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.content",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1330,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(course",{"_index":1475,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1477,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1479,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1487,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1157,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1154,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1146,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1158,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1155,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":169,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1153,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1576,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1275,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1270,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1293,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":534,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.lastname",{"_index":1578,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.limit",{"_index":1333,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1260,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1266,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1276,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1267,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1259,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":482,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":486,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":255,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":934,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":315,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1290,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1272,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1279,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1265,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1001,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1021,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1008,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":933,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.request.app",{"_index":602,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.skip",{"_index":1332,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1528,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1428,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":254,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1331,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":253,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validationerrors",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2777,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3472,"title":{},"body":{"license.html":{}}}],["thr",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2508,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["through",{"_index":3204,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1558,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1557,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3289,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3038,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3040,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":410,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":805,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(milliseconds",{"_index":1561,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1554,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":807,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1560,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2509,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1162,"title":{},"body":{"classes/NewsResponse.html":{}}}],["tiny",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":208,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICurrentUser.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1026,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["toggle",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1647,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3257,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1323,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":784,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3496,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3495,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3497,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2057,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3205,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3451,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3553,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":720,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1337,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":724,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":721,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":862,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3411,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3314,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2740,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3761,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2664,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typ",{"_index":821,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":774,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3799,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1188,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1610,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":2814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1015,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3435,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":574,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1468,"title":{},"body":{"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":990,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1415,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":2990,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":500,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":228,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3156,"title":{},"body":{"license.html":{}}}],["understand",{"_index":3960,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unhandled",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":3990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":504,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{}}}],["unit",{"_index":2000,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3058,"title":{},"body":{"index.html":{}}}],["universal",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3441,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3278,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3182,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2761,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3468,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":752,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1110,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3523,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1845,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":954,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1253,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":977,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1185,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":978,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":327,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":359,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2751,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":748,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1138,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":503,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":2287,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2325,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":496,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1459,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usefactory",{"_index":905,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":3724,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":144,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.repo.ts",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.tostring",{"_index":537,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.test.js",{"_index":3056,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user/class",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userid",{"_index":148,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["userids",{"_index":295,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":296,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1584,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1582,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1586,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1059,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1079,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1082,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1164,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["userrepo",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":760,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/UserInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1486,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2584,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":458,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":576,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["util",{"_index":2326,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2292,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2737,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v2",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3786,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3791,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":728,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":801,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1598,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":706,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":714,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":282,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":263,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":713,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":429,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1341,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":224,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":744,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1739,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":2649,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1620,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3089,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":779,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":788,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":793,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":1763,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1810,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1609,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3106,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1504,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1249,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":340,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3465,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3519,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3768,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":339,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3035,"title":{},"body":{"index.html":{}}}],["void",{"_index":621,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3367,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3794,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":3945,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3792,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":3946,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3321,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3709,"title":{},"body":{"license.html":{}}}],["want",{"_index":3116,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":780,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":790,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1458,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3217,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3216,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3774,"title":{},"body":{"todo.html":{}}}],["way",{"_index":912,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3377,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3729,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1523,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1738,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3022,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3559,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":864,"title":{},"body":{"injectables/Logger.html":{}}}],["whether",{"_index":3431,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":726,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3237,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3418,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3234,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["widespread",{"_index":3135,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2345,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2793,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2257,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3048,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3313,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3061,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3114,"title":{},"body":{"license.html":{}}}],["within",{"_index":237,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2183,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3043,"title":{},"body":{"index.html":{}}}],["work",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3255,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2695,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["works",{"_index":1025,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":453,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3591,"title":{},"body":{"license.html":{}}}],["wraps",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writeerrorlog",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3673,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3026,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3385,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":585,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3054,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3607,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants)],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Hello World!';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tvalidate(payload: JwtPayload): JwtPayload {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MikroOrmModuleSyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            MikroOrmModuleSyncOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MikroOrmModuleSyncOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [\n\t\t/* NewsController\n\t\t * to enable:\n\t\t * - unskip e2e tests\n\t\t * - execute migration news_add_target_schools (in migrations/scheduled)\n\t\t * - update backup/setup/news.json from db after migration has been executed\n\t\t */\n\t],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:25\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:40\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationModel } from '@shared/repo/interface/pagination.interface';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: PaginationModel = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: PaginationModel): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationModel.html":{"url":"interfaces/PaginationModel.html","title":"interface - PaginationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationModel {\n\treadonly skip?: number;\n\treadonly limit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tNewsModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\n\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { PaginationModel } from '@shared/repo';\nimport { Counted } from '@shared/domain/types';\nimport { Task, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: PaginationModel = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task } from '../entity';\n\n// filter tasks older than 3 weeks\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : REQUEST_TIMEOUT\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        permissions\n                                \n                                \n                                        schoolId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n26.2.2 - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n26.2.1 - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n26.2.0 - 2021-06-01\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/sorting.ts\n            \n            variable\n            SortOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/interface/pagination.interface.ts\n            \n            interface\n            PaginationModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.7.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^6.0.1\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../sorting.ts)\n                        \n                        \n                            SortOrderValue   (apps/.../sorting.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/sorting.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortOrderValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../main.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../main.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../main.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/interceptor/test/create-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTestModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/interceptor/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/domain/types/sorting.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tasc: 'asc',\n\tdesc: 'desc',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process. \nIt improves the code quality and ensure that the code operates correctly especially after refactoring. \n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer. \nThey prove that the database queries are executed correctly. \nUse case tests operate on logic layer. \nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application. \nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks \nthe expected status codes and the structure of the received objects.\n\nTesting Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing. \nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests. \n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state. \n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries. \nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function. \nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nDefine MongoMemoryServer\nCreate Nest JS testing module: \n2.1 with MikroOrmModule defining entities which are used in tests.\n2.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    beforeAll(async () => {\n        mongod = new MongoMemoryServer();                               (1)\n        const dbUrl = await mongod.getUri();\n        const module: TestingModule = await Test.createTestingModule({  (2)\n             imports: [\n                 MikroOrmModule.forRoot({                               (2.1)\n                     type: 'mongo',\n                     clientUrl: dbUrl,\n                     entities: [News, CourseNews, ...],\n                 }),\n              ],\n             providers: [NewsRepo],                                     (2.2)                          \n      }).compile();\n      repo = module.get(NewsRepo);                            (3)\n      orm = module.get(MikroORM);\n      em = module.get(EntityManager);\n    })Post conditions (afterAll)\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await orm.close();\n        await mongod.stop();         \n    });\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects. \nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application. \nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story). \n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called. \nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions     it('should search for news by empty scope ', async () => {\n         const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n         await service.findAllForUser(userId, scope, pagination);    (2)\n         const expectedParams = [targets, false, pagination];\n         expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n     });\n\nE2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below \nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside mapping) inside a controller, use the logic layer instead. Mapping can be unit tested.\n\nPreconditions\n\nCreate Nest testing module\n\nImport ServerModule as the whole\n\nOverride authentication using JwAuthGuard\n\n1 Override authorized user with the mocked user data\n\nOverride other services for example for authorization\n\nCreate and initialize the whole Nest Application using createNestApplication()\n\nGet Orm and Entity Manager from module\n\n beforeAll(async () => {\n     const module: TestingModule = await Test.createTestingModule({  (1)\n         imports: [ServerModule],                                    (2)\n     })\n         .overrideGuard(JwtAuthGuard)                                (3)\n         .useValue({\n             canActivate(context: ExecutionContext) {\n                 const req: Request = context.switchToHttp().getRequest();\n                 req.user = {                                        (3.1)\n                         userId: '0000d224816abba584714c9c',\n                         roles: [],\n                         schoolId: '5f2987e020834114b8efd6f8',\n                         accountId: '0000d225816abba584714c9d',\n                 };                                      \n                 return true;\n             },\n         })\n         .overrideProvider(AuthorizationService)                     (4)\n         .useValue({\n             checkEntityPermissions() {},\n             getEntityPermissions() {\n                 return ['NEWS_VIEW', 'NEWS_EDIT'];\n             },\n         })\n         .compile();\n\n     app = module.createNestApplication();                           (5)\n     await app.init();\n     orm = module.get(MikroORM);                           (6)\n     em = module.get(EntityManager);\n });\n\nClean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
