var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.129,1,3.294]],["body/classes/ApiValidationError.html",[0,0.155,1,5.076,2,1.211,3,0.138,4,0.116,5,0.079,6,6.816,7,5.324,8,2.025,9,6.287,10,0.306,11,0.998,12,3.428,13,3.408,14,5.011,15,4.399,16,3.038,17,0.418,18,1.337,19,6.93,20,6.93,21,1.383,22,5.956,23,6.166,24,0.944,25,5.956,26,0.884,27,0.006,28,0.52,29,0.561,30,7.518,31,1.879,32,4.003,33,5.324,34,5.303,35,5.324,36,1.014,37,5.324,38,5.324,39,5.324,40,5.324,41,1.298,42,5.324,43,3.549,44,0.275,45,4.597,46,1.045,47,5.324,48,0.13,49,4.908,50,2.151,51,4.908,52,3.646,53,4.145,54,2.662,55,4.349,56,4.349,57,2.848,58,5.324,59,0.004,60,0.004]],["title/classes/ApiValidationErrorResponse.html",[0,0.129,61,3.819]],["body/classes/ApiValidationErrorResponse.html",[0,0.161,1,6.301,2,1.256,3,0.143,4,0.12,5,0.082,8,2.072,10,0.317,11,1.021,13,3.488,15,4.502,16,2.818,17,0.367,21,1.434,24,0.763,26,0.917,27,0.006,28,0.539,29,0.582,30,7.646,43,5.097,44,0.309,48,0.135,52,3.731,53,5.225,54,2.761,56,4.509,59,0.004,60,0.004,61,6.022,62,7.646,63,5.521,64,1.917,65,5.194,66,4.367,67,4.992,68,4.885,69,7.803,70,6.176,71,6.602,72,6.176,73,4.767,74,5.521,75,6.176,76,1.592,77,6.176,78,6.176,79,6.176,80,7.803,81,7.803,82,6.176,83,1.159,84,1.452,85,7.803,86,6.176]],["title/interfaces/AppendedAttachment.html",[87,0.53,88,3.051]],["body/interfaces/AppendedAttachment.html",[3,0.153,4,0.128,5,0.088,8,2.51,10,0.339,11,1.065,27,0.006,28,0.577,36,1.225,48,0.144,59,0.005,60,0.005,87,1.044,88,5.437,89,1.923,90,4.224,91,5.675,92,6.292,93,4.396,94,4.396,95,5.016,96,4.396,97,4.396,98,4.396,99,5.437,100,4.224,101,4.396,102,5.016,103,5.416,104,5.416,105,5.016,106,4.423,107,4.224,108,4.396,109,4.396,110,4.396]],["title/modules/AuthModule.html",[111,1.314,112,3.613]],["body/modules/AuthModule.html",[0,0.172,3,0.153,4,0.128,5,0.088,27,0.006,44,0.352,46,1.161,48,0.145,59,0.005,60,0.005,111,2.163,112,7.296,113,2.57,114,3.49,115,5.914,116,5.914,117,5.914,118,6.696,119,7.03,120,6.696,121,4.089,122,3.023,123,2.835,124,6.616,125,3.49,126,3.564,127,8.145,128,5.106,129,6.616,130,5.914,131,5.914,132,6.616,133,4.601,134,5.452,135,6.616,136,5.914,137,6.616]],["title/modules/AuthorizationModule.html",[111,1.314,138,3.441]],["body/modules/AuthorizationModule.html",[0,0.174,3,0.155,4,0.13,5,0.089,27,0.006,44,0.334,46,1.174,48,0.147,59,0.005,60,0.005,111,2.179,113,2.601,114,3.516,121,4.119,122,3.059,123,2.869,125,3.516,126,3.59,138,6.997,139,5.985,140,5.985,141,5.985,142,5.985,143,6.715,144,6.23,145,6.428,146,6.695,147,4.018,148,6.695,149,6.695,150,3.541,151,5.985]],["title/injectables/AuthorizationService.html",[144,3.051,152,0.935]],["body/injectables/AuthorizationService.html",[0,0.117,3,0.104,4,0.087,5,0.06,10,0.231,17,0.339,18,1.109,21,1.045,24,0.775,26,1.176,27,0.006,28,0.691,29,0.746,36,1.043,41,1.42,44,0.286,46,0.79,48,0.099,59,0.004,60,0.004,76,1.474,83,0.938,84,0.838,144,3.897,145,5.755,150,2.381,151,4.025,152,1.194,153,1.571,154,4.025,155,2.522,156,6.527,157,5.649,158,7.301,159,4.503,160,4.503,161,4.503,162,3.032,163,4.806,164,4.684,165,5.817,166,4.201,167,4.503,168,3.766,169,2.594,170,6.32,171,4.7,172,2.129,173,3.965,174,2.331,175,4.395,176,6.32,177,4.503,178,4.567,179,4.025,180,4.503,181,3.974,182,4.614,183,5.649,184,4.043,185,5.208,186,1.312,187,2.777,188,1.783,189,4.462,190,4.395,191,2.467,192,4.503,193,4.503,194,3.711,195,4.503,196,4.503,197,4.503,198,6.32,199,4.503,200,4.503,201,2.153,202,4.503,203,6.32,204,4.503,205,4.503]],["title/classes/BaseEntity.html",[0,0.129,206,3.166]],["body/classes/BaseEntity.html",[0,0.225,2,1.279,3,0.146,4,0.122,5,0.084,10,0.323,11,1.129,13,2.813,17,0.338,24,0.772,27,0.006,36,1.041,44,0.285,48,0.173,59,0.004,60,0.004,84,1.606,172,2.229,206,5.519,207,5.185,208,3.959,209,2.069,210,3.723,211,2.326,212,4.227,213,6.292,214,4.227,215,6.292,216,3.172,217,2.065,218,2.018,219,2.875,220,4.856,221,4.856,222,3.067,223,5.185,224,5.185,225,5.624,226,4.025,227,3.421,228,5.624,229,3.521,230,4.856,231,3.88,232,2.539,233,3.421,234,2.313,235,5.624,236,5.185,237,5.624,238,4.025,239,4.025,240,4.856,241,5.185,242,2.642,243,2.813,244,5.624,245,2.696]],["title/classes/BaseEntityWithTimestamps.html",[0,0.129,222,1.922]],["body/classes/BaseEntityWithTimestamps.html",[0,0.22,2,1.222,3,0.139,4,0.117,5,0.08,10,0.308,11,1.106,13,2.686,17,0.329,24,0.87,27,0.006,36,1.019,44,0.277,48,0.168,59,0.004,60,0.004,84,1.711,172,2.192,206,4.906,207,4.952,208,3.893,209,2.035,210,3.661,211,2.478,212,4.157,214,4.157,216,3.271,217,2.006,218,1.927,219,2.746,220,4.638,221,4.638,222,3.281,223,4.952,224,4.952,225,5.372,226,3.844,227,3.267,228,5.372,229,3.363,230,4.638,231,3.706,232,2.425,233,3.267,234,2.209,235,5.372,236,4.952,237,5.372,238,3.844,239,3.844,240,4.638,241,4.952,242,3.546,243,2.996,244,5.372,245,3.619,246,6.009,247,2.199,248,2.342,249,6.009,250,6.009,251,3.017,252,2.133,253,6.009]],["title/injectables/BaseRepo.html",[152,0.935,254,3.441]],["body/injectables/BaseRepo.html",[0,0.123,3,0.11,4,0.092,5,0.063,10,0.243,12,1.653,17,0.399,18,1.149,21,1.1,24,0.922,26,1.383,27,0.006,28,0.813,29,0.878,41,1.586,44,0.271,46,0.831,48,0.104,59,0.004,60,0.004,76,1.219,83,1.304,152,1.237,153,1.653,155,2.68,172,2.164,174,2.542,181,4.063,186,1.381,191,2.514,206,3.032,217,1.24,219,2.165,254,4.554,255,4.237,256,7.235,257,4.038,258,5.854,259,5.854,260,5.055,261,3.665,262,5.854,263,5.854,264,5.854,265,2.824,266,4.28,267,4.739,268,3.207,269,4.739,270,5.055,271,7.408,272,4.739,273,5.854,274,4.739,275,5.854,276,4.739,277,5.055,278,4.739,279,5.854,280,4.739,281,3.871,282,5.854,283,4.739,284,5.854,285,4.739,286,5.854,287,4.739,288,3.905,289,4.739,290,4.739,291,6.247,292,6.549,293,6.549,294,6.549,295,7.504,296,7.504,297,4.739,298,6.549]],["title/injectables/BsonConverter.html",[152,0.935,299,3.294]],["body/injectables/BsonConverter.html",[0,0.151,3,0.135,4,0.113,5,0.078,10,0.299,17,0.322,18,1.318,24,0.735,26,1.116,27,0.006,28,0.656,29,0.708,41,1.497,44,0.271,46,1.021,48,0.127,59,0.004,60,0.004,64,2.332,76,1.398,83,1.116,152,1.419,153,2.03,189,3.593,299,5.002,300,5.203,301,6.191,302,6.191,303,7.513,304,5.821,305,7.513,306,6.809,307,6.114,308,6.397,309,9.608,310,6.601,311,7.858,312,7.244,313,5.725,314,8.791,315,7.513,316,5.821,317,7.513,318,5.799,319,5.962,320,5.821,321,5.799,322,5.821]],["title/classes/BusinessError.html",[0,0.129,9,3.166]],["body/classes/BusinessError.html",[0,0.205,2,1.062,3,0.121,4,0.101,5,0.07,8,1.858,9,4.474,10,0.268,11,0.916,12,3.457,13,4.249,14,5.503,15,4.861,16,3.266,17,0.421,18,1.227,19,6.943,20,6.943,21,1.624,24,0.918,26,0.775,27,0.006,28,0.456,29,0.492,31,2.207,34,6.423,36,1.091,41,1.191,43,4.7,44,0.285,45,6.503,46,0.916,48,0.114,50,1.886,53,2.838,55,5.759,59,0.004,60,0.004,64,1.621,68,4.581,83,1.039,84,0.972,323,4.667,324,4.551,325,4.656,326,4.168,327,4.864,328,4.168,329,4.474,330,4.474,331,3.425,332,6.943,333,5.221,334,6.152,335,6.994,336,2.922,337,5.221,338,5.221,339,5.221,340,5.221,341,5.221,342,5.221,343,5.221,344,5.221,345,5.221,346,3.476,347,5.221,348,4.667,349,6.994,350,5.221,351,4.035,352,6.994,353,6.994,354,5.221]],["title/modules/ConsoleWriterModule.html",[111,1.314,355,3.613]],["body/modules/ConsoleWriterModule.html",[0,0.184,3,0.164,4,0.137,5,0.094,27,0.006,44,0.306,46,1.242,48,0.155,59,0.005,60,0.005,111,2.254,113,2.75,114,3.637,121,4.26,122,3.234,123,3.033,125,3.637,147,4.156,355,7.222,356,6.327,357,6.327,358,6.327,359,6.272,360,5.833,361,4.923,362,7.078,363,3.848,364,5.833]],["title/injectables/ConsoleWriterService.html",[152,0.935,359,3.051]],["body/injectables/ConsoleWriterService.html",[0,0.173,3,0.204,4,0.129,5,0.088,10,0.34,11,1.068,17,0.35,18,1.43,24,0.798,26,0.984,27,0.006,28,0.579,29,0.625,36,1.065,41,1.129,44,0.319,46,1.163,48,0.145,59,0.005,60,0.005,152,1.54,153,2.312,247,1.901,248,2.025,281,3.9,359,5.029,360,7.278,361,6.143,363,4.433,365,5.926,366,2.879,367,9.215,368,8.155,369,6.629,370,4.413,371,8.155,372,8.832,373,6.629,374,3.029,375,8.832,376,6.629,377,3.328,378,3.414,379,6.629,380,6.629]],["title/modules/CoreModule.html",[111,1.314,381,3.613]],["body/modules/CoreModule.html",[0,0.162,3,0.144,4,0.12,5,0.083,27,0.006,44,0.335,46,1.089,48,0.136,54,3.5,59,0.004,60,0.004,64,1.928,111,2.391,113,2.412,114,3.355,121,3.93,122,2.837,123,2.661,126,3.426,331,3.835,381,7.305,382,5.551,383,5.551,384,6.92,385,6.92,386,6.063,387,6.92,388,6.21,389,5.213,390,7.83,391,5.213,392,6.043,393,5.717,394,7.83,395,4.666,396,6.043,397,5.213,398,7.83,399,4.518,400,5.717,401,6.999,402,7.83,403,6.043,404,6.21,405,6.21,406,6.21,407,6.21]],["title/classes/Course.html",[0,0.129,408,1.853]],["body/classes/Course.html",[0,0.11,2,0.857,3,0.097,4,0.082,5,0.056,8,1.601,10,0.434,11,0.789,17,0.389,18,1.058,21,1.4,24,0.928,26,0.626,27,0.006,28,0.739,29,0.397,31,1.902,32,3.227,36,1.123,41,0.717,44,0.293,48,0.092,50,1.522,59,0.003,60,0.003,64,2.524,76,0.784,83,0.626,84,1.658,87,0.451,162,1.308,169,2.137,172,1.485,208,2.638,209,1.61,210,1.734,211,2.511,212,1.969,214,1.969,216,3.275,217,1.102,218,1.351,222,3.383,232,2.433,242,2.531,243,1.965,245,2.584,247,2.67,248,2.721,251,2.115,252,3.091,268,2.064,395,2.511,408,2.257,409,3.252,410,5.025,411,3.396,412,4.579,413,5.611,414,5.344,415,6.869,416,2.584,417,5.931,418,6.029,419,1.769,420,5.389,421,5.389,422,4.214,423,5.389,424,4.214,425,4.214,426,4.162,427,2.817,428,4.214,429,4.356,430,7.04,431,4.653,432,4.214,433,5.389,434,4.214,435,5.389,436,4.214,437,2.17,438,2.17,439,2.17,440,2.17,441,4.214,442,1.925,443,2.511,444,1.637,445,2.805,446,1.806,447,2.598,448,2.17,449,3.592,450,4.402,451,3.767,452,3.252,453,3.767,454,2.93,455,3.767,456,3.767,457,3.472,458,3.077,459,3.077,460,2.93,461,3.767,462,3.767,463,3.077,464,3.472,465,1.884,466,2.015,467,2.598,468,4.896,469,3.374,470,2.358,471,5.389,472,3.767,473,3.252,474,2.598,475,3.252,476,3.252,477,3.767,478,3.767,479,3.767,480,3.767,481,5.389,482,3.767,483,3.767]],["title/classes/CourseGroup.html",[0,0.129,484,2.949]],["body/classes/CourseGroup.html",[0,0.142,2,1.106,3,0.126,4,0.106,5,0.073,8,1.91,10,0.279,11,0.941,17,0.392,18,1.261,21,1.263,24,0.927,26,0.808,27,0.006,28,0.475,29,0.513,32,3.597,36,0.656,41,0.926,44,0.321,48,0.157,50,1.966,59,0.004,60,0.004,83,0.808,84,1.594,87,0.582,169,1.999,172,1.771,208,3.146,209,1.645,210,3.525,211,2.467,212,2.543,214,2.543,216,2.001,217,1.881,218,1.745,219,2.486,222,3.625,242,3.019,243,2.344,245,3.081,247,2.309,248,2.46,251,2.732,252,2.858,408,3.546,412,5.104,416,3.081,419,2.285,426,4.003,429,3.703,431,5.549,437,2.802,438,2.802,439,2.802,440,2.802,442,2.486,443,3.242,444,2.114,446,2.332,448,2.802,465,2.432,468,5,475,4.2,476,4.2,484,4.284,485,4.484,486,7.657,487,6.611,488,7.19,489,4.148,490,5,491,5.442,492,5.442,493,3.14,494,3.973,495,3.784,496,3.784,497,4.864]],["title/injectables/CourseGroupRepo.html",[152,0.935,498,4.078]],["body/injectables/CourseGroupRepo.html",[0,0.172,3,0.153,4,0.128,5,0.088,10,0.339,12,2.308,17,0.349,18,1.429,21,1.536,24,0.797,26,1.209,27,0.006,28,0.711,29,0.768,41,1.126,44,0.318,46,1.161,48,0.145,59,0.005,60,0.005,76,1.231,83,0.982,152,1.539,153,2.308,155,2.416,162,2.859,174,2.196,186,1.927,188,2.619,191,1.958,217,1.731,219,3.023,265,3.942,266,4.87,268,3.989,408,2.477,484,3.942,494,5.947,498,6.712,499,5.914,500,8.145,501,6.616,502,8.145,503,6.616,504,5.664,505,4.08,506,5.211,507,6.616]],["title/classes/CourseNews.html",[0,0.129,508,2.949]],["body/classes/CourseNews.html",[0,0.178,2,0.673,3,0.077,4,0.143,5,0.044,8,1.954,10,0.17,11,0.661,16,2.8,17,0.407,18,0.885,24,0.918,26,0.492,27,0.006,28,0.597,29,0.803,32,3.938,36,1.114,41,0.564,44,0.3,48,0.161,50,1.196,59,0.003,60,0.003,83,0.492,84,1.369,87,0.354,162,2.122,163,3.948,164,3.891,166,2.567,169,2.241,172,1.812,190,2.303,208,2.208,209,1.398,210,1.363,211,2.491,212,1.548,214,1.548,216,3.366,217,0.866,218,1.062,222,3.011,229,3.421,234,2.248,242,2.119,243,2.399,245,2.162,247,1.753,248,1.867,251,1.662,252,1.175,324,2.911,351,1.911,408,2.289,411,3.311,416,1.419,419,2.567,426,3.622,427,2.358,437,1.705,438,1.705,439,1.705,440,1.705,442,1.513,444,2.375,446,1.419,447,2.042,448,1.705,467,3.769,474,2.042,489,2.911,493,1.911,508,3.007,509,2.303,510,3.658,511,3.968,512,3.797,513,4,514,3.716,515,4.991,516,4.754,517,4.898,518,2.516,519,3.895,520,3.312,521,2.729,522,3.228,523,4.215,524,3.509,525,2.729,526,2.729,527,3.684,528,4.215,529,3.684,530,3.509,531,2.533,532,3.359,533,3.509,534,2.729,535,2.729,536,2.729,537,3.527,538,3.911,539,2.729,540,2.729,541,3.069,542,2.729,543,3.359,544,2.729,545,3.684,546,2.729,547,3.684,548,4.898,549,2.729,550,2.413,551,2.418,552,3.769,553,2.418,554,1.973,555,2.303,556,1.337,557,1.705,558,2.205,559,2.042,560,2.418,561,2.418,562,2.418,563,2.418,564,2.418,565,1.751,566,2.205,567,2.418,568,2.418,569,2.418,570,2.418,571,2.418,572,2.418,573,2.418,574,2.418,575,3.684,576,2.923,577,2.994,578,2.856,579,2.856,580,2.923,581,3.527,582,3.527,583,2.418,584,3.684,585,2.418,586,2.418,587,4.463,588,2.042,589,2.042,590,2.418]],["title/injectables/CourseRepo.html",[152,0.935,591,3.294]],["body/injectables/CourseRepo.html",[0,0.181,3,0.119,4,0.1,5,0.069,8,1.369,10,0.265,12,1.798,17,0.359,18,1.217,21,1.197,24,0.82,26,1.245,27,0.006,28,0.732,29,0.79,41,1.334,44,0.302,46,0.904,48,0.113,59,0.004,60,0.004,76,1.799,83,1.245,84,0.96,152,1.31,153,1.798,155,2.596,162,3.001,173,4.193,174,2.43,186,1.502,188,2.041,191,2.32,217,1.349,219,2.356,265,3.072,266,4.433,268,3.397,408,1.93,412,4.133,413,5.064,414,4.824,466,4.309,505,3.18,506,5.764,591,4.618,592,4.249,593,6.2,594,6.2,595,6.2,596,5.156,597,5.716,598,5.156,599,5.716,600,5.156,601,5.716,602,5.156,603,3.359,604,3.586,605,6.05,606,4.609,607,6.2,608,7.494,609,7.494,610,3.765,611,4.609,612,7.006,613,4.249,614,3.83]],["title/classes/CourseScope.html",[0,0.129,605,3.819]],["body/classes/CourseScope.html",[0,0.18,2,1.045,3,0.119,4,0.1,5,0.069,8,1.838,10,0.264,11,0.906,12,1.793,17,0.359,18,1.214,24,0.819,26,1.028,27,0.006,28,0.604,29,0.653,32,3.286,41,1.178,44,0.302,46,0.902,48,0.112,59,0.004,60,0.004,76,1.798,83,1.243,84,0.957,152,1.308,155,2.143,162,2.856,173,4.092,174,2.11,186,1.497,188,2.035,191,2.316,217,1.345,219,2.349,247,1.474,248,1.57,266,3.66,268,2.518,281,2.458,366,2.73,408,1.924,412,4.124,413,5.054,414,4.814,466,4.305,505,3.17,506,5.759,591,3.422,592,4.236,597,4.236,599,4.236,601,4.236,603,3.942,604,3.575,605,6.745,606,6.187,607,6.187,608,7.484,609,7.484,610,3.753,611,4.595,612,6.996,613,4.236,614,3.993,615,5.054,616,5.054,617,6.922,618,5.054,619,3.575,620,3.967,621,5.006,622,3.967,623,5.14,624,3.753,625,4.814,626,3.967]],["title/classes/CreateNewsParams.html",[0,0.129,627,3.441]],["body/classes/CreateNewsParams.html",[0,0.186,2,1.092,3,0.124,4,0.104,5,0.072,10,0.276,11,0.933,16,3.203,17,0.38,24,0.868,27,0.006,29,0.672,36,1.139,44,0.289,48,0.118,59,0.004,60,0.004,64,2.932,76,1,163,3.918,164,4.016,165,4.934,171,3.875,172,2.378,187,3.312,209,1.631,211,2.392,243,2.324,510,3.642,511,3.894,512,4.344,514,4.35,541,2.697,627,4.958,628,7.512,629,4.146,630,3.186,631,5.502,632,3.989,633,7.128,634,4.802,635,5.372,636,5.874,637,4.396,638,5.874,639,5.502,640,5.502,641,4.56,642,4.958,643,5.372,644,5.372,645,4.396,646,4.396,647,5.255,648,5.372,649,5.372,650,5.842,651,5.874,652,4.396,653,5.372,654,5.372,655,4.567,656,4.746,657,2.401,658,6.372,659,5.874,660,7.308,661,3.099,662,3.922,663,3.099]],["title/controllers/DashboardController.html",[664,2.121,665,3.819]],["body/controllers/DashboardController.html",[0,0.155,3,0.138,4,0.116,5,0.08,10,0.306,12,2.081,17,0.256,18,1.339,24,0.747,26,0.886,27,0.006,28,0.521,29,0.562,36,1.015,41,1.3,44,0.338,46,1.047,48,0.131,59,0.004,60,0.004,76,1.652,83,1.134,155,2.568,174,2.393,188,2.362,189,2.853,191,2.259,211,2.058,630,4.099,664,2.557,665,5.892,666,2.853,667,5.333,668,3.679,669,4.451,670,8.873,671,7.524,672,5.966,673,5.966,674,5.015,675,6.478,676,7.633,677,5.966,678,6.823,679,4.916,680,5.573,681,3.817,682,4.356,683,5.082,684,4.356,685,5.854,686,5.333,687,3.972,688,4.605,689,5.966,690,4.356,691,5.966,692,5.966,693,4.605,694,7.633,695,5.333,696,4.548,697,3.072,698,5.966,699,5.966,700,5.966]],["title/classes/DashboardEntity.html",[0,0.129,701,2.769]],["body/classes/DashboardEntity.html",[0,0.179,2,0.678,3,0.077,4,0.065,5,0.044,10,0.315,11,0.664,16,2.919,17,0.389,18,0.89,21,0.774,24,0.851,26,1.019,27,0.006,28,0.599,29,0.647,31,2.863,36,1.125,41,1.257,44,0.183,46,0.585,48,0.19,59,0.003,60,0.003,76,1.706,83,1.361,84,1.374,87,0.543,162,2.745,201,2.426,209,2.075,234,1.226,248,1.55,281,2.426,351,2.927,366,2.634,419,2.578,445,2.22,466,1.595,518,2.088,557,2.612,565,1.764,671,4.534,701,2.839,702,2.133,703,4.482,704,4.13,705,5.009,706,4.771,707,5.676,708,5.073,709,5.073,710,4.389,711,4.771,712,3.335,713,3.335,714,3.658,715,3.335,716,3.335,717,3.335,718,3.335,719,4.632,720,3.335,721,3.704,722,6.041,723,3.335,724,4.088,725,3.704,726,3.335,727,3.704,728,3.335,729,2.133,730,2.319,731,3.377,732,3.245,733,3.377,734,4.771,735,4.389,736,4.983,737,5.565,738,3.704,739,1.987,740,2.683,741,2.133,742,2.435,743,2.133,744,3.73,745,2.435,746,2.22,747,2.435,748,4.973,749,3.704,750,2.435,751,1.924,752,4.913,753,3.704,754,4.269,755,3.704,756,1.899,757,3.528,758,3.704,759,4.482,760,4.088,761,4.111,762,4.482,763,2.435,764,3.704,765,2.435,766,2.435,767,2.435,768,2.088,769,2.435,770,3.128,771,3.704,772,2.435,773,2.319,774,3.704,775,2.435,776,2.435,777,2.435,778,2.435,779,1.595,780,3.161,781,3.161,782,2.435,783,3.528,784,5.389,785,3.528,786,3.704,787,2.435,788,3.023,789,4.23,790,1.987,791,2.435,792,2.435,793,2.435,794,2.435,795,2.435,796,2.435,797,2.435,798,2.426,799,2.435,800,2.435,801,2.435,802,4.482,803,2.435,804,2.435,805,2.22,806,3.704,807,3.704,808,2.435,809,2.435,810,2.435,811,3.704]],["title/classes/DashboardGridElementModel.html",[0,0.129,812,3.294]],["body/classes/DashboardGridElementModel.html",[0,0.197,2,0.978,3,0.111,4,0.093,5,0.064,8,2.163,10,0.247,11,0.866,16,1.736,17,0.387,21,1.116,24,0.914,26,0.714,27,0.006,28,0.42,29,0.453,31,2.569,32,3.419,36,1.111,44,0.273,48,0.165,50,2.731,57,2.299,59,0.004,60,0.004,84,1.589,172,2.006,173,2.104,208,2.894,209,2.018,210,2.722,211,2.483,212,2.247,214,2.247,216,3.386,217,1.73,218,1.542,219,2.197,222,3.63,232,1.94,242,2.777,243,2.156,245,2.834,247,2.168,248,2.31,251,2.413,252,1.706,410,2.774,429,3.893,437,2.476,438,2.476,439,2.476,440,2.476,442,2.197,444,3.163,450,3.51,465,3.38,466,2.299,510,1.768,556,3.051,669,4.515,710,5.209,744,4.642,748,4.837,761,4.306,812,4.403,813,3.711,814,6.23,815,6.23,816,4.808,817,6.71,818,5.45,819,6.23,820,4.808,821,5.45,822,4.808,823,4.808,824,4.808,825,3.51,826,3.962,827,3.962,828,3.201,829,6.23,830,6.23,831,3.962,832,3.962,833,2.355,834,2.965,835,3.076,836,3.51,837,3.076,838,3.962,839,3.962,840,2.965,841,3.711,842,3.51,843,2.691,844,3.962,845,3.711,846,2.965,847,3.962,848,3.343,849,3.962]],["title/classes/DashboardGridElementResponse.html",[0,0.129,850,3.441]],["body/classes/DashboardGridElementResponse.html",[0,0.202,2,1.029,3,0.117,4,0.098,5,0.067,10,0.26,11,0.897,16,3.449,17,0.393,24,0.896,27,0.006,31,2.625,36,1.179,44,0.183,48,0.17,59,0.004,60,0.004,64,3.033,172,1.247,178,4.48,209,2.161,211,2.471,410,4.48,528,3.122,645,5.131,646,5.131,655,5.06,657,2.263,663,4.801,669,3.623,687,3.37,704,5.549,735,5.323,736,5.131,760,4.082,780,3.528,781,3.528,788,5.908,789,5.131,848,3.521,850,5.4,851,3.907,852,6.399,853,6.399,854,6.399,855,6.372,856,5.062,857,5.67,858,5.645,859,5.062,860,5.062,861,6.399,862,5.062,863,5.062,864,5.062,865,5.062,866,3.37]],["title/classes/DashboardGridSubElementResponse.html",[0,0.129,857,3.613]],["body/classes/DashboardGridSubElementResponse.html",[0,0.209,2,1.098,3,0.125,4,0.105,5,0.072,10,0.277,11,0.936,16,3.49,17,0.366,24,0.835,27,0.006,31,2.256,36,1.19,44,0.195,48,0.175,59,0.004,60,0.004,64,3.062,172,1.33,178,4.126,209,2.189,211,2.302,410,4.627,528,3.328,645,5.265,646,5.265,655,5.104,657,2.413,663,4.926,669,3.782,687,3.593,704,5.547,735,5.462,736,5.265,760,3.216,780,2.78,781,2.78,788,5.906,789,4.41,848,3.754,850,4.973,851,4.166,852,4.448,853,4.448,854,4.448,855,5.938,857,5.856,858,4.448,861,6.609,866,3.593,867,5.398,868,5.398,869,5.398,870,5.398]],["title/classes/DashboardMapper.html",[0,0.129,688,3.819]],["body/classes/DashboardMapper.html",[0,0.167,2,1.301,3,0.148,4,0.124,5,0.085,10,0.328,17,0.274,18,1.4,24,0.626,26,0.95,27,0.006,28,0.559,29,0.603,41,1.09,44,0.288,48,0.14,59,0.004,60,0.004,76,1.694,83,1.185,84,1.485,186,1.865,518,3.578,630,3.567,669,3.385,687,6.06,688,6.159,701,5.094,724,3.814,768,2.634,783,4.451,785,4.451,850,5.549,871,5.721,872,5.312,873,7.979,874,6.4,875,4.261,876,4.261,877,6.4,878,6.4,879,6.4,880,7.979,881,6.4,882,5.721,883,6.4,884,6.4,885,6.4,886,6.4,887,6.4,888,6.4,889,6.4,890,7.979,891,6.4,892,5.721,893,6.4,894,6.4]],["title/classes/DashboardModelEntity.html",[0,0.129,846,3.051]],["body/classes/DashboardModelEntity.html",[0,0.202,2,1.025,3,0.117,4,0.098,5,0.067,8,2.206,10,0.259,11,0.894,16,1.82,17,0.356,21,1.17,24,0.876,26,0.748,27,0.006,28,0.44,29,0.475,31,2.155,32,3.487,36,1.123,44,0.28,48,0.17,50,2.798,57,2.41,59,0.004,60,0.004,84,1.616,172,2.046,173,2.205,208,2.989,209,2.047,210,2.811,211,2.341,212,2.355,214,2.355,216,3.291,217,1.787,218,1.616,219,2.303,222,3.666,232,2.034,242,2.868,243,2.227,245,2.927,247,2.222,248,2.367,251,2.53,252,1.789,410,2.908,429,3.99,437,2.595,438,2.595,439,2.595,440,2.595,442,2.303,444,3.226,450,3.68,465,3.463,466,2.41,510,1.853,556,2.756,669,4.392,710,5.313,744,4.212,748,4.956,761,4.097,812,3.355,813,3.89,814,4.153,815,4.153,817,6.384,818,4.153,819,5.628,821,4.153,825,3.68,826,4.153,827,4.153,828,3.355,829,6.384,830,6.384,831,4.153,832,4.153,833,2.468,834,3.108,835,3.224,836,3.68,837,3.224,838,4.153,839,4.153,840,3.108,841,3.89,842,3.68,843,2.82,844,4.153,845,3.89,846,4.212,847,5.628,848,5.388,849,4.153,895,5.04,896,5.04]],["title/classes/DashboardModelMapper.html",[0,0.129,897,3.613]],["body/classes/DashboardModelMapper.html",[0,0.106,2,0.825,3,0.094,4,0.079,5,0.054,10,0.208,17,0.358,18,1.029,24,0.817,26,1.24,27,0.006,28,0.729,29,0.787,41,1.421,44,0.249,48,0.089,59,0.003,60,0.003,76,1.754,83,1.279,84,1.603,155,2.619,172,1.445,174,2.46,186,1.181,191,2.658,217,1.061,218,1.3,257,2.501,261,2.269,266,4.824,268,4.525,444,1.575,518,4.001,557,3.02,669,3.644,701,4.225,704,3.282,706,2.82,719,4.773,724,2.416,737,4.83,739,4.105,741,2.594,744,4.105,757,2.82,761,3.102,770,2.501,773,2.82,780,2.088,781,2.088,788,4.499,798,3.61,812,5.732,828,5.026,835,2.594,846,5.309,866,2.7,882,3.625,892,5.243,897,4.282,898,3.625,899,5.865,900,6.89,901,5.865,902,6.89,903,5.865,904,5.865,905,5.865,906,4.055,907,6.88,908,4.055,909,4.055,910,5.865,911,4.055,912,4.055,913,4.055,914,5.865,915,4.055,916,5.865,917,4.055,918,3.625,919,3.341,920,4.055,921,4.055,922,4.055,923,4.055,924,4.055,925,4.055,926,4.055,927,4.055,928,4.055,929,4.055,930,3.13,931,4.055,932,5.031,933,4.055,934,2.961,935,4.055,936,4.055,937,1.939,938,4.055,939,3.13,940,4.055,941,5.865,942,4.055,943,4.055,944,4.055,945,4.055,946,4.055,947,4.055,948,4.055,949,4.055,950,4.055,951,3.992,952,4.055,953,6.89,954,4.055,955,4.055,956,4.055,957,4.055,958,4.055,959,4.055,960,4.055,961,4.055,962,4.055,963,4.055,964,4.055,965,4.055,966,4.055,967,4.055,968,4.055,969,5.865,970,4.055,971,4.055,972,4.055,973,4.055]],["title/injectables/DashboardRepo.html",[152,0.935,974,3.441]],["body/injectables/DashboardRepo.html",[0,0.161,3,0.101,4,0.085,5,0.058,10,0.224,12,1.525,17,0.335,18,1.086,21,1.015,24,0.807,26,1.16,27,0.006,28,0.682,29,0.737,41,1.33,44,0.298,46,0.767,48,0.135,57,2.091,59,0.003,60,0.003,76,1.726,83,1.272,84,1.763,87,0.468,152,1.169,153,1.525,155,2.593,162,2.56,172,1.925,174,2.529,186,1.274,191,2.605,209,1.416,210,1.8,217,1.144,219,1.998,232,1.765,254,3.042,257,3.818,260,4.778,265,2.606,266,4.133,268,3.032,270,4.778,277,5.547,288,3.604,324,2.523,669,4.528,701,5.033,704,2.448,719,3.689,724,4.914,739,2.606,740,2.313,751,2.523,761,4.528,779,3.944,780,4.247,781,4.247,846,2.697,897,3.193,907,5.101,919,3.604,974,4.306,975,3.376,976,5.534,977,6.796,978,4.373,979,6.424,980,4.373,981,4.373,982,4.373,983,4.373,984,3.909,985,4.778,986,3.604,987,4.778,988,5.101,989,6.796,990,4.122,991,6.439,992,7.804,993,7.255,994,3.604,995,4.122,996,3.604,997,3.604,998,3.604,999,3.604,1000,3.604,1001,3.604,1002,3.604,1003,3.604,1004,4.52,1005,3.604,1006,5.534,1007,5.534,1008,3.909,1009,3.909,1010,6.424,1011,3.909,1012,5.534,1013,3.909,1014,3.909]],["title/classes/DashboardResponse.html",[0,0.129,687,3.294]],["body/classes/DashboardResponse.html",[0,0.213,2,1.146,3,0.13,4,0.109,5,0.075,10,0.289,11,0.963,16,3.337,17,0.315,24,0.72,27,0.006,31,2.321,36,1.174,44,0.203,48,0.179,59,0.004,60,0.004,64,3.08,172,1.812,178,4.725,209,2.207,211,1.984,410,4.244,528,4.536,645,5.354,646,5.354,655,5.132,657,2.519,663,5.009,669,4.591,687,4.897,704,5.449,735,4.706,736,4.536,760,3.357,780,2.901,781,2.901,788,5.801,789,4.536,848,5.696,850,5.696,851,4.349,852,4.643,853,4.643,854,4.643,855,5.116,857,5.371,858,4.643,861,6.062,866,4.897,1015,5.634,1016,5.634]],["title/injectables/DashboardUc.html",[152,0.935,685,3.441]],["body/injectables/DashboardUc.html",[0,0.163,3,0.144,4,0.121,5,0.083,10,0.32,12,2.178,17,0.337,18,1.378,21,1.45,24,0.841,26,1.167,27,0.006,28,0.686,29,0.741,41,1.338,44,0.31,46,1.095,48,0.137,59,0.004,60,0.004,76,1.463,83,1.167,152,1.484,153,2.178,155,2.599,162,2.801,174,2.433,186,1.819,191,2.544,366,2.036,669,4.771,678,7.024,685,5.465,696,3.721,697,3.216,701,3.495,722,6.414,974,5.465,977,7.435,1004,6.588,1017,5.582,1018,8.598,1019,6.245,1020,6.245,1021,6.245,1022,6.245,1023,6.245,1024,3.851,1025,5.582,1026,6.245,1027,6.245,1028,6.245,1029,6.245,1030,6.245]],["title/classes/DatabaseManagementConsole.html",[0,0.129,1031,3.613]],["body/classes/DatabaseManagementConsole.html",[0,0.127,2,0.995,3,0.113,4,0.095,5,0.065,10,0.251,17,0.327,18,1.174,21,1.136,24,0.746,26,1.133,27,0.006,28,0.666,29,0.773,36,0.59,41,1.14,44,0.275,48,0.194,59,0.004,60,0.004,64,2.87,76,1.69,83,0.994,87,0.524,122,3.058,155,2.429,174,2.212,188,1.937,191,1.981,211,1.805,252,3.049,359,5.058,361,3.402,363,4.46,364,4.031,366,1.595,374,2.235,444,2.964,556,1.974,756,1.832,768,2.755,951,2.587,1031,4.887,1032,6.759,1033,4.031,1034,5.983,1035,6.693,1036,4.373,1037,5.6,1038,4.892,1039,5.515,1040,5.983,1041,4.649,1042,5.983,1043,4.453,1044,6.522,1045,5.989,1046,4.892,1047,5.983,1048,5.705,1049,4.892,1050,6.169,1051,4.031,1052,3.776,1053,3.776,1054,4.881,1055,3.639,1056,6.82,1057,4.887,1058,4.402,1059,3.83,1060,4.591,1061,3.746,1062,5.983,1063,5.983,1064,4.373,1065,5.166,1066,5.983,1067,5.983,1068,4.031,1069,3.017,1070,2.587,1071,5.166,1072,4.373,1073,4.373]],["title/controllers/DatabaseManagementController.html",[664,2.121,1074,3.819]],["body/controllers/DatabaseManagementController.html",[0,0.15,3,0.133,4,0.112,5,0.077,10,0.296,17,0.32,18,1.311,24,0.857,26,1.109,27,0.006,28,0.652,29,0.704,36,1.122,41,1.492,44,0.27,46,1.012,48,0.126,59,0.004,60,0.004,76,1.631,83,1.301,155,2.712,174,2.586,188,2.284,189,2.76,191,2.593,211,2.363,664,2.473,666,2.76,668,3.558,798,4.587,1034,7.833,1037,5.109,1052,4.454,1053,4.454,1074,5.766,1075,8.113,1076,5.158,1077,5.771,1078,7.471,1079,6.678,1080,8.762,1081,5.771,1082,7.471,1083,5.771,1084,6.763,1085,7.471,1086,5.771,1087,5.158,1088,7.471,1089,5.771,1090,7.471,1091,5.771,1092,4.213,1093,5.771,1094,5.771,1095,5.771,1096,5.771,1097,5.771,1098,5.771,1099,5.771]],["title/modules/DatabaseManagementModule.html",[111,1.314,1100,3.613]],["body/modules/DatabaseManagementModule.html",[0,0.185,3,0.164,4,0.138,5,0.095,27,0.006,44,0.307,46,1.244,48,0.155,59,0.005,60,0.005,111,2.257,113,2.756,114,3.641,121,4.265,122,3.241,123,3.04,126,3.718,147,4.161,1043,3.561,1100,7.225,1101,6.341,1102,6.341,1103,6.341,1104,6.509,1105,5.845,1106,7.093,1107,7.093]],["title/injectables/DatabaseManagementService.html",[152,0.935,1104,3.166]],["body/injectables/DatabaseManagementService.html",[0,0.112,3,0.1,4,0.084,5,0.058,10,0.222,17,0.384,18,1.076,21,1.002,24,0.905,26,1.331,27,0.006,28,0.796,29,0.845,36,1.199,41,1.526,44,0.257,46,0.757,48,0.094,59,0.003,60,0.003,76,1.742,83,1.331,152,1.159,153,1.506,155,2.713,174,2.588,188,1.709,191,2.596,217,1.129,219,1.972,265,2.572,266,4.108,268,3.004,306,4.266,319,4.565,321,5.507,366,2.533,444,3.482,556,2.88,798,2.933,937,3.412,1044,4.266,1079,5.483,1084,6.77,1087,5.483,1104,3.924,1105,7.71,1108,3.859,1109,6.134,1110,5.055,1111,6.134,1112,6.134,1113,6.134,1114,7.769,1115,6.134,1116,4.479,1117,5.25,1118,4.317,1119,6.134,1120,4.317,1121,6.134,1122,4.317,1123,6.134,1124,4.317,1125,6.134,1126,4.317,1127,6.134,1128,4.317,1129,4.317,1130,6.134,1131,4.317,1132,4.317,1133,4.317,1134,4.317,1135,2.762,1136,4.317,1137,4.317,1138,7.135,1139,4.317,1140,6.134,1141,4.317,1142,4.317,1143,4.317,1144,4.317,1145,6.134,1146,4.317,1147,4.317,1148,4.317,1149,4.317,1150,6.134,1151,4.317,1152,4.317,1153,4.317,1154,4.317,1155,4.317,1156,4.317]],["title/injectables/DatabaseManagementUc.html",[152,0.935,1037,3.051]],["body/injectables/DatabaseManagementUc.html",[0,0.063,3,0.056,4,0.145,5,0.106,10,0.125,11,0.518,17,0.32,18,0.694,21,0.919,24,0.81,26,1.064,27,0.006,28,0.723,29,0.794,31,1.249,36,1.127,41,1.455,44,0.258,46,0.427,48,0.139,54,1.088,59,0.003,60,0.002,64,1.229,76,1.747,83,1.178,84,0.931,87,0.26,126,1.732,147,1.939,152,0.748,153,0.849,155,2.371,174,2.013,178,3.325,189,3.032,191,2.592,201,1.164,233,1.323,243,1.631,247,0.698,248,0.743,252,0.864,257,1.501,299,4.768,301,2.006,302,2.006,306,4.981,308,3.837,310,1.62,312,3.262,313,1.45,318,5.528,319,2.532,321,3.861,325,2.635,336,3.549,366,2.997,370,4.524,393,4.208,444,3.498,449,2.359,556,0.982,557,2.038,641,1.557,647,3.554,756,2.544,768,3.176,779,1.164,932,2.89,937,1.164,951,4.081,1037,2.441,1043,4.227,1044,6.153,1045,4.962,1048,4.981,1054,2.532,1055,2.72,1060,3.549,1069,4.759,1070,4.293,1071,5.245,1084,5.761,1104,4.582,1110,3.262,1116,2.89,1157,6.69,1158,2.006,1159,4.472,1160,3.958,1161,5.152,1162,3.958,1163,3.958,1164,3.958,1165,4.472,1166,3.958,1167,5.152,1168,2.434,1169,4.524,1170,3.958,1171,3.538,1172,2.434,1173,4.008,1174,5.152,1175,4.749,1176,5.194,1177,5.225,1178,2.434,1179,3.538,1180,3.538,1181,2.434,1182,4.448,1183,2.89,1184,3.538,1185,2.434,1186,5.152,1187,3.055,1188,4.726,1189,6.403,1190,3.538,1191,2.434,1192,5.668,1193,2.434,1194,5.668,1195,2.434,1196,3.538,1197,3.262,1198,2.89,1199,4.749,1200,3.538,1201,2.434,1202,3.538,1203,3.538,1204,3.554,1205,3.055,1206,2.434,1207,2.434,1208,3.262,1209,1.878,1210,1.878,1211,2.006,1212,1.501,1213,2.006,1214,2.006,1215,4.894,1216,5.225,1217,3.262,1218,2.176,1219,2.176,1220,3.538,1221,3.538,1222,3.538,1223,2.176,1224,2.176,1225,2.176,1226,2.176,1227,5.152,1228,2.176,1229,2.176,1230,2.176,1231,1.878,1232,2.176,1233,2.176,1234,2.176,1235,2.006,1236,2.176,1237,5.152,1238,4.122,1239,2.284,1240,2.176,1241,2.176,1242,1.45,1243,1.557,1244,2.176,1245,3.538,1246,3.538,1247,2.176,1248,2.176,1249,2.176,1250,1.362,1251,3.538,1252,2.006,1253,2.176,1254,2.176,1255,3.055,1256,3.538,1257,2.176,1258,3.538,1259,3.538,1260,2.176,1261,2.176,1262,2.152,1263,2.176,1264,2.176,1265,1.878,1266,2.176,1267,1.693,1268,1.878,1269,1.62,1270,1.45,1271,2.176,1272,2.006,1273,1.62,1274,2.176,1275,2.176,1276,2.176,1277,2.176,1278,2.176,1279,2.635,1280,2.176,1281,2.176,1282,2.176,1283,2.176,1284,2.176,1285,3.538,1286,2.176,1287,2.176,1288,2.176,1289,2.006,1290,1.362,1291,1.62,1292,2.176,1293,2.176,1294,2.176,1295,2.176,1296,2.89,1297,2.176,1298,3.055,1299,2.176,1300,2.176,1301,2.176,1302,2.176]],["title/classes/DefaultGridReference.html",[0,0.129,739,2.949]],["body/classes/DefaultGridReference.html",[0,0.184,2,0.723,3,0.082,4,0.069,5,0.047,10,0.273,11,0.697,16,3.242,17,0.372,18,0.934,21,0.825,24,0.742,26,0.528,27,0.006,28,0.31,29,0.335,31,2.679,36,1.157,41,0.605,44,0.192,46,0.624,48,0.193,59,0.003,60,0.003,76,1.727,83,1.378,84,1.412,87,0.57,162,2.854,201,2.546,209,2.103,234,1.307,248,1.626,281,2.546,351,3.071,366,2.08,419,1.493,445,2.367,466,1.7,518,2.191,557,2.741,565,1.88,701,1.989,702,2.274,703,2.596,704,3.571,705,3.887,706,2.472,707,4.659,710,4.533,711,3.702,714,3.172,719,4.222,721,2.596,722,5.302,724,3.802,725,2.596,727,2.596,729,2.274,730,2.472,731,3.544,732,3.405,733,3.544,734,5.277,735,4.533,736,5.536,737,5.743,738,5.54,739,3.172,740,3.375,741,2.274,742,2.596,743,2.274,744,3.852,745,2.596,746,2.367,747,2.596,748,5.095,749,3.887,750,2.596,751,2.051,752,5.052,753,3.887,754,4.438,755,3.887,756,1.993,757,3.702,758,3.887,759,4.659,760,4.222,761,4.212,762,4.659,763,2.596,764,3.887,765,2.596,766,2.596,767,2.596,768,2.191,769,2.596,770,3.282,771,3.887,772,2.596,773,2.472,774,3.887,775,2.596,776,2.596,777,2.596,778,2.596,779,1.7,780,3.286,781,3.286,782,2.596,783,3.702,784,5.54,785,3.702,786,3.887,787,2.596,788,3.172,789,4.369,790,2.118,791,2.596,792,2.596,793,2.596,794,2.596,795,2.596,796,2.596,797,2.596,798,2.546,799,2.596,800,2.596,801,2.596,802,4.659,803,2.596,804,2.596,805,2.367,806,3.887,807,3.887,808,2.596,809,2.596,810,2.596,811,3.887,1303,5.323,1304,3.555,1305,3.555,1306,3.555]],["title/classes/DefaultGridReferenceModel.html",[0,0.129,828,3.294]],["body/classes/DefaultGridReferenceModel.html",[0,0.199,2,1.001,3,0.114,4,0.095,5,0.066,8,2.184,10,0.253,11,0.88,16,2.764,17,0.381,21,1.142,24,0.906,26,0.731,27,0.006,28,0.43,29,0.464,31,2.12,32,3.453,36,1.146,44,0.276,48,0.167,50,2.764,57,2.353,59,0.004,60,0.004,84,1.531,172,2.026,173,2.153,208,2.94,209,2.032,210,2.766,211,2.453,212,2.299,214,2.299,216,3.404,217,1.758,218,1.578,219,2.248,222,3.648,232,1.986,242,2.822,243,2.191,245,2.88,247,1.927,248,2.053,251,2.47,252,1.746,410,4.415,429,3.461,437,2.534,438,2.534,439,2.534,440,2.534,442,2.248,444,2.973,450,3.593,465,3.421,466,2.353,510,1.809,556,3.088,669,4.047,710,5.261,744,4.16,748,4.896,761,4.552,812,3.276,813,3.798,814,4.055,815,4.055,817,6.776,818,4.055,819,6.306,821,4.055,825,3.593,826,4.055,827,4.055,828,4.474,829,6.306,830,6.306,831,4.055,832,4.055,833,2.41,834,3.034,835,3.148,836,3.593,837,3.148,838,5.537,839,4.055,840,3.034,841,3.798,842,3.593,843,2.754,844,4.055,845,3.798,846,3.034,847,4.055,848,3.422,849,4.055,1307,4.921,1308,4.921,1309,4.921,1310,4.921]],["title/controllers/DelayController.html",[664,2.121,1311,3.819]],["body/controllers/DelayController.html",[0,0.168,3,0.149,4,0.125,5,0.086,10,0.331,18,1.406,24,0.631,27,0.006,41,1.098,44,0.315,46,1.131,48,0.141,52,3.084,59,0.005,60,0.005,76,1.492,83,1.191,84,1.201,125,2.764,155,2.389,174,2.353,191,1.909,211,1.739,247,2.299,400,5.854,664,3.436,666,3.834,1311,6.734,1312,6.607,1313,5.315,1314,7.521,1315,6.45,1316,5.576,1317,4.614,1318,5.338,1319,4.626,1320,6.188,1321,5.315,1322,5.766,1323,4.126,1324,5.315,1325,6.607,1326,5.766,1327,5.766,1328,6.45,1329,4.978,1330,3.159,1331,5.315,1332,5.576,1333,4.978,1334,3.411,1335,4.709,1336,4.709]],["title/injectables/DurationLoggingInterceptor.html",[152,0.935,1337,4.078]],["body/injectables/DurationLoggingInterceptor.html",[0,0.163,3,0.145,4,0.122,5,0.084,10,0.322,11,1.032,12,3.006,17,0.269,18,1.383,24,0.771,26,0.933,27,0.006,28,0.548,29,0.592,41,1.069,44,0.326,46,1.102,48,0.137,59,0.004,60,0.004,64,1.95,76,1.169,83,0.933,84,1.468,152,1.49,153,2.19,247,1.801,248,1.918,366,2.81,397,5.25,578,4.028,641,4.018,740,3.321,1320,6.086,1332,5.484,1337,6.498,1338,7.705,1339,5.614,1340,7.885,1341,6.086,1342,5.25,1343,5.216,1344,7.049,1345,7.049,1346,6.978,1347,8.082,1348,6.28,1349,3.414,1350,7.705,1351,7.885,1352,6.28,1353,5.175,1354,6.28,1355,5.614,1356,5.175,1357,6.28,1358,7.885,1359,6.28,1360,6.28,1361,6.28]],["title/modules/ErrorModule.html",[111,1.314,384,3.613]],["body/modules/ErrorModule.html",[0,0.184,3,0.163,4,0.137,5,0.094,27,0.006,44,0.328,46,1.239,48,0.155,59,0.005,60,0.005,64,2.193,111,2.251,113,2.744,125,3.027,184,5.422,247,2.431,374,3.872,384,6.188,399,4.89,403,7.268,1060,4.743,1323,4.519,1334,3.735,1362,7.063,1363,7.576,1364,5.226,1365,6.188,1366,7.063,1367,7.063,1368,5.452]],["title/classes/ErrorResponse.html",[0,0.129,43,2.949]],["body/classes/ErrorResponse.html",[0,0.168,2,1.314,3,0.149,4,0.125,5,0.086,12,3.186,13,4.083,15,5.038,16,3.154,17,0.403,21,1.863,24,0.632,26,0.96,27,0.006,28,0.564,29,0.609,31,2.755,36,1.193,43,4.783,44,0.233,45,4.988,46,1.134,48,0.141,54,3.903,59,0.005,60,0.005,64,2.492,65,5.813,66,4.492,67,5.135,68,4.364,348,5.777,449,4.783,1173,4.494,1369,5.777,1370,6.462,1371,6.462,1372,6.462,1373,5.325,1374,6.462,1375,4.134,1376,5.777,1377,3.985,1378,3.165,1379,3.985,1380,4.494]],["title/injectables/FeathersAuthProvider.html",[145,3.294,152,0.935]],["body/injectables/FeathersAuthProvider.html",[0,0.115,3,0.103,4,0.086,5,0.059,10,0.227,17,0.369,18,1.096,21,1.029,24,0.841,26,1.277,27,0.006,28,0.751,29,0.811,36,1,41,1.411,44,0.299,46,0.777,48,0.097,59,0.004,60,0.004,76,1.731,83,1.277,84,0.825,87,0.474,145,4.16,152,1.18,153,1.546,155,2.654,162,3.101,163,4.212,164,4.436,165,4.847,166,3.48,169,2.509,173,3.867,174,2.508,175,4.346,186,1.291,187,2.733,188,1.754,191,2.453,201,2.119,206,3.998,208,1.939,210,2.979,217,1.159,219,2.025,366,2.36,377,3.633,411,1.69,427,3.873,614,2.025,729,3.998,1059,2.225,1316,4.346,1317,2.343,1381,7.9,1382,3.652,1383,6.249,1384,6.47,1385,6.249,1386,6.249,1387,6.47,1388,4.431,1389,5.502,1390,4.431,1391,6.249,1392,4.431,1393,3.961,1394,4.431,1395,6.249,1396,4.431,1397,6.249,1398,4.431,1399,4.431,1400,4.431,1401,4.431,1402,3.961,1403,6.249,1404,3.961,1405,6.249,1406,6.249,1407,4.431,1408,4.431,1409,4.431,1410,6.249,1411,6.249,1412,6.249,1413,4.431,1414,3.236,1415,4.431,1416,4.431,1417,4.431,1418,5.149,1419,3.961,1420,4.431,1421,4.431,1422,2.733]],["title/interfaces/FeathersError.html",[87,0.53,1423,3.441]],["body/interfaces/FeathersError.html",[3,0.167,4,0.14,5,0.096,8,2.283,10,0.371,11,1.125,13,4.242,17,0.426,27,0.006,31,2.894,36,1.186,48,0.158,54,3.842,59,0.005,60,0.005,87,0.774,89,2.107,1423,5.978,1424,6.464,1425,6.464,1426,8.483]],["title/modules/FeathersModule.html",[111,1.314,143,3.441]],["body/modules/FeathersModule.html",[0,0.171,3,0.152,4,0.128,5,0.088,27,0.006,44,0.293,46,1.156,48,0.144,59,0.005,60,0.005,64,2.046,111,2.442,113,3.422,114,3.482,121,4.079,122,3.011,123,2.824,125,3.482,143,6.779,147,3.979,150,4.658,377,4.079,378,4.184,1182,4.841,1319,4.688,1389,6.45,1402,5.891,1427,5.891,1428,5.891,1429,5.891,1430,6.59,1431,5.409,1432,4.688,1433,4.417,1434,4.297,1435,5.651,1436,5.651,1437,5.651,1438,5.651,1439,6.695]],["title/interfaces/FeathersService.html",[87,0.53,1440,3.819]],["body/interfaces/FeathersService.html",[0,0.133,3,0.118,4,0.099,5,0.068,10,0.263,17,0.358,18,1.21,24,0.764,26,1.025,27,0.006,28,0.603,29,0.651,34,4.799,36,0.617,41,1.175,44,0.315,46,0.898,48,0.183,57,2.447,59,0.004,60,0.004,67,3.273,76,1.284,83,0.76,84,0.952,87,0.548,89,1.491,111,1.359,113,1.988,150,4.129,152,1.304,162,2.594,174,2.254,186,1.491,189,3.734,201,2.447,209,1.578,239,3.273,331,3.38,336,3.862,366,1.668,377,4.69,378,2.635,576,3.3,577,3.38,578,3.224,579,3.224,580,3.3,581,3.981,603,2.957,674,5.356,833,4.093,1024,3.155,1182,3.049,1239,2.952,1319,5.034,1323,3.273,1389,3.273,1422,3.155,1431,3.406,1432,5.034,1433,2.782,1434,4.614,1435,3.558,1436,3.558,1437,3.558,1438,3.558,1439,4.216,1440,6.45,1441,6.026,1442,3.736,1443,7.47,1444,5.563,1445,6.168,1446,7.571,1447,5.117,1448,6.168,1449,5.117,1450,4.574,1451,3.273,1452,4.216,1453,5.326,1454,5.686,1455,4.216,1456,3.406,1457,4.574,1458,4.574,1459,4.574,1460,6.168,1461,4.574,1462,3.736,1463,4.414,1464,4.216,1465,3.406,1466,4.574,1467,4.574,1468,4.574,1469,3.949,1470,3.406,1471,4.574]],["title/injectables/FeathersServiceProvider.html",[152,0.935,1389,3.166]],["body/injectables/FeathersServiceProvider.html",[0,0.133,3,0.119,4,0.099,5,0.068,10,0.263,17,0.358,18,1.212,21,1.19,24,0.764,26,1.026,27,0.006,28,0.603,29,0.651,34,4.804,36,0.942,41,0.872,44,0.315,46,0.899,48,0.183,57,2.451,59,0.004,60,0.004,64,1.591,67,3.278,76,1.286,83,0.761,84,0.954,87,0.548,111,1.361,113,2.683,150,4.422,152,1.305,153,1.787,162,2.144,174,1.863,186,1.493,189,3.737,201,2.451,209,1.172,239,3.278,331,3.383,366,1.671,377,4.692,378,3.557,576,3.303,577,3.383,578,3.228,579,3.228,580,3.303,581,3.985,603,2.96,674,4.656,833,2.51,1024,3.16,1182,4.116,1204,3.16,1239,2.957,1319,4.825,1323,3.278,1389,4.419,1422,3.16,1431,4.599,1432,4.825,1433,3.755,1434,5.008,1435,4.804,1436,4.804,1437,4.804,1438,4.804,1439,5.692,1440,6.454,1441,6.031,1442,3.742,1443,6.175,1444,4.599,1445,4.581,1446,6.439,1448,4.581,1450,4.581,1451,3.278,1452,4.223,1453,5.331,1454,5.692,1455,4.223,1456,4.599,1457,4.581,1458,4.581,1459,6.175,1460,6.175,1461,4.581,1462,3.742,1463,4.419,1464,4.223,1465,3.412,1466,4.581,1467,4.581,1468,4.581,1469,3.955,1470,3.412,1471,4.581,1472,6.907,1473,5.125,1474,5.125,1475,5.125]],["title/classes/File.html",[0,0.129,5,0.066]],["body/classes/File.html",[0,0.153,2,1.196,3,0.136,4,0.114,5,0.111,8,2.009,10,0.302,11,0.99,17,0.401,21,1.365,24,0.93,26,0.874,27,0.006,28,0.797,29,0.555,32,3.706,36,1.065,44,0.302,48,0.129,50,2.125,59,0.004,60,0.004,84,1.408,87,0.63,169,2.454,172,1.863,208,3.31,209,1.73,210,2.421,211,2.52,212,2.749,214,2.749,216,3.436,217,1.539,218,1.886,222,3.693,242,3.176,243,2.466,245,3.241,247,2.169,248,2.311,251,2.953,252,2.088,416,3.241,419,2.47,437,3.029,438,3.029,439,3.029,440,3.029,446,2.521,448,3.029,465,2.629,469,3.292,470,3.292,513,4.798,565,3.111,566,3.916,1070,3.111,1476,4.847,1477,6.812,1478,7.564,1479,5.882,1480,5.258]],["title/injectables/FileSystemAdapter.html",[152,0.935,1169,3.294]],["body/injectables/FileSystemAdapter.html",[0,0.091,3,0.081,4,0.068,5,0.122,10,0.179,11,0.686,17,0.362,18,0.919,21,1.463,24,0.861,26,1.218,27,0.006,28,0.716,29,0.773,36,1.199,41,1.497,44,0.271,46,0.611,48,0.076,59,0.003,60,0.003,64,2.176,76,1.471,83,1.173,152,0.99,153,1.214,155,2.605,174,2.441,189,3.921,191,2.225,234,1.28,307,3.644,346,3.488,366,2.054,370,5.947,449,5.028,512,3.434,640,4.044,939,2.687,951,4.462,1045,3.826,1054,3.352,1069,5.582,1070,2.771,1116,3.826,1169,3.488,1188,2.421,1204,5.792,1216,5.777,1217,6.953,1231,6.099,1242,5.028,1270,2.074,1273,4.668,1481,6.895,1482,6.895,1483,2.868,1484,7.063,1485,5.24,1486,5.24,1487,5.24,1488,6.301,1489,6.301,1490,5.24,1491,6.301,1492,6.301,1493,5.24,1494,5.24,1495,3.481,1496,4.876,1497,4.318,1498,5.24,1499,3.481,1500,4.044,1501,7.011,1502,7.52,1503,5.24,1504,5.24,1505,4.318,1506,3.488,1507,7.011,1508,8.438,1509,5.24,1510,3.481,1511,6.301,1512,3.481,1513,5.24,1514,4.044,1515,6.301,1516,3.481,1517,3.231,1518,6.301,1519,4.863,1520,7.011,1521,4.684,1522,5.24,1523,3.481,1524,5.24,1525,5.24,1526,4.044,1527,3.488,1528,6.301,1529,3.481,1530,3.826,1531,3.352,1532,3.826,1533,5.24,1534,3.481,1535,3.481,1536,3.111,1537,4.684,1538,3.481,1539,3.481,1540,4.684,1541,3.481,1542,3.481,1543,3.481,1544,6.301,1545,3.481,1546,3.481,1547,3.481,1548,3.481,1549,3.481,1550,5.24,1551,3.481,1552,3.481,1553,2.541,1554,2.687,1555,3.481,1556,3.481,1557,3.481]],["title/modules/FileSystemModule.html",[111,1.314,1558,3.613]],["body/modules/FileSystemModule.html",[0,0.184,3,0.164,4,0.137,5,0.113,27,0.006,44,0.306,46,1.242,48,0.155,59,0.005,60,0.005,111,2.254,113,2.75,114,3.637,121,4.26,122,3.234,123,3.033,125,3.637,147,4.156,1169,6.772,1481,5.463,1482,5.463,1558,7.222,1559,6.327,1560,6.327,1561,6.327,1562,7.078,1563,7.078]],["title/interfaces/GlobalConstants.html",[87,0.53,1564,3.819]],["body/interfaces/GlobalConstants.html",[3,0.16,4,0.134,5,0.092,10,0.356,11,1.097,17,0.386,27,0.006,29,0.882,36,1.207,44,0.25,48,0.152,59,0.005,60,0.005,76,1.56,87,0.742,89,2.019,1043,3.479,1564,6.952,1565,5.712,1566,7.895,1567,7.895,1568,7.895,1569,6.905,1570,6.931,1571,6.905,1572,5.061]],["title/classes/GlobalErrorFilter.html",[0,0.129,1365,3.613]],["body/classes/GlobalErrorFilter.html",[0,0.137,1,4.68,2,0.711,3,0.081,4,0.068,5,0.047,9,4.497,10,0.18,11,0.689,12,2.205,13,3.142,15,3.035,16,2.283,17,0.339,18,1.109,24,0.618,26,0.781,27,0.006,28,0.552,29,0.496,41,1.197,43,5.329,44,0.305,46,0.614,48,0.077,52,1.673,53,2.86,54,4.507,59,0.003,60,0.003,61,2.701,65,2.329,66,5.071,68,1.902,73,2.701,74,3.128,76,1.818,83,1.386,84,1.474,87,0.374,150,3.343,189,2.516,216,1.287,234,1.287,247,1.003,248,1.069,252,1.242,271,5.781,281,3.023,319,4.822,326,3.134,332,5.793,366,2.061,374,2.403,378,1.802,518,2.602,576,2.516,577,2.576,578,2.458,579,2.458,580,1.673,740,2.782,934,2.555,1059,1.756,1210,2.701,1255,2.701,1262,3.436,1343,4.876,1356,2.883,1364,4.647,1365,3.841,1423,4.889,1426,3.128,1433,1.902,1451,2.238,1496,2.433,1573,5.426,1574,2.555,1575,6.321,1576,5.817,1577,5.209,1578,5.271,1579,5.26,1580,3.499,1581,5.26,1582,6.321,1583,7.03,1584,3.499,1585,6.321,1586,3.499,1587,3.499,1588,3.128,1589,3.499,1590,3.499,1591,2.883,1592,3.128,1593,2.883,1594,6.34,1595,2.883,1596,2.555,1597,3.658,1598,2.883,1599,4.208,1600,2.329,1601,2.883,1602,3.128,1603,4.702,1604,3.128,1605,2.883,1606,3.128,1607,3.128,1608,3.128,1609,3.128,1610,3.128,1611,3.898,1612,4.335,1613,3.499,1614,3.499,1615,4.335,1616,3.499,1617,3.499,1618,3.499,1619,4.335,1620,3.499,1621,3.499,1622,5.26,1623,3.499,1624,3.499,1625,2.555,1626,4.702,1627,2.555,1628,3.128,1629,2.329,1630,2.238,1631,4.702,1632,2.883,1633,4.702,1634,3.128,1635,4.06,1636,3.128,1637,3.128,1638,2.701,1639,2.883,1640,3.128,1641,3.128,1642,2.701,1643,2.555,1644,2.701,1645,2.555,1646,3.128,1647,3.128,1648,3.128,1649,3.128,1650,6.737,1651,2.883,1652,6.737,1653,3.128,1654,2.883,1655,3.128,1656,3.499,1657,3.499,1658,3.499,1659,5.26,1660,3.499,1661,3.499]],["title/classes/GlobalValidationPipe.html",[0,0.129,1662,3.819]],["body/classes/GlobalValidationPipe.html",[0,0.221,1,4.059,2,1.24,3,0.141,4,0.118,5,0.081,8,2.055,11,0.798,17,0.364,21,1.974,23,5.382,24,0.597,27,0.006,44,0.279,46,1.069,48,0.133,50,2.202,53,4.862,59,0.004,60,0.004,64,1.893,68,3.315,73,4.706,83,0.905,84,1.135,211,2.087,234,2.846,247,2.22,261,3.412,325,5.152,399,4.465,556,3.432,614,2.786,630,3.801,655,3.14,661,4.465,674,3.633,768,2.509,837,3.9,1055,4.208,1058,3.518,1059,3.061,1061,3.412,1378,2.986,1463,3.9,1470,4.059,1662,5.973,1663,6.918,1664,5.45,1665,6.377,1666,6.377,1667,6.377,1668,6.377,1669,4.611,1670,8.503,1671,6.097,1672,5.382,1673,5.024,1674,6.097,1675,4.24,1676,6.097,1677,6.097,1678,6.097,1679,6.097,1680,4.706,1681,4.24,1682,4.452,1683,6.097,1684,4.452,1685,6.097,1686,5.024,1687,5.45,1688,6.097,1689,6.097]],["title/classes/GridElement.html",[0,0.129,761,2.617]],["body/classes/GridElement.html",[0,0.177,2,0.67,3,0.076,4,0.064,5,0.044,10,0.258,11,0.658,16,2.907,17,0.378,18,0.882,21,0.765,24,0.848,26,1.012,27,0.006,28,0.595,29,0.643,31,2.617,36,1.092,41,1.37,44,0.181,46,0.578,48,0.19,59,0.003,60,0.003,76,1.702,83,1.358,84,1.366,87,0.538,162,2.928,201,2.404,209,2.111,234,1.212,248,1.536,281,2.914,351,2.9,366,2.223,419,1.384,445,2.194,466,1.576,518,3.184,557,3.511,565,1.743,701,1.844,702,2.108,703,2.406,704,3.411,705,3.67,706,2.292,707,5.649,710,4.362,711,3.496,714,2.995,719,4.063,721,2.406,722,5.151,724,3.631,725,2.406,727,2.406,729,2.108,730,2.292,731,3.347,732,3.216,733,3.347,734,4.742,735,4.362,736,4.962,737,6.101,738,3.67,739,1.964,740,3.223,741,2.108,742,2.406,743,2.108,744,4.51,745,2.406,746,2.194,747,2.406,748,4.95,749,3.67,750,2.406,751,1.901,752,5.151,753,5.36,754,4.742,755,5.36,756,2.282,757,5.106,758,4.45,759,4.45,760,4.61,761,4.496,762,4.45,763,3.67,764,3.67,765,3.67,766,2.406,767,2.406,768,2.069,769,2.406,770,3.1,771,3.67,772,2.406,773,2.292,774,3.67,775,2.406,776,2.406,777,2.406,778,2.406,779,1.576,780,3.138,781,3.138,782,2.406,783,3.496,784,5.36,785,3.496,786,3.67,787,2.406,788,2.995,789,4.204,790,1.964,791,2.406,792,2.406,793,2.406,794,2.406,795,2.406,796,2.406,797,2.406,798,2.404,799,2.406,800,2.406,801,2.406,802,4.45,803,2.406,804,2.406,805,2.194,806,3.67,807,3.67,808,2.406,809,2.406,810,2.406,811,3.67,1690,4.494,1691,5.027,1692,5.027,1693,5.027,1694,3.295,1695,3.295,1696,2.946,1697,3.295,1698,3.295,1699,3.295,1700,3.295,1701,3.295,1702,3.295]],["title/interfaces/HtmlMailContent.html",[87,0.53,105,3.051]],["body/interfaces/HtmlMailContent.html",[3,0.149,4,0.125,5,0.086,8,2.492,10,0.33,11,1.048,17,0.343,27,0.006,28,0.562,29,0.755,36,1.233,48,0.141,59,0.005,60,0.005,87,1.038,88,4.938,89,1.875,90,4.118,91,5.375,92,5.331,93,4.286,94,4.286,95,4.938,96,4.286,97,4.286,98,4.286,99,5.624,100,4.118,101,4.286,102,4.938,103,6.246,104,6.246,105,5.375,106,4.354,107,4.118,108,4.286,109,4.286,110,4.286]],["title/interfaces/ICollectionFilePath.html",[87,0.53,1215,3.819]],["body/interfaces/ICollectionFilePath.html",[0,0.08,3,0.071,4,0.152,5,0.1,10,0.157,11,0.621,17,0.203,21,0.71,24,0.299,27,0.006,28,0.572,29,0.548,31,1.497,36,1.097,41,1.278,44,0.283,46,0.536,48,0.143,54,1.367,59,0.003,60,0.003,76,1.801,83,1.262,84,1.082,87,0.327,89,0.891,126,1.338,147,1.497,152,0.896,155,1.943,174,1.767,178,2.738,189,3.393,191,2.716,201,1.462,233,1.662,243,1.547,252,1.085,257,1.885,299,3.871,301,2.519,302,2.519,306,5.448,308,3.871,310,2.035,312,3.91,313,1.822,318,5.476,319,1.956,321,4.488,325,2.035,366,2.77,370,4.999,393,3.465,444,3.499,449,2.827,556,1.234,557,1.574,641,1.956,647,2.926,756,1.776,768,3.09,779,1.462,932,3.465,937,1.462,951,3.752,1037,1.885,1043,4.065,1044,6.111,1045,4.785,1048,4.558,1054,1.956,1055,2.58,1060,3.254,1069,4.042,1070,3.971,1071,4.488,1084,6.679,1104,3.72,1110,3.91,1157,2.519,1158,2.519,1159,2.733,1161,2.733,1165,2.733,1167,2.733,1169,3.871,1171,2.733,1173,3.3,1174,5.198,1175,3.91,1176,4.803,1177,4.792,1179,2.733,1180,2.733,1182,4.228,1183,2.232,1184,2.733,1186,4.242,1187,2.36,1188,4.044,1189,6.712,1190,2.733,1192,5.198,1194,5.198,1196,2.733,1197,2.519,1198,2.232,1199,3.91,1200,2.733,1202,2.733,1203,2.733,1204,2.926,1205,2.36,1208,2.519,1209,2.36,1210,2.36,1211,2.519,1212,1.885,1213,2.519,1214,2.519,1215,5.795,1216,6.673,1217,3.91,1218,2.733,1219,2.733,1220,4.242,1221,4.242,1222,4.242,1223,2.733,1224,2.733,1225,2.733,1226,2.733,1227,5.859,1228,2.733,1229,2.733,1230,2.733,1231,2.36,1232,2.733,1233,2.733,1234,2.733,1235,2.519,1236,2.733,1237,5.859,1238,4.792,1239,2.738,1240,2.733,1241,2.733,1242,1.822,1243,1.956,1244,2.733,1245,4.242,1246,4.242,1247,2.733,1248,2.733,1249,2.733,1250,1.711,1251,4.242,1252,2.519,1253,2.733,1254,2.733,1255,3.662,1256,4.242,1257,2.733,1258,4.242,1259,4.242,1260,2.733,1261,2.733,1262,2.58,1263,2.733,1264,2.733,1265,2.36,1266,2.733,1267,2.126,1268,2.36,1269,2.035,1270,1.822,1271,2.733,1272,2.519,1273,2.035,1274,2.733,1275,2.733,1276,2.733,1277,2.733,1278,2.733,1279,3.159,1280,2.733,1281,2.733,1282,2.733,1283,2.733,1284,2.733,1285,4.242,1286,2.733,1287,2.733,1288,2.733,1289,2.519,1290,1.711,1291,2.035,1292,2.733,1293,2.733,1294,2.733,1295,2.733,1296,3.465,1297,2.733,1298,3.662,1299,2.733,1300,2.733,1301,2.733,1302,2.733]],["title/interfaces/ICourseGroupProperties.html",[87,0.53,487,3.819]],["body/interfaces/ICourseGroupProperties.html",[0,0.165,3,0.147,4,0.123,5,0.085,8,1.687,10,0.326,11,1.04,17,0.389,27,0.006,29,0.749,44,0.337,48,0.174,50,2.294,59,0.004,60,0.004,83,0.943,84,1.182,87,0.68,89,1.85,169,2.524,172,1.956,210,3.269,217,2.077,218,2.037,219,2.902,222,3.085,252,2.254,408,3.718,412,5.568,416,2.722,426,3.711,429,3.271,431,4.903,442,2.902,443,3.785,444,2.468,446,2.722,448,3.271,465,2.839,468,4.417,475,4.903,476,4.903,484,3.785,485,5.234,486,5.678,487,6.687,489,3.665,490,4.417,493,3.665,494,4.638,495,4.417,496,4.417,497,5.678]],["title/interfaces/ICourseProperties.html",[87,0.53,417,3.819]],["body/interfaces/ICourseProperties.html",[0,0.128,3,0.114,4,0.096,5,0.066,8,1.309,10,0.456,11,0.881,17,0.403,21,1.144,27,0.006,28,0.776,29,0.911,31,1.555,36,1.174,44,0.311,48,0.108,50,1.78,59,0.004,60,0.004,64,2.76,76,0.917,83,0.732,84,1.426,87,0.527,89,1.436,162,1.53,169,2.642,172,1.657,209,1.127,216,3.025,217,1.289,218,1.58,222,2.613,232,2.715,247,2.196,252,2.718,268,2.414,395,2.936,408,1.845,409,3.804,410,5.344,411,3.623,412,5.132,413,6.289,414,5.99,415,4.405,416,2.112,417,5.911,420,4.405,421,4.405,423,4.405,426,3.845,427,2.303,429,3.944,431,3.804,433,4.405,435,4.405,442,2.252,443,2.936,444,1.914,445,3.281,446,2.112,447,3.039,448,2.538,449,4.008,450,4.912,451,4.405,452,3.804,453,4.405,454,3.427,455,4.405,456,4.405,457,4.061,458,3.598,459,3.598,460,3.427,461,4.405,462,4.405,463,3.598,464,4.061,465,2.203,466,2.357,467,3.039,468,5.326,469,3.765,470,2.758,471,6.013,472,4.405,473,3.804,474,3.039,475,3.804,476,3.804,477,4.405,478,4.405,479,4.405,480,4.405,481,6.013,482,4.405,483,4.405]],["title/interfaces/ICreateNews.html",[87,0.53,1703,3.441]],["body/interfaces/ICreateNews.html",[3,0.137,4,0.115,5,0.079,10,0.303,11,0.994,16,3.194,17,0.424,27,0.006,29,0.79,36,1.129,44,0.319,48,0.2,59,0.004,60,0.004,64,1.836,87,1.002,89,1.723,162,2.602,163,3.717,164,4.208,165,5.169,172,1.457,209,1.353,243,2.733,408,3.138,411,3.196,466,2.828,510,3.499,511,4.179,512,4.331,514,4.808,541,2.968,550,4.008,552,3.646,756,2.214,1703,5.278,1704,4.318,1705,6.785,1706,4.522,1707,5.286,1708,5.286,1709,5.286,1710,4.113,1711,4.113,1712,3.937,1713,4.318,1714,3.937,1715,5.286,1716,4.113,1717,3.937]],["title/interfaces/ICurrentUser.html",[87,0.53,697,2.548]],["body/interfaces/ICurrentUser.html",[3,0.139,4,0.117,5,0.08,10,0.309,11,1.005,17,0.41,27,0.006,28,0.526,36,1.241,44,0.217,48,0.195,59,0.004,60,0.004,87,0.905,89,1.754,166,3.223,169,2.475,173,3.895,182,5.605,209,2.151,242,2.528,243,2.503,245,2.58,427,4.465,697,3.953,1718,4.396,1719,5.695,1720,4.842,1721,5.339,1722,5.602,1723,4.257,1724,6.191,1725,5.339,1726,4.961,1727,5.111,1728,3.851,1729,3.851,1730,4.396]],["title/interfaces/IDashboardRepo.html",[87,0.53,1004,3.613]],["body/interfaces/IDashboardRepo.html",[0,0.167,3,0.106,4,0.089,5,0.061,10,0.236,12,1.601,17,0.275,18,1.123,24,0.722,26,0.951,27,0.006,28,0.559,29,0.604,41,1.256,44,0.303,46,0.805,48,0.14,57,2.195,59,0.004,60,0.004,76,1.744,83,1.291,84,1.778,87,0.491,89,1.337,152,1.21,155,2.186,162,2.606,172,1.817,174,2.526,186,1.337,191,2.641,209,1.465,210,1.889,217,1.201,219,2.097,232,1.852,254,3.192,260,4.943,266,3.387,268,2.248,270,3.542,277,5.694,288,3.782,324,2.648,669,4.599,701,4.867,704,2.569,719,3.816,724,5.003,739,2.735,740,2.427,751,2.648,761,4.599,779,4.015,780,4.324,781,4.324,846,2.83,897,3.351,907,5.277,919,3.782,974,3.192,975,3.542,976,5.725,977,6.919,979,6.594,984,4.103,985,4.943,986,3.782,987,4.943,988,5.277,989,6.919,990,4.264,991,6.578,992,7.871,993,7.355,994,3.782,995,4.264,996,3.782,997,3.782,998,3.782,999,3.782,1000,3.782,1001,3.782,1002,3.782,1003,3.782,1004,5.386,1005,3.782,1006,5.725,1007,5.725,1008,4.103,1009,4.103,1010,6.594,1011,4.103,1012,5.725,1013,4.103,1014,4.103,1731,4.59,1732,4.59,1733,4.59]],["title/interfaces/IErrorType.html",[87,0.53,334,3.613]],["body/interfaces/IErrorType.html",[3,0.168,4,0.141,5,0.097,10,0.372,11,1.127,12,3.202,16,3.43,17,0.426,27,0.006,36,1.215,48,0.159,55,6.934,59,0.005,60,0.005,87,0.776,89,2.111,334,6.284,1734,6.478,1735,6.478]],["title/interfaces/IFileProperties.html",[87,0.53,1477,3.819]],["body/interfaces/IFileProperties.html",[0,0.176,3,0.156,4,0.131,5,0.11,8,1.793,10,0.346,11,1.079,17,0.382,27,0.006,28,0.83,36,1.119,44,0.321,48,0.148,50,2.438,59,0.005,60,0.005,87,0.722,89,1.966,169,2.644,172,2.031,216,3.273,217,1.766,218,2.164,222,3.203,416,2.892,446,2.892,448,3.476,465,3.017,469,3.777,470,3.777,513,5.17,565,3.569,566,4.493,1070,3.569,1476,5.562,1477,6.872,1480,6.033]],["title/interfaces/IFindOptions.html",[87,0.53,1736,3.294]],["body/interfaces/IFindOptions.html",[3,0.162,4,0.136,5,0.093,10,0.359,11,1.102,17,0.387,27,0.006,29,0.885,31,2.657,48,0.205,59,0.005,60,0.005,87,0.901,89,2.036,541,3.509,1296,6.149,1714,4.653,1736,5.607,1737,5.103,1738,5.103,1739,5.591,1740,5.251,1741,7.732,1742,6.851,1743,4.653,1744,4.653,1745,5.103,1746,6.94]],["title/interfaces/IGridElement.html",[87,0.53,752,3.294]],["body/interfaces/IGridElement.html",[0,0.185,3,0.083,4,0.069,5,0.048,10,0.274,11,0.7,16,2.988,17,0.365,18,0.937,24,0.626,26,0.531,27,0.006,28,0.312,29,0.337,31,2.683,36,1.11,41,1.09,44,0.193,46,0.627,48,0.194,59,0.003,60,0.003,76,1.729,83,1.379,84,1.416,87,0.572,89,1.041,162,2.748,201,2.556,209,2.025,234,1.314,248,1.633,281,3.061,351,3.084,366,2.087,419,1.501,445,2.379,466,1.709,518,2.2,557,2.752,565,1.89,701,2,702,2.286,703,2.609,704,3.583,705,3.902,706,2.485,707,5.827,710,4.095,711,3.717,714,3.184,719,4.233,721,2.609,722,5.313,724,3.814,725,2.609,727,2.609,729,2.286,730,2.485,731,3.558,732,3.419,733,3.558,734,4.941,735,4.545,736,5.101,737,5.887,738,3.902,739,2.129,740,2.826,741,2.286,742,2.609,743,2.286,744,3.862,745,2.609,746,2.379,747,2.609,748,5.105,749,3.902,750,2.609,751,2.062,752,5.313,753,5.553,754,4.452,755,5.553,756,2.397,757,5.289,758,4.674,759,4.674,760,4.233,761,4.22,762,4.674,763,2.609,764,3.902,765,2.609,766,2.609,767,2.609,768,2.2,769,2.609,770,3.296,771,3.902,772,2.609,773,2.485,774,3.902,775,2.609,776,2.609,777,2.609,778,2.609,779,1.709,780,3.297,781,3.297,782,2.609,783,3.717,784,5.553,785,3.717,786,3.902,787,2.609,788,3.184,789,4.381,790,2.129,791,2.609,792,2.609,793,2.609,794,2.609,795,2.609,796,2.609,797,2.609,798,2.556,799,2.609,800,2.609,801,2.609,802,4.674,803,2.609,804,2.609,805,2.379,806,3.902,807,3.902,808,2.609,809,2.609,810,2.609,811,3.902,1611,4.381,1690,4.777,1696,3.195,1747,3.574,1748,3.574,1749,3.574]],["title/interfaces/IGridElementReference.html",[87,0.53,737,3.166]],["body/interfaces/IGridElementReference.html",[0,0.189,3,0.086,4,0.073,5,0.05,10,0.284,11,0.723,16,3.032,17,0.348,27,0.006,31,2.719,36,1.12,44,0.199,46,0.656,48,0.196,59,0.003,60,0.003,76,1.743,83,1.391,84,1.443,87,0.591,89,1.089,162,2.779,201,2.642,209,2.047,234,1.374,248,1.688,281,2.642,351,3.188,366,2.143,419,1.569,445,2.488,466,1.787,518,2.274,557,2.845,565,1.977,701,2.092,702,2.391,703,2.729,704,3.679,705,4.035,706,2.599,707,4.8,710,4.206,711,3.843,714,3.292,719,4.327,721,2.729,722,5.401,724,3.917,725,2.729,727,2.729,729,2.391,730,2.599,731,3.679,732,3.535,733,3.679,734,5.051,735,4.646,736,5.176,737,5.808,738,5.659,739,2.227,740,2.922,741,2.391,742,2.729,743,2.391,744,3.948,745,2.729,746,2.488,747,2.729,748,5.19,749,4.035,750,2.729,751,2.156,752,5.159,753,4.035,754,4.572,755,4.035,756,2.069,757,3.843,758,4.035,759,4.8,760,4.327,761,4.29,762,4.8,763,2.729,764,4.035,765,2.729,766,2.729,767,2.729,768,2.274,769,2.729,770,3.407,771,4.035,772,2.729,773,2.599,774,4.035,775,2.729,776,2.729,777,2.729,778,2.729,779,1.787,780,3.385,781,3.385,782,2.729,783,3.843,784,5.659,785,3.843,786,4.035,787,2.729,788,3.292,789,4.478,790,2.227,791,2.729,792,2.729,793,2.729,794,2.729,795,2.729,796,2.729,797,2.729,798,2.642,799,2.729,800,2.729,801,2.729,802,4.8,803,2.729,804,2.729,805,2.488,806,4.035,807,4.035,808,2.729,809,2.729,810,2.729,811,4.035,1611,3.407]],["title/interfaces/ILessonProperties.html",[87,0.53,1750,3.819]],["body/interfaces/ILessonProperties.html",[0,0.168,3,0.149,4,0.125,5,0.086,8,1.71,10,0.33,11,1.048,17,0.391,27,0.006,28,0.819,29,0.755,36,1.1,44,0.314,48,0.141,50,2.325,59,0.005,60,0.005,87,0.689,89,1.875,172,1.973,216,3.205,217,1.684,218,2.064,222,3.111,252,2.285,408,3.725,416,2.759,426,3.008,442,2.941,446,2.759,465,2.878,469,3.603,470,3.603,489,3.714,490,4.477,493,3.714,495,4.477,496,4.477,756,3.264,1059,3.231,1750,6.728,1751,5.305,1752,6.002,1753,4.477,1754,3.603,1755,7.159,1756,5.754]],["title/interfaces/ILogger.html",[87,0.53,1578,3.294]],["body/interfaces/ILogger.html",[3,0.142,4,0.119,5,0.082,10,0.314,15,5.332,17,0.396,18,1.361,24,0.904,26,1.372,27,0.006,28,0.807,29,0.924,36,1.228,41,1.573,48,0.134,54,3.468,59,0.004,60,0.004,87,0.655,89,1.783,336,5.284,1349,5.491,1578,5.164,1757,5.47,1758,5.987,1759,5.164,1760,7.757,1761,7.757,1762,6.119,1763,6.119,1764,6.934,1765,7.018,1766,6.119,1767,6.934,1768,6.119,1769,6.119,1770,6.119,1771,6.934,1772,6.119,1773,5.47,1774,5.47]],["title/interfaces/INewsProperties.html",[87,0.53,548,3.294]],["body/interfaces/INewsProperties.html",[0,0.194,3,0.092,4,0.161,5,0.053,8,1.985,10,0.204,11,0.756,16,2.993,17,0.406,27,0.006,28,0.504,29,0.826,36,1.163,44,0.316,48,0.174,50,1.433,59,0.003,60,0.003,83,0.589,84,1.267,87,0.425,89,1.156,162,2.818,163,3.66,164,3.416,166,1.666,169,2.485,172,1.956,190,2.76,209,0.908,216,3.145,217,1.038,218,1.273,222,2.243,229,3.809,234,2.502,243,2.437,324,3.331,351,2.29,408,2.162,411,3.546,416,1.701,419,1.666,426,3.18,427,1.854,442,1.813,444,2.243,446,1.701,447,2.447,448,2.044,467,3.56,474,2.447,489,2.29,493,2.29,508,2.365,509,2.76,510,3.505,511,4.148,512,4.059,513,4.505,514,4.317,515,5.798,516,5.523,517,5.517,518,1.633,522,2.539,523,3.56,524,2.76,527,2.898,528,3.56,529,2.898,530,2.76,531,1.992,532,2.642,533,2.76,537,4.312,538,4.781,541,2.898,543,2.642,545,2.898,547,2.898,548,4.976,550,2.761,551,2.898,552,4.897,553,2.898,554,2.365,555,2.76,556,1.602,557,2.044,558,2.642,559,2.447,560,2.898,561,2.898,562,2.898,563,2.898,564,2.898,565,2.099,566,2.642,567,2.898,568,2.898,569,2.898,570,2.898,571,2.898,572,2.898,573,2.898,574,2.898,575,4.216,576,3.255,577,3.333,578,3.18,579,3.18,580,3.255,581,3.927,582,3.927,583,2.898,584,4.216,585,2.898,586,2.898,587,4.969,588,2.447,589,2.447,590,2.898]],["title/interfaces/INewsScope.html",[87,0.53,1716,3.441]],["body/interfaces/INewsScope.html",[3,0.14,4,0.117,5,0.08,10,0.309,11,1.006,16,2.178,17,0.419,27,0.006,29,0.887,36,0.927,44,0.321,48,0.201,59,0.004,60,0.004,64,1.872,87,1.007,89,1.757,162,2.626,163,3.764,164,4.247,165,5.493,172,1.486,209,1.379,243,1.966,408,3.167,411,3.226,466,2.884,510,3.459,511,4.204,512,2.954,514,3.279,541,3.027,550,4.046,552,3.719,756,3.167,1703,4.194,1704,4.403,1705,5.391,1706,4.58,1707,5.391,1708,5.391,1709,5.391,1710,4.194,1711,4.194,1712,4.015,1713,4.403,1714,4.015,1715,6.87,1716,5.345,1717,5.931]],["title/interfaces/IPagination.html",[87,0.53,1742,3.613]],["body/interfaces/IPagination.html",[3,0.162,4,0.136,5,0.093,10,0.359,11,1.102,17,0.387,27,0.006,29,0.885,31,3.077,48,0.205,59,0.005,60,0.005,87,0.901,89,2.036,541,3.509,1296,6.149,1714,4.653,1736,4.653,1737,5.103,1738,5.103,1739,4.165,1740,3.912,1741,6.94,1742,6.6,1743,6.247,1744,6.247,1745,5.103,1746,6.94]],["title/interfaces/IResolvedUser.html",[87,0.53,1724,3.441]],["body/interfaces/IResolvedUser.html",[3,0.137,4,0.115,5,0.079,10,0.305,11,0.996,17,0.421,27,0.006,28,0.518,36,1.239,44,0.214,48,0.194,59,0.004,60,0.004,87,0.899,89,1.729,166,3.844,169,1.65,173,2.597,182,4.333,209,2.179,242,3.718,243,3.054,245,3.795,427,4.377,697,3.056,1718,4.333,1719,3.797,1720,4.824,1721,4.127,1722,5.003,1723,4.015,1724,5.839,1725,4.127,1726,4.89,1727,5.895,1728,5.665,1729,5.665,1730,4.333]],["title/interfaces/IRole.html",[87,0.53,1727,3.294]],["body/interfaces/IRole.html",[3,0.148,4,0.124,5,0.085,10,0.329,11,1.046,17,0.39,27,0.006,28,0.795,36,1.235,44,0.231,48,0.199,59,0.004,60,0.004,87,0.931,89,1.868,166,3.354,169,1.783,173,2.806,182,4.682,209,2.217,242,2.693,243,2.604,245,2.748,427,4.066,697,3.302,1718,4.682,1719,4.103,1720,4.481,1721,4.46,1722,5.185,1723,4.161,1724,5.556,1725,4.46,1726,5.284,1727,5.793,1728,4.103,1729,4.103,1730,4.682]],["title/interfaces/IRoleProperties.html",[87,0.53,1775,3.819]],["body/interfaces/IRoleProperties.html",[0,0.157,3,0.139,4,0.117,5,0.08,8,1.599,10,0.434,11,1.005,17,0.382,27,0.006,28,0.821,29,0.839,36,1.167,44,0.277,48,0.168,50,2.174,59,0.004,60,0.004,84,1.573,87,0.644,89,1.754,166,3.861,172,1.891,216,3.108,217,1.575,218,1.931,222,2.982,232,2.43,416,2.58,426,2.813,429,4.353,443,4.574,444,2.339,446,2.58,465,2.691,469,3.369,470,3.369,531,3.022,541,3.854,661,3.473,1057,4.396,1375,4.911,1514,4.646,1611,3.712,1682,4.396,1720,5.07,1723,4.398,1775,6.524,1776,4.961,1777,5.381,1778,4.646,1779,4.396,1780,5.925,1781,6.863,1782,5.381,1783,5.381,1784,4.646]],["title/interfaces/ISubmissionProperties.html",[87,0.53,1785,3.819]],["body/interfaces/ISubmissionProperties.html",[0,0.12,3,0.107,4,0.09,5,0.122,8,1.226,10,0.237,11,0.842,17,0.413,27,0.006,29,0.901,31,2.654,36,1.117,44,0.314,48,0.101,50,1.667,59,0.004,60,0.004,76,1.197,83,0.685,84,1.377,87,0.494,89,1.344,169,2.535,172,1.584,216,2.942,217,1.207,218,1.48,222,2.498,252,2.84,416,1.978,419,1.938,426,4.071,429,3.81,442,2.109,443,2.75,444,1.793,446,1.978,448,2.377,465,2.063,468,3.21,484,5.697,523,2.846,565,2.441,756,1.728,937,3.538,1422,5.188,1785,5.71,1786,3.803,1787,7.521,1788,6.933,1789,7.521,1790,7.99,1791,6.059,1792,7.99,1793,4.485,1794,7.512,1795,4.125,1796,4.125,1797,4.125,1798,3.072,1799,2.846,1800,4.125,1801,4.125,1802,3.803,1803,4.125,1804,4.125,1805,5.298,1806,5.747,1807,4.125,1808,2.952,1809,4.125,1810,6.614,1811,4.962,1812,6.614,1813,5.747,1814,4.125,1815,4.125,1816,4.125,1817,4.125,1818,4.125,1819,4.125,1820,4.125,1821,3.562,1822,4.125,1823,4.125,1824,4.125]],["title/interfaces/ITaskProperties.html",[87,0.53,1825,3.819]],["body/interfaces/ITaskProperties.html",[0,0.124,3,0.11,4,0.093,5,0.064,8,1.268,10,0.245,11,0.861,17,0.412,27,0.006,28,0.803,29,0.919,36,1.088,44,0.318,48,0.144,50,1.724,59,0.004,60,0.004,64,2.338,83,0.977,84,0.888,87,0.511,89,1.391,169,2.368,172,1.621,216,3.131,217,1.249,218,1.531,222,2.557,243,2.997,252,2.336,366,2.87,408,3.535,410,4.346,416,2.046,426,3.52,429,2.458,442,2.181,444,1.854,446,2.046,448,2.458,463,3.485,465,2.134,469,2.671,470,2.671,489,2.754,490,3.32,493,2.754,495,4.577,496,3.32,523,2.943,556,1.926,756,3.039,825,3.485,1043,3.304,1422,2.943,1532,3.485,1754,5.284,1793,3.147,1798,5.67,1799,5.006,1808,5.448,1825,5.813,1826,3.684,1827,7.018,1828,6.218,1829,4.267,1830,4.267,1831,6.206,1832,3.933,1833,3.684,1834,4.267,1835,4.267,1836,2.595,1837,4.267,1838,3.054,1839,5.883,1840,4.267,1841,7.257,1842,4.267,1843,5.883,1844,4.267,1845,4.267,1846,4.267,1847,4.267,1848,4.267,1849,4.267,1850,5.883,1851,4.267,1852,4.267,1853,4.267,1854,4.267]],["title/interfaces/ITaskStatus.html",[87,0.53,1855,3.819]],["body/interfaces/ITaskStatus.html",[0,0.177,3,0.157,4,0.132,5,0.091,10,0.348,11,1.083,17,0.398,27,0.006,31,3.146,44,0.245,48,0.149,59,0.005,60,0.005,87,0.727,89,1.978,756,3.342,1793,4.556,1821,5.241,1838,5.945,1855,7.172,1856,5.596,1857,5.596,1858,6.785,1859,6.785,1860,6.785,1861,6.07,1862,4.723,1863,5.943,1864,6.07,1865,6.07]],["title/interfaces/IUserProperties.html",[87,0.53,1866,3.819]],["body/interfaces/IUserProperties.html",[0,0.151,3,0.134,4,0.113,5,0.077,8,1.541,10,0.466,11,0.981,17,0.406,27,0.006,28,0.725,29,0.828,36,1.195,44,0.317,48,0.164,50,2.095,59,0.004,60,0.004,84,1.08,87,0.621,89,1.69,169,1.613,172,1.847,216,3.228,217,1.517,218,1.86,222,2.912,252,2.059,411,3.731,416,2.486,426,3.503,427,2.711,429,2.987,442,2.65,443,3.456,444,2.253,446,2.486,447,3.577,465,2.593,467,3.577,473,4.477,474,3.577,1375,4.796,1720,4.795,1722,3.456,1723,4.199,1728,5.816,1729,5.816,1780,4.477,1784,4.477,1866,6.41,1867,4.78,1868,6.322,1869,5.185,1870,5.185,1871,5.185,1872,5.185,1873,5.185,1874,5.185,1875,5.185,1876,5.185,1877,5.185,1878,5.185]],["title/interfaces/InlineAttachment.html",[87,0.53,95,3.051]],["body/interfaces/InlineAttachment.html",[3,0.151,4,0.126,5,0.087,8,2.5,10,0.334,11,1.056,17,0.279,27,0.006,28,0.569,36,1.23,48,0.143,59,0.005,60,0.005,87,1.041,88,4.974,89,1.897,90,4.166,91,5.647,92,6.267,93,4.336,94,4.336,95,5.404,96,4.336,97,6.097,98,4.336,99,5.404,100,4.166,101,4.336,102,4.974,103,5.37,104,5.37,105,4.974,106,4.385,107,4.166,108,4.336,109,4.336,110,4.336]],["title/modules/InterceptorModule.html",[111,1.314,385,3.613]],["body/modules/InterceptorModule.html",[0,0.172,3,0.153,4,0.128,5,0.088,27,0.006,44,0.318,46,1.161,48,0.145,59,0.005,60,0.005,64,2.054,73,5.106,111,2.163,113,2.57,125,2.835,231,5.022,232,2.67,261,3.703,378,4.742,385,5.947,399,4.699,400,6.443,768,3.352,1055,4.428,1243,5.211,1323,4.232,1332,5.664,1334,4.307,1368,6.286,1836,4.428,1879,6.616,1880,6.712,1881,6.286,1882,5.022,1883,9.209,1884,5.664,1885,6.712,1886,7.108,1887,4.404]],["title/injectables/JwtAuthGuard.html",[152,0.935,1888,3.819]],["body/injectables/JwtAuthGuard.html",[0,0.198,3,0.176,4,0.147,5,0.101,8,2.017,27,0.006,44,0.319,46,1.332,48,0.166,59,0.005,60,0.005,128,5.86,152,1.671,153,2.648,1888,6.827,1889,6.787,1890,6.787,1891,7.593,1892,7.593]],["title/interfaces/JwtConstants.html",[87,0.53,133,3.441]],["body/interfaces/JwtConstants.html",[3,0.152,4,0.127,5,0.087,10,0.336,11,1.06,17,0.393,27,0.006,36,1.196,44,0.236,48,0.177,59,0.005,60,0.005,76,1.507,87,0.701,89,1.908,133,6.382,150,3.464,173,2.867,232,2.644,556,2.644,930,5.056,951,3.464,1706,4.824,1719,5.179,1893,5.398,1894,8.429,1895,7.278,1896,7.237,1897,6.551,1898,6.551,1899,6.671,1900,5.398,1901,4.783,1902,4.361,1903,6.551,1904,5.856,1905,5.856,1906,5.856,1907,6.551,1908,5.856,1909,4.783,1910,5.056,1911,6.551,1912,5.398,1913,6.551,1914,5.398,1915,5.856,1916,6.551,1917,6.551,1918,5.856,1919,5.856]],["title/interfaces/JwtPayload.html",[87,0.53,1920,3.819]],["body/interfaces/JwtPayload.html",[3,0.149,4,0.125,5,0.086,8,2.129,10,0.331,11,1.05,17,0.41,27,0.006,31,3.019,36,1.213,44,0.233,48,0.141,59,0.005,60,0.005,87,0.69,89,1.879,186,1.879,232,3.684,697,4.493,1904,8.159,1905,8.159,1906,8.159,1908,8.159,1909,6.664,1910,7.045,1914,6.607,1915,7.167,1920,6.188,1921,5.766,1922,5.766,1923,6.607]],["title/injectables/JwtStrategy.html",[119,3.613,152,0.935]],["body/injectables/JwtStrategy.html",[0,0.151,3,0.134,4,0.112,5,0.077,8,1.538,10,0.297,12,2.612,17,0.321,18,1.313,21,1.344,24,0.733,26,1.112,27,0.006,28,0.654,29,0.706,41,0.986,44,0.342,46,1.016,48,0.127,50,2.092,59,0.004,60,0.004,76,1.394,83,0.86,119,5.467,120,6.586,128,4.469,131,5.176,133,4.027,134,4.772,136,5.176,152,1.414,153,2.02,155,2.272,169,1.61,173,2.534,174,2.019,188,2.292,191,2.216,232,3.022,233,4.512,366,1.888,1059,2.907,1250,3.241,1273,3.855,1669,3.45,1680,4.469,1719,3.704,1723,2.769,1881,5.779,1910,5.779,1920,6.772,1924,5.176,1925,5.791,1926,6.472,1927,5.791,1928,7.488,1929,5.791,1930,7.843,1931,5.791,1932,4.469,1933,5.176,1934,5.525,1935,5.791,1936,5.791,1937,5.791,1938,5.791,1939,5.791,1940,5.791,1941,5.791,1942,5.791,1943,5.791,1944,5.791,1945,5.176,1946,5.791,1947,4.617,1948,5.791,1949,5.791,1950,4.772,1951,5.791,1952,5.176,1953,3.062,1954,5.176,1955,5.791,1956,5.791]],["title/injectables/JwtValidationAdapter.html",[120,3.441,152,0.935]],["body/injectables/JwtValidationAdapter.html",[0,0.144,3,0.128,4,0.108,5,0.074,10,0.285,17,0.312,18,1.278,24,0.713,26,1.082,27,0.006,28,0.636,29,0.687,36,1.188,41,1.24,44,0.263,46,0.974,48,0.121,59,0.004,60,0.004,64,1.723,76,1.356,120,5.066,152,1.376,153,1.936,155,2.519,174,2.328,189,3.483,191,2.155,209,1.974,231,5.323,233,3.96,307,5.066,576,3.483,577,3.567,578,3.404,579,3.404,580,3.483,581,4.202,637,4.492,1058,4.202,1059,2.786,1290,4.076,1342,5.747,1680,5.622,1719,5.522,1721,5.066,1722,4.34,1910,7.426,1923,6.002,1934,6.333,1957,6.7,1958,4.573,1959,7.284,1960,7.284,1961,7.284,1962,5.55,1963,7.284,1964,5.55,1965,7.284,1966,6.002,1967,5.318,1968,7.284,1969,7.284,1970,6.511,1971,6.511,1972,5.55,1973,7.284,1974,5.55,1975,5.55,1976,7.284,1977,5.55,1978,5.55,1979,5.55,1980,5.55]],["title/modules/LearnroomModule.html",[111,1.314,1981,3.613]],["body/modules/LearnroomModule.html",[0,0.18,3,0.16,4,0.134,5,0.092,27,0.006,44,0.338,46,1.216,48,0.152,59,0.005,60,0.005,111,2.226,113,2.693,114,3.591,121,4.206,122,3.167,123,2.97,125,3.591,126,3.033,665,6.952,666,4.007,685,6.771,686,6.196,974,5.828,1025,6.196,1334,3.665,1368,5.35,1981,7.109,1982,6.196,1983,6.196,1984,6.931,1985,6.931,1986,6.931]],["title/classes/Lesson.html",[0,0.129,1754,2.769]],["body/classes/Lesson.html",[0,0.146,2,1.14,3,0.13,4,0.109,5,0.075,8,1.947,10,0.288,11,0.96,17,0.395,21,1.301,24,0.933,26,0.832,27,0.006,28,0.785,29,0.528,32,3.639,36,1.045,44,0.295,48,0.123,50,2.025,59,0.004,60,0.004,84,1.365,87,0.6,172,1.806,208,3.208,209,1.677,210,2.307,211,2.534,212,2.62,214,2.62,216,3.392,217,1.466,218,1.798,222,3.651,242,3.078,243,2.39,245,3.142,247,2.343,248,2.496,251,2.814,252,2.602,408,3.569,416,3.142,419,2.354,426,3.426,437,2.887,438,2.887,439,2.887,440,2.887,442,2.561,446,2.402,465,2.506,469,3.137,470,3.137,489,4.23,490,5.099,493,3.234,495,3.899,496,3.899,756,2.099,1059,3.68,1750,6.688,1751,4.619,1752,5.544,1753,3.899,1754,4.103,1755,6.554,1756,5.011,1987,7.332,1988,5.606,1989,5.606]],["title/injectables/LessonRepo.html",[152,0.935,1990,3.441]],["body/injectables/LessonRepo.html",[0,0.162,3,0.144,4,0.121,5,0.083,10,0.319,12,2.17,17,0.386,18,1.375,21,1.444,24,0.767,26,1.164,27,0.006,28,0.685,29,0.739,41,1.059,44,0.325,46,1.091,48,0.136,59,0.004,60,0.004,76,1.459,83,0.924,84,1.158,152,1.481,153,2.17,155,2.35,162,2.797,174,2.114,186,1.812,188,2.463,217,1.628,218,1.995,232,3.164,252,2.208,265,3.707,266,4.765,268,3.839,336,3.482,504,4.327,603,3.359,613,5.127,756,2.329,1198,6.267,1706,4.671,1740,4.387,1752,3.98,1753,5.452,1754,4.387,1990,5.452,1991,5.562,1992,7.839,1993,6.222,1994,7.839,1995,6.222,1996,4.387,1997,6.46,1998,6.05,1999,6.222,2000,6.222,2001,6.222,2002,6.222]],["title/classes/LessonScope.html",[0,0.129,1998,3.819]],["body/classes/LessonScope.html",[0,0.157,2,1.224,3,0.139,4,0.117,5,0.08,8,2.039,10,0.309,11,1.005,17,0.394,18,1.347,24,0.9,26,1.255,27,0.006,28,0.738,29,0.797,32,3.549,41,1.439,44,0.277,48,0.132,59,0.004,60,0.004,83,1.14,162,2.763,186,1.754,247,1.727,248,1.839,281,2.879,366,2.902,408,2.254,504,5.339,603,4.095,610,5.605,614,2.751,615,5.605,616,5.605,618,5.605,619,4.187,620,4.646,621,5.407,622,4.646,624,4.396,625,5.339,626,4.646,756,3.165,1752,3.851,1754,3.369,1998,7.257,2003,7.556,2004,4.646,2005,6.863,2006,7.677,2007,6.863,2008,5.381,2009,7.677,2010,6.02,2011,7.677,2012,5.381]],["title/injectables/Logger.html",[152,0.935,1343,2.855]],["body/injectables/Logger.html",[0,0.171,3,0.152,4,0.127,5,0.087,8,2.153,18,1.151,27,0.006,44,0.292,46,1.151,48,0.144,59,0.005,60,0.005,152,1.531,153,2.289,184,4.199,189,3.876,234,2.413,247,1.883,331,3.215,377,3.295,603,3.473,740,4.286,768,3.336,1290,3.673,1330,3.215,1343,5.443,1349,4.781,1379,4.048,1435,4.565,1463,4.199,1531,4.199,1553,4.793,1578,6.114,1669,3.911,1759,5.854,2013,5.868,2014,9.184,2015,6.564,2016,6.564,2017,4.565,2018,5.868,2019,5.066,2020,5.409,2021,4.37,2022,7.245,2023,4.793,2024,6.564,2025,6.564,2026,5.409,2027,4.793,2028,5.868,2029,4.199,2030,6.564,2031,6.564,2032,6.564]],["title/modules/LoggerModule.html",[111,1.314,386,3.166]],["body/modules/LoggerModule.html",[0,0.185,3,0.165,4,0.138,5,0.095,27,0.006,44,0.307,46,1.25,48,0.156,59,0.005,60,0.005,111,2.262,113,2.767,114,3.65,121,4.276,122,3.255,123,3.053,125,3.65,147,4.172,386,6.336,1343,5.873,2033,6.368,2034,6.368,2035,6.368,2036,7.124,2037,7.124]],["title/interfaces/Mail.html",[87,0.53,106,2.69]],["body/interfaces/Mail.html",[3,0.14,4,0.117,5,0.081,8,2.369,10,0.311,11,1.008,17,0.404,27,0.006,28,0.529,29,0.913,36,1.239,48,0.132,59,0.004,60,0.004,87,1.024,88,4.75,89,1.763,90,3.872,91,5.225,92,5.129,93,4.03,94,4.03,95,4.75,96,4.03,97,4.03,98,4.03,99,5.225,100,3.872,101,4.03,102,5.5,103,5.129,104,5.129,105,5.5,106,5.119,107,5.707,108,5.938,109,5.938,110,5.938]],["title/interfaces/MailAttachment.html",[87,0.53,91,3.051]],["body/interfaces/MailAttachment.html",[3,0.148,4,0.124,5,0.085,8,2.417,10,0.328,11,1.045,17,0.373,27,0.006,28,0.795,36,1.237,48,0.14,59,0.004,60,0.004,87,1.037,88,4.92,89,1.865,90,4.095,91,5.613,92,5.312,93,6.06,94,6.06,95,4.92,96,4.261,97,4.261,98,4.261,99,5.361,100,4.095,101,4.261,102,4.92,103,5.312,104,5.312,105,4.92,106,4.338,107,4.095,108,4.261,109,4.261,110,4.261]],["title/interfaces/MailContent.html",[87,0.53,99,3.051]],["body/interfaces/MailContent.html",[3,0.148,4,0.124,5,0.085,8,2.419,10,0.329,11,1.046,17,0.342,27,0.006,28,0.56,29,0.753,36,1.228,48,0.14,59,0.004,60,0.004,87,1.037,88,5.617,89,1.868,90,4.103,91,5.366,92,5.319,93,4.269,94,4.269,95,5.617,96,4.269,97,4.269,98,4.269,99,5.617,100,5.827,101,6.064,102,4.926,103,5.319,104,5.319,105,4.926,106,4.343,107,4.103,108,4.269,109,4.269,110,4.269]],["title/modules/MailModule.html",[111,1.314,2038,3.441]],["body/modules/MailModule.html",[0,0.163,3,0.145,4,0.122,5,0.084,17,0.369,18,1.1,24,0.613,26,0.931,27,0.006,28,0.688,29,0.591,36,1.039,41,1.067,44,0.311,46,1.1,48,0.137,59,0.004,60,0.004,76,1.466,83,1.17,87,0.671,111,2.287,113,2.435,125,2.686,126,2.743,147,3.07,518,3.242,1041,3.767,1334,3.315,1335,4.577,2038,5.99,2039,4.577,2040,5.603,2041,6.49,2042,6.973,2043,6.268,2044,6.647,2045,7.097,2046,4.577,2047,4.173,2048,5.99,2049,5.603,2050,5.751,2051,5.751,2052,5.751,2053,6.079,2054,5.165,2055,4.838,2056,5.165,2057,5.165,2058,6.49,2059,4.838,2060,5.165,2061,5.603,2062,5.603,2063,5.603]],["title/interfaces/MailModuleOptions.html",[87,0.53,2042,3.819]],["body/interfaces/MailModuleOptions.html",[0,0.161,3,0.143,4,0.12,5,0.082,10,0.317,11,1.023,17,0.397,27,0.006,28,0.54,36,1.184,44,0.309,46,1.085,48,0.135,59,0.004,60,0.004,76,1.454,83,1.16,87,0.662,89,1.802,111,2.274,125,2.651,126,2.707,147,3.03,518,2.546,1041,2.959,1334,3.272,1335,4.518,2038,5.433,2039,4.518,2041,5.098,2042,6.608,2044,6.029,2045,7.054,2046,4.518,2047,4.119,2048,5.954,2049,5.531,2050,6.77,2051,6.77,2052,6.77,2053,6.029,2054,5.098,2055,4.775,2056,5.098,2057,5.098,2058,6.437,2059,4.775,2060,5.098,2061,5.531,2062,5.531,2063,5.531]],["title/injectables/MailService.html",[152,0.935,2048,3.441]],["body/injectables/MailService.html",[0,0.168,3,0.149,4,0.125,5,0.086,10,0.33,12,2.793,17,0.343,18,1.405,21,1.859,24,0.784,26,1.189,27,0.006,28,0.699,29,0.755,36,0.966,41,1.096,44,0.314,46,1.129,48,0.141,59,0.005,60,0.005,87,0.689,106,4.959,152,1.513,153,2.245,155,2.387,174,2.159,191,1.905,366,2.611,556,2.598,768,3.296,1024,3.97,1041,4.169,1318,5.803,2046,4.7,2047,4.286,2048,5.569,2051,4.7,2052,4.7,2064,5.305,2065,6.599,2066,6.437,2067,8.549,2068,7.04,2069,6.437,2070,7.159,2071,6.437,2072,5.754,2073,5.754,2074,5.754,2075,5.754,2076,4.969]],["title/interfaces/MailServiceOptions.html",[87,0.53,2068,3.819]],["body/interfaces/MailServiceOptions.html",[0,0.175,3,0.156,4,0.13,5,0.09,10,0.345,11,1.077,12,2.869,17,0.353,21,1.56,27,0.006,36,1.166,44,0.321,46,1.179,48,0.147,59,0.005,60,0.005,87,0.719,89,1.958,106,4.472,152,1.554,155,1.841,174,1.813,191,1.989,366,2.681,556,2.713,768,2.767,1024,4.145,1041,3.215,1318,4.475,2046,4.908,2047,4.475,2048,4.675,2051,6.761,2052,6.761,2064,5.539,2067,7.944,2068,6.859,2070,6.009,2072,6.009,2073,6.009,2074,6.009,2075,6.009,2076,5.188]],["title/modules/ManagementModule.html",[111,1.314,2077,3.613]],["body/modules/ManagementModule.html",[0,0.14,3,0.125,4,0.105,5,0.072,17,0.231,27,0.006,36,0.651,44,0.354,46,0.947,48,0.118,59,0.004,60,0.004,83,0.802,84,1.005,111,2.13,113,2.097,114,3.065,121,3.59,122,2.466,123,2.313,125,3.437,126,3.129,169,1.501,181,2.71,186,1.572,217,1.871,218,1.731,232,2.178,299,6.077,313,3.216,359,5.629,363,2.935,576,2.581,577,2.644,578,2.522,579,2.522,580,2.581,666,3.42,729,3.453,1031,5.222,1037,5.629,1052,4.166,1053,4.166,1074,6.19,1100,6.665,1104,5.84,1211,4.448,1212,3.328,1213,4.448,1214,4.448,1330,2.644,1433,2.935,1558,6.665,1566,5.893,1567,5.893,1568,5.893,1642,4.166,1643,3.941,1644,4.166,2077,7.295,2078,4.825,2079,4.825,2080,5.398,2081,5.398,2082,4.166,2083,4.166,2084,6.393,2085,6.393,2086,5.222,2087,4.825,2088,5.398,2089,5.398,2090,5.398,2091,5.398,2092,5.398,2093,4.448,2094,5.398,2095,3.941,2096,3.941,2097,3.941,2098,4.825,2099,6.393,2100,4.825,2101,4.166,2102,3.453,2103,5.398]],["title/modules/MongoMemoryDatabaseModule.html",[111,1.314,2104,3.819]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.129,3,0.115,4,0.096,5,0.066,12,1.732,17,0.29,18,0.871,21,1.152,24,0.661,26,0.737,27,0.006,28,0.434,29,0.468,41,1.151,44,0.329,46,0.871,48,0.181,59,0.004,60,0.004,76,1.658,83,1.226,111,2.192,113,1.929,125,2.128,126,2.172,147,2.432,155,2.364,174,2.073,181,2.492,186,1.446,191,2.555,217,1.769,218,1.592,220,3.832,232,2.004,313,5.145,336,2.778,366,2.506,399,2.864,518,2.783,554,2.958,740,2.625,833,2.432,834,3.061,937,2.374,1024,4.169,1041,3.947,1117,3.176,1135,3.176,1323,3.176,1330,3.311,1334,3.575,1342,4.501,1629,3.305,1967,3.625,2029,3.176,2040,4.438,2041,5.571,2044,6.37,2082,6.37,2083,3.832,2086,4.936,2096,4.936,2104,5.934,2105,5.934,2106,6.34,2107,6.335,2108,4.091,2109,7.378,2110,4.965,2111,8.635,2112,4.965,2113,6.043,2114,6.043,2115,6.872,2116,7.964,2117,4.965,2118,5.571,2119,4.438,2120,6.043,2121,4.438,2122,4.438,2123,4.438,2124,4.091,2125,3.625,2126,3.625,2127,4.091,2128,3.453,2129,4.438,2130,4.091,2131,3.832,2132,4.438,2133,4.438,2134,4.438,2135,4.438,2136,4.438,2137,4.438,2138,4.965,2139,3.453,2140,4.965,2141,4.438,2142,6.761,2143,5.571,2144,3.453,2145,3.625,2146,4.438,2147,4.965,2148,4.965]],["title/classes/MoveElementParams.html",[0,0.129,675,3.613]],["body/classes/MoveElementParams.html",[0,0.241,2,1.372,3,0.156,4,0.131,5,0.09,10,0.346,11,1.165,17,0.353,24,0.807,27,0.006,29,0.636,31,2.601,44,0.297,48,0.18,59,0.005,60,0.005,211,2.223,510,2.482,630,3.017,632,3.777,655,4.585,657,3.017,661,3.894,675,6.02,780,3.476,781,3.476,951,3.569,1669,4.022,1712,4.493,2149,5.562,2150,7.34,2151,8.245,2152,6.749,2153,6.749,2154,7.958,2155,7.958,2156,5.562,2157,5.562,2158,5.562,2159,4.493,2160,5.209,2161,6.794]],["title/classes/MoveElementPosition.html",[0,0.129,2150,3.819]],["body/classes/MoveElementPosition.html",[0,0.245,2,1.324,3,0.151,4,0.126,5,0.087,10,0.334,11,1.199,17,0.346,24,0.789,27,0.006,29,0.76,31,2.889,44,0.291,48,0.177,59,0.005,60,0.005,64,2.022,211,2.175,510,2.966,630,3.606,632,4.514,655,4.513,657,2.911,661,3.758,675,4.755,780,4.513,781,4.513,951,4.266,1669,4.806,1712,5.37,2149,5.367,2150,7.069,2154,7.833,2155,7.833,2156,5.367,2157,6.647,2158,6.647,2159,5.37,2160,6.226,2161,6.647,2162,8.066,2163,6.513,2164,6.513]],["title/classes/News.html",[0,0.129,510,1.819]],["body/classes/News.html",[0,0.179,2,0.681,3,0.077,4,0.143,5,0.045,8,1.964,10,0.172,11,0.666,16,2.812,17,0.41,18,0.893,21,0.777,24,0.925,26,0.756,27,0.006,28,0.68,29,0.821,32,2.886,36,1.117,41,0.57,44,0.301,48,0.162,50,1.209,59,0.003,60,0.003,83,0.497,84,1.376,87,0.358,162,2.134,163,3.963,164,3.908,166,2.584,169,2.25,172,1.821,190,2.329,208,2.226,209,1.572,210,1.378,211,2.474,212,1.565,214,1.565,216,3.373,217,0.876,218,1.074,222,3.143,229,3.444,234,2.263,242,2.136,243,2.41,245,2.18,247,1.765,248,1.88,251,1.681,252,1.188,324,2.936,351,1.932,408,1.905,411,3.321,416,2.18,419,2.886,426,3.638,427,2.378,437,1.724,438,1.724,439,1.724,440,1.724,442,1.53,444,2.67,446,1.435,447,2.065,448,1.724,467,3.795,474,2.065,489,1.932,493,1.932,508,1.995,509,2.329,510,3.531,511,3.979,512,3.813,513,4.019,514,3.737,515,5.019,516,4.781,517,4.922,518,2.533,519,3.927,522,3.255,523,4.239,524,3.539,527,3.715,528,4.239,529,3.715,530,3.539,531,2.554,532,3.387,533,3.539,537,3.551,538,3.937,541,3.089,543,3.387,545,3.715,547,3.715,548,5.387,550,2.433,551,2.445,552,4.239,553,2.445,554,1.995,555,2.329,556,1.351,557,2.62,558,3.387,559,3.138,560,2.445,561,2.445,562,2.445,563,2.445,564,2.445,565,1.771,566,2.229,567,2.445,568,2.445,569,2.445,570,2.445,571,2.445,572,2.445,573,2.445,574,2.445,575,3.715,576,2.943,577,3.014,578,2.876,579,2.876,580,2.943,581,3.551,582,3.551,583,2.445,584,3.715,585,2.445,586,2.445,587,4.493,588,2.065,589,2.065,590,2.445,2165,5.088,2166,3.348,2167,3.348,2168,3.348,2169,3.348,2170,3.348,2171,3.348,2172,3.348,2173,3.348,2174,3.348,2175,3.348,2176,3.348,2177,3.348]],["title/controllers/NewsController.html",[664,2.121,2178,3.819]],["body/controllers/NewsController.html",[0,0.101,3,0.09,4,0.076,5,0.052,10,0.2,11,0.746,12,1.358,17,0.338,18,0.999,24,0.771,26,1.17,27,0.006,28,0.688,29,0.743,36,1.073,41,1.342,44,0.315,46,0.683,48,0.085,59,0.003,60,0.003,66,3.187,76,1.682,83,1.17,84,0.725,155,2.602,169,2.424,171,3.096,172,1.403,174,2.437,186,1.134,188,1.542,189,2.723,191,2.332,209,1.303,211,2.125,411,2.825,506,3.643,510,3.555,531,2.859,550,2.723,558,3.791,603,3.378,614,3.076,627,5.152,630,3.801,657,1.741,664,1.669,666,1.862,668,2.401,674,4.906,679,3.209,680,4.916,681,2.491,682,2.844,683,5.247,684,2.844,690,2.844,693,6.083,695,6.018,696,5.761,697,4.925,1092,4.916,1176,3.643,1242,3.393,1262,4.027,1269,5.481,1431,2.593,1517,4.568,1665,3.209,1740,4.146,1945,5.091,2178,4.396,2179,3.481,2180,4.916,2181,6.733,2182,5.755,2183,3.894,2184,3.894,2185,3.894,2186,5.695,2187,3.894,2188,7.359,2189,3.209,2190,5.152,2191,4.931,2192,3.894,2193,4.693,2194,3.894,2195,5.695,2196,3.894,2197,5.091,2198,5.695,2199,3.894,2200,5.409,2201,5.695,2202,3.894,2203,3.006,2204,2.593,2205,4.307,2206,3.481,2207,2.708,2208,2.844,2209,3.481,2210,3.481,2211,3.894,2212,3.481,2213,3.481,2214,3.481,2215,3.481,2216,6.104,2217,3.209,2218,3.481,2219,3.481,2220,3.481,2221,3.481,2222,3.481,2223,3.209,2224,3.209,2225,3.894,2226,3.894,2227,3.894,2228,3.894,2229,5.695,2230,3.894]],["title/classes/NewsFilterQuery.html",[0,0.129,2190,3.441]],["body/classes/NewsFilterQuery.html",[0,0.197,2,1.196,3,0.136,4,0.114,5,0.078,10,0.302,11,0.99,17,0.358,24,0.818,27,0.006,29,0.881,36,1.065,44,0.318,48,0.129,59,0.004,60,0.004,64,2.834,76,1.095,163,4.472,164,4.197,165,5.156,171,4.112,187,3.627,209,1.73,211,2.255,510,3.436,511,4.033,541,2.953,642,5.261,645,4.664,646,4.664,647,5.442,650,6.105,651,6.233,652,4.664,656,5.876,657,2.629,659,7.273,660,6.233,661,3.394,662,4.295,663,3.394,756,2.832,1198,5.523,1717,5.566,2190,5.261,2231,7.273,2232,4.847,2233,5.882,2234,5.261,2235,6.762,2236,5.882,2237,5.882,2238,5.882,2239,5.882,2240,6.762,2241,5.882,2242,7.564,2243,5.882,2244,7.564,2245,6.233,2246,5.882,2247,5.882]],["title/classes/NewsMapper.html",[0,0.129,2208,3.613]],["body/classes/NewsMapper.html",[0,0.128,2,0.999,3,0.114,4,0.095,5,0.065,10,0.252,16,2.425,17,0.352,18,1.178,24,0.804,26,1.22,27,0.006,28,0.718,29,0.775,41,1.399,44,0.32,48,0.108,59,0.004,60,0.004,76,1.53,83,1.22,84,0.915,163,3.288,164,3.839,165,4.14,169,1.366,186,1.431,187,3.03,411,1.874,510,3.164,511,3.067,512,3.288,514,3.65,518,3.977,614,3.067,627,5.715,630,4.137,674,4,872,4.469,875,3.271,876,3.271,1703,5.318,1713,5.583,1716,5.715,1717,3.271,2190,5.715,2200,6,2207,5.715,2208,4.902,2248,4.392,2249,6.713,2250,6.713,2251,6.713,2252,6.713,2253,4.914,2254,6.713,2255,4.914,2256,6.713,2257,4.914,2258,6.713,2259,4.914,2260,3.792,2261,7.647,2262,3.792,2263,3.792,2264,4.392,2265,4.914,2266,4.914,2267,4.914,2268,4.914,2269,4.914,2270,4.392,2271,4.914,2272,4.914,2273,4.914,2274,4.914,2275,4.914,2276,4.392,2277,4.914,2278,4.392,2279,6.713,2280,4.914,2281,4.914,2282,4.914,2283,4.914,2284,4.914,2285,4.914,2286,4.914,2287,4.914,2288,4.049,2289,4.914,2290,4.049,2291,4.914,2292,4.392,2293,4.392,2294,6.713,2295,4.914,2296,4.914,2297,4.914,2298,6.713,2299,6.713,2300,6.713,2301,4.914,2302,4.914]],["title/modules/NewsModule.html",[111,1.314,2303,3.613]],["body/modules/NewsModule.html",[0,0.159,3,0.141,4,0.118,5,0.081,27,0.006,44,0.346,46,1.069,48,0.133,59,0.004,60,0.004,111,2.055,113,2.368,114,3.317,121,3.885,122,2.786,123,2.613,125,3.317,126,3.386,138,6.561,147,3.79,227,3.315,386,6.035,666,3.701,1117,3.9,1672,4.24,2178,6.903,2182,4.452,2205,6.384,2206,5.45,2303,7.319,2304,5.45,2305,6.097,2306,5.45,2307,5.45,2308,6.28,2309,6.097,2310,6.563,2311,6.097,2312,6.097,2313,5.45,2314,6.097,2315,6.097,2316,6.097,2317,6.097,2318,4.059,2319,3.76,2320,6.918,2321,6.097,2322,6.097,2323,6.097,2324,4.24]],["title/injectables/NewsRepo.html",[152,0.935,2308,3.294]],["body/injectables/NewsRepo.html",[0,0.094,3,0.084,4,0.07,5,0.048,8,1.433,10,0.186,11,0.706,17,0.391,18,0.947,24,0.903,26,1.339,27,0.006,28,0.787,29,0.85,32,3.664,41,1.554,44,0.3,46,0.635,48,0.079,59,0.003,60,0.003,76,1.624,83,0.958,84,0.674,152,1.019,153,1.263,155,2.633,162,2.22,172,1.761,174,2.431,178,3.722,181,3.589,186,1.055,189,3.085,191,2.526,209,1.234,217,1.412,218,1.161,247,1.038,248,1.106,254,6.348,256,5.767,257,3.328,258,4.824,259,4.824,260,4.165,261,3.02,262,4.824,263,4.824,264,4.824,270,2.794,271,6.987,273,3.236,275,3.236,277,2.794,279,3.236,281,2.581,282,3.236,284,3.236,286,3.236,306,3.753,336,3.02,346,4.76,366,2.103,411,3.058,505,2.232,506,3.452,508,3.844,510,3.392,511,3.987,513,2.934,517,3.592,554,2.157,555,4.973,558,4.76,588,3.978,589,3.978,603,2.312,614,2.466,621,4.574,632,3.02,756,2.415,833,2.643,866,4.76,1041,4.173,1060,2.026,1209,2.794,1414,4.71,1594,4.979,1717,4.76,1736,5.53,1739,3.215,1740,3.02,2180,4.71,2234,2.518,2308,3.592,2325,3.236,2326,6.451,2327,5.396,2328,5.396,2329,3.62,2330,4.973,2331,3.62,2332,5.396,2333,3.62,2334,7.15,2335,7.15,2336,5.396,2337,3.62,2338,3.62,2339,3.62,2340,3.62,2341,3.62,2342,3.62,2343,3.62,2344,3.62,2345,3.62,2346,3.62,2347,3.62,2348,3.62,2349,4.824,2350,3.62,2351,4.165,2352,3.62,2353,3.62,2354,5.396,2355,3.62,2356,5.396,2357,3.62,2358,3.62,2359,5.396,2360,5.396,2361,3.62,2362,3.62,2363,2.983,2364,3.62,2365,2.643,2366,2.232,2367,6.451,2368,3.62,2369,3.62,2370,3.62]],["title/classes/NewsResponse.html",[0,0.129,2207,3.441]],["body/classes/NewsResponse.html",[0,0.101,2,0.789,3,0.09,4,0.169,5,0.052,10,0.199,11,0.744,16,2.843,17,0.416,24,0.929,27,0.006,28,0.646,29,0.775,36,1.153,44,0.284,48,0.085,59,0.003,60,0.003,64,3.027,76,1.251,163,3.291,164,3.373,165,4.143,166,3.305,169,2.362,171,3.088,172,2.419,178,3.277,187,2.393,209,2.032,211,2.561,242,2.821,243,2.681,245,2.879,408,2.127,411,3.321,510,3.611,511,4.126,512,3.855,513,3.653,514,3.653,516,4.673,517,4.473,537,2.239,538,2.483,541,3.373,550,2.717,557,3.808,636,4.681,637,3.503,638,4.681,639,4.384,645,4.56,646,4.56,647,4.56,650,4.906,651,4.681,652,3.503,655,4.814,656,4.923,657,1.735,662,2.834,663,3.877,855,6.281,1183,4.148,1531,3.634,1673,4.681,1811,2.995,2182,4.148,2207,3.951,2371,2.995,2372,3.881,2373,6.094,2374,3.881,2375,5.747,2376,3.881,2377,3.881,2378,3.881,2379,3.881,2380,4.906,2381,5.078,2382,3.881,2383,6.006,2384,3.881,2385,5.537,2386,3.881,2387,5.078,2388,3.881,2389,4.906,2390,3.385,2391,3.881,2392,2.995,2393,3.881,2394,3.881,2395,3.881,2396,3.881,2397,3.881,2398,4.384,2399,3.881,2400,6.006,2401,3.881]],["title/classes/NewsScope.html",[0,0.129,2351,3.819]],["body/classes/NewsScope.html",[0,0.141,2,1.099,3,0.125,4,0.105,5,0.072,8,1.901,10,0.277,11,0.937,17,0.381,18,1.256,24,0.87,26,1.192,27,0.006,28,0.701,29,0.757,32,3.37,41,1.367,44,0.308,48,0.118,59,0.004,60,0.004,76,1.333,83,1.192,84,1.006,163,2.648,168,3.221,186,1.575,217,1.414,218,1.734,243,1.763,247,1.551,248,1.652,281,2.585,366,2.785,510,2.632,511,2.47,514,2.939,603,3.914,604,3.76,610,5.227,614,3.667,615,5.227,616,5.227,618,5.227,619,3.76,620,4.173,621,5.686,622,4.173,624,3.948,625,4.979,626,4.173,641,5.135,756,3.005,779,2.585,798,2.585,937,2.585,1060,3.026,1414,3.948,1419,4.833,1527,3.599,1717,4.766,2004,4.173,2330,5.942,2351,7.049,2402,6.614,2403,7.159,2404,7.159,2405,7.159,2406,5.406,2407,7.159,2408,5.406,2409,4.173,2410,4.979,2411,5.406,2412,5.406,2413,5.406,2414,7.159,2415,5.406,2416,5.406,2417,5.406,2418,5.406,2419,5.406,2420,5.406]],["title/interfaces/NewsTargetFilter.html",[87,0.53,2330,3.441]],["body/interfaces/NewsTargetFilter.html",[3,0.168,4,0.141,5,0.097,10,0.373,11,1.128,17,0.369,27,0.006,44,0.311,48,0.159,59,0.005,60,0.005,87,0.777,89,2.116,162,2.95,163,4.654,164,4.771,186,2.116,187,4.479,511,3.318,1418,7.831,2330,5.993,2402,5.985,2421,6.492]],["title/injectables/NewsUc.html",[152,0.935,2205,3.166]],["body/injectables/NewsUc.html",[0,0.068,3,0.06,4,0.05,5,0.035,10,0.134,11,0.547,17,0.362,18,0.733,21,0.604,24,0.81,26,1.204,27,0.006,28,0.708,29,0.764,36,0.631,41,1.479,44,0.276,46,0.457,48,0.057,59,0.002,60,0.002,64,0.808,76,1.684,83,1.204,84,0.974,144,4.54,152,0.789,153,0.908,155,2.571,162,3.036,163,3.969,164,3.008,165,4.54,166,3.598,169,1.948,171,1.415,173,4.146,174,2.343,186,0.758,187,1.605,188,1.03,189,4.155,191,2.735,209,1.854,243,1.954,247,1.882,248,1.599,252,1.858,261,1.456,319,1.665,336,2.338,366,2.897,411,0.992,419,1.754,427,3.067,505,1.605,510,3.572,511,3.202,513,1.415,514,4.162,518,2.155,531,3.843,532,2.782,576,1.245,577,1.275,578,1.216,579,1.216,603,3.28,642,4.168,652,1.605,662,1.9,674,4.706,756,1.96,833,2.046,932,3.051,937,1.245,1041,3.351,1060,1.456,1061,1.456,1250,1.456,1262,2.272,1269,2.782,1343,3.458,1356,2.145,1384,3.735,1393,3.735,1414,5.376,1418,3.443,1422,3.228,1531,1.665,1578,3.485,1703,4.168,1713,4.376,1716,5.121,1717,4.369,1722,2.49,1736,3.99,1740,1.456,1745,1.9,1836,2.846,2023,3.051,2182,3.822,2205,2.673,2217,3.443,2264,2.326,2270,2.326,2276,5.357,2278,5.357,2293,3.735,2308,4.665,2313,2.326,2330,2.906,2422,2.145,2423,4.178,2424,4.178,2425,4.178,2426,4.178,2427,5.235,2428,2.602,2429,4.178,2430,4.178,2431,2.602,2432,4.178,2433,2.602,2434,4.178,2435,2.602,2436,4.178,2437,4.68,2438,4.68,2439,3.485,2440,4.178,2441,2.602,2442,4.178,2443,2.602,2444,2.602,2445,4.178,2446,2.602,2447,3.051,2448,2.602,2449,5.235,2450,2.602,2451,4.178,2452,2.602,2453,2.326,2454,2.602,2455,2.602,2456,3.443,2457,4.938,2458,2.602,2459,2.602,2460,2.326,2461,2.602,2462,5.993,2463,2.602,2464,4.178,2465,2.602,2466,4.178,2467,2.602,2468,5.357,2469,2.602,2470,2.602,2471,2.602,2472,4.178,2473,2.326,2474,4.178,2475,2.602,2476,2.602,2477,4.178,2478,2.602,2479,2.602,2480,5.235,2481,2.602,2482,4.178,2483,2.602,2484,2.602,2485,2.602,2486,2.326,2487,2.145,2488,2.602,2489,2.602,2490,2.602,2491,2.602,2492,2.326,2493,4.178,2494,2.602,2495,2.602,2496,2.602,2497,4.178,2498,2.602,2499,2.602,2500,2.602,2501,2.602,2502,2.602]],["title/interfaces/Options.html",[87,0.53,1041,2.366]],["body/interfaces/Options.html",[0,0.14,3,0.124,4,0.104,5,0.072,10,0.276,11,0.933,17,0.306,27,0.006,29,0.836,36,0.965,44,0.289,48,0.186,59,0.004,60,0.004,64,2.83,76,1.731,83,1.059,87,0.575,89,1.565,122,2.454,155,1.952,174,1.922,188,2.127,191,2.11,252,2.839,359,4.396,361,3.736,363,4.633,364,4.426,366,1.751,374,2.454,444,3.541,556,2.168,756,2.995,768,2.211,951,2.841,1031,3.922,1032,4.426,1033,4.426,1037,4.934,1039,4.426,1040,4.802,1041,4.359,1043,4.278,1044,6.469,1045,5.205,1047,4.802,1048,4.958,1050,6.34,1051,4.426,1052,4.146,1053,4.146,1054,5.832,1055,3.875,1056,7.152,1057,5.205,1058,4.616,1059,4.016,1060,4.769,1061,3.989,1062,6.372,1063,6.372,1064,4.802,1065,5.502,1066,6.372,1067,6.372,1068,4.426,1069,3.312,1070,2.841,1071,5.502,1072,4.802,1073,4.802]],["title/classes/PaginationQuery.html",[0,0.129,2191,3.294]],["body/classes/PaginationQuery.html",[0,0.209,2,1.311,3,0.149,4,0.125,5,0.086,10,0.331,11,1.05,17,0.344,24,0.784,27,0.006,29,0.86,31,3.019,44,0.289,48,0.141,59,0.005,60,0.005,64,2.489,211,2.162,247,2.299,248,2.449,640,6.188,656,5.808,657,2.883,661,3.721,779,3.834,866,5.338,937,3.834,1686,6.607,1743,5.808,1744,6.249,2156,5.315,2161,5.315,2191,5.338,2503,5.766,2504,6.664,2505,6.45,2506,4.359,2507,8.018,2508,8.018,2509,8.018,2510,6.45,2511,6.45,2512,7.167,2513,6.45,2514,8.725,2515,5.766,2516,6.45,2517,6.45]],["title/classes/PaginationResponse.html",[0,0.129,2204,3.294]],["body/classes/PaginationResponse.html",[0,0.161,2,1.26,3,0.143,4,0.12,5,0.083,10,0.318,11,1.024,17,0.398,21,1.439,24,0.908,26,0.92,27,0.006,28,0.541,29,0.875,31,3.191,44,0.224,48,0.136,59,0.004,60,0.004,211,2.426,271,6.774,336,4.377,655,5.057,657,2.771,768,3.818,1743,6.404,1744,6.404,2204,5.207,2518,5.541,2519,7.023,2520,7.821,2521,6.199,2522,6.199,2523,6.199,2524,6.199,2525,6.199,2526,6.199,2527,6.199,2528,6.199,2529,6.199]],["title/injectables/ParseObjectIdPipe.html",[152,0.935,683,3.294]],["body/injectables/ParseObjectIdPipe.html",[0,0.178,3,0.158,4,0.133,5,0.091,10,0.351,17,0.293,18,1.457,24,0.668,26,1.015,27,0.006,28,0.597,29,0.644,36,1.151,41,1.163,44,0.323,46,1.198,48,0.15,59,0.005,60,0.005,76,1.272,83,1.015,84,1.272,152,1.569,153,2.383,162,2.121,186,1.99,201,3.267,210,3.419,217,1.787,219,3.122,248,2.538,683,5.53,730,4.752,740,3.613,1675,5.777,2390,4.95,2530,7.425,2531,5.63,2532,8.307,2533,6.832,2534,8.307,2535,8.307,2536,6.832,2537,6.832]],["title/interfaces/PlainTextMailContent.html",[87,0.53,102,3.051]],["body/interfaces/PlainTextMailContent.html",[3,0.149,4,0.125,5,0.086,8,2.492,10,0.33,11,1.048,17,0.343,27,0.006,28,0.562,29,0.755,36,1.233,48,0.141,59,0.005,60,0.005,87,1.038,88,4.938,89,1.875,90,4.118,91,5.375,92,5.331,93,4.286,94,4.286,95,4.938,96,4.286,97,4.286,98,4.286,99,5.624,100,4.118,101,4.286,102,5.375,103,6.246,104,6.246,105,4.938,106,4.354,107,4.118,108,4.286,109,4.286,110,4.286]],["title/classes/ResolvedUser.html",[0,0.129,1947,3.051]],["body/classes/ResolvedUser.html",[0,0.157,2,1.226,3,0.14,4,0.117,5,0.08,10,0.309,11,1.006,17,0.419,24,0.947,27,0.006,36,1.188,44,0.277,48,0.168,59,0.004,60,0.004,166,3.552,186,1.757,209,1.935,211,2.61,242,3.552,243,2.904,245,3.625,427,3.953,655,5.223,657,2.696,740,4.064,1720,4.356,1723,4.046,1724,5.883,1727,5.117,1728,5.412,1729,5.412,1947,4.739,2538,4.97,2539,6.031,2540,6.031,2541,6.031,2542,6.031,2543,6.031,2544,6.031,2545,6.031,2546,6.031]],["title/classes/ResolvedUserMapper.html",[0,0.129,2547,3.819]],["body/classes/ResolvedUserMapper.html",[0,0.165,2,1.289,3,0.147,4,0.123,5,0.085,10,0.325,17,0.272,18,1.391,24,0.62,26,0.941,27,0.006,28,0.693,29,0.598,36,1.044,41,1.079,44,0.286,48,0.139,59,0.004,60,0.004,76,1.18,83,0.941,84,1.18,166,3.809,169,2.597,186,1.847,209,1.45,247,1.818,248,1.937,518,3.563,630,3.546,872,5.281,875,4.221,876,4.221,1720,4.458,1723,4.338,1947,5.594,2288,5.224,2290,5.224,2292,5.667,2547,6.122,2548,5.667,2549,7.091,2550,6.34,2551,4.893,2552,5.667,2553,5.667,2554,5.667,2555,5.667,2556,6.34,2557,6.34,2558,6.34,2559,6.34,2560,6.34,2561,5.667,2562,6.34,2563,5.667]],["title/classes/Role.html",[0,0.129,1723,2.366]],["body/classes/Role.html",[0,0.137,2,1.072,3,0.122,4,0.102,5,0.07,8,1.869,10,0.407,11,0.921,17,0.389,21,1.223,24,0.92,26,0.783,27,0.006,28,0.792,29,0.497,32,3.551,36,1.117,44,0.254,48,0.154,50,1.904,59,0.004,60,0.004,84,1.688,87,0.564,166,3.551,172,1.734,208,3.08,209,1.61,210,2.169,211,2.496,212,2.463,214,2.463,216,3.24,217,1.379,218,1.69,222,3.596,232,2.127,242,2.955,243,2.295,245,3.016,247,2.426,248,2.584,251,2.645,252,1.87,416,3.016,419,2.213,426,2.463,429,4.355,437,2.714,438,2.714,439,2.714,440,2.714,443,4.194,444,2.047,446,2.258,465,2.356,469,2.949,470,2.949,531,2.645,541,3.533,661,3.041,1057,3.848,1375,4.503,1514,4.068,1611,3.25,1682,3.848,1720,4.905,1723,4.044,1775,6.528,1776,4.343,1777,4.711,1778,4.068,1779,3.848,1780,6.117,1781,6.292,1782,4.711,1783,4.711,1784,4.068,2564,7.038,2565,4.711,2566,5.27,2567,5.27,2568,5.27]],["title/injectables/RoleRepo.html",[152,0.935,2569,3.441]],["body/injectables/RoleRepo.html",[0,0.149,3,0.133,4,0.111,5,0.076,10,0.294,11,0.974,12,1.999,17,0.375,18,1.305,21,1.33,24,0.886,26,1.298,27,0.006,28,0.81,29,0.824,36,0.996,41,1.406,44,0.298,46,1.005,48,0.125,59,0.004,60,0.004,76,1.537,83,1.105,152,1.405,153,1.999,155,2.651,162,2.933,166,2.406,174,2.503,186,1.67,188,2.269,191,2.444,209,1.889,217,1.499,219,2.618,265,3.415,266,4.621,268,3.643,937,2.741,1723,4.518,2569,5.173,2570,5.123,2571,9.056,2572,6.649,2573,7.438,2574,7.438,2575,7.438,2576,6.649,2577,5.731,2578,7.438,2579,5.731,2580,7.438,2581,5.731,2582,5.731,2583,7.438,2584,7.438,2585,5.731]],["title/injectables/RoleUC.html",[152,0.935,2586,3.441]],["body/injectables/RoleUC.html",[0,0.168,3,0.149,4,0.125,5,0.086,10,0.331,12,2.25,17,0.344,18,1.406,21,1.497,24,0.784,26,1.191,27,0.006,28,0.7,29,0.756,36,0.778,41,1.098,44,0.315,46,1.131,48,0.141,59,0.005,60,0.005,76,1.201,83,0.958,84,1.201,152,1.515,153,2.25,155,2.389,166,3.941,174,2.162,186,1.879,188,2.553,191,1.909,932,4.709,1720,4.129,1723,4.365,1730,4.709,2569,6.654,2586,5.576,2587,5.766,2588,8.018,2589,6.45,2590,6.45,2591,8.018,2592,6.45,2593,6.45,2594,3.977,2595,6.45,2596,6.45,2597,6.45,2598,6.45,2599,6.45]],["title/classes/School.html",[0,0.129,411,1.887]],["body/classes/School.html",[0,0.17,2,1.327,3,0.151,4,0.127,5,0.087,8,2.145,10,0.335,11,1.057,17,0.411,21,1.515,24,0.897,26,0.969,27,0.006,28,0.822,29,0.615,32,3.391,36,1.105,44,0.291,48,0.143,50,2.357,59,0.005,60,0.005,172,1.989,206,6.025,208,3.534,209,1.847,210,2.686,211,2.365,212,3.049,214,3.049,216,3.225,217,1.707,218,2.093,411,3.079,416,3.461,419,2.74,446,2.796,465,2.917,469,3.652,470,3.652,1706,4.812,1710,4.538,2600,5.833,2601,8.076,2602,5.833,2603,5.833]],["title/classes/SchoolInfoMapper.html",[0,0.129,2260,3.819]],["body/classes/SchoolInfoMapper.html",[0,0.182,2,1.418,3,0.161,4,0.135,5,0.093,10,0.358,17,0.299,18,1.475,24,0.682,26,1.036,27,0.006,28,0.609,29,0.658,41,1.187,44,0.303,48,0.153,59,0.005,60,0.005,76,1.298,83,1.036,84,1.298,186,2.032,411,3.575,518,3.717,630,3.76,872,5.6,875,4.643,876,4.643,2260,6.492,2380,6.847,2604,7.519,2605,5.383,2606,8.411,2607,5.747,2608,6.975,2609,6.975,2610,5.747,2611,6.975]],["title/classes/SchoolInfoResponse.html",[0,0.129,2380,3.613]],["body/classes/SchoolInfoResponse.html",[0,0.179,2,1.398,3,0.159,4,0.133,5,0.092,10,0.353,11,1.091,17,0.357,24,0.816,27,0.006,28,0.835,36,1.126,44,0.248,48,0.15,59,0.005,60,0.005,64,2.786,172,2.299,209,2.186,211,2.248,411,3.558,645,5.141,646,5.141,655,4.622,657,3.073,663,3.966,855,4.781,2380,6.088,2392,5.306,2612,8.023,2613,5.306,2614,5.665,2615,5.665]],["title/classes/SchoolNews.html",[0,0.129,588,3.051]],["body/classes/SchoolNews.html",[0,0.178,2,0.673,3,0.077,4,0.143,5,0.044,8,1.954,10,0.17,11,0.661,16,2.8,17,0.407,18,0.885,24,0.918,26,0.492,27,0.006,28,0.597,29,0.803,32,3.938,36,1.114,41,0.564,44,0.3,48,0.161,50,1.196,59,0.003,60,0.003,83,0.492,84,1.369,87,0.354,162,2.122,163,3.948,164,3.891,166,2.567,169,2.241,172,1.812,190,2.303,208,2.208,209,1.398,210,1.363,211,2.491,212,1.548,214,1.548,216,3.366,217,0.866,218,1.062,222,3.011,229,3.421,234,2.248,242,2.119,243,2.399,245,2.162,247,1.753,248,1.867,251,1.662,252,1.175,324,2.911,351,1.911,408,1.889,411,3.366,416,1.419,419,2.567,426,3.622,427,2.358,437,1.705,438,1.705,439,1.705,440,1.705,442,1.513,444,2.375,446,1.419,447,2.042,448,1.705,467,4.215,474,2.042,489,1.911,493,1.911,508,1.973,509,2.303,510,3.658,511,3.968,512,3.797,513,4,514,3.716,515,4.991,516,4.754,517,4.898,518,2.516,519,3.895,521,2.729,522,3.228,523,4.215,524,3.509,525,2.729,526,2.729,527,3.684,528,4.215,529,3.684,530,3.509,531,2.533,532,3.359,533,3.509,534,2.729,535,2.729,536,2.729,537,3.527,538,3.911,539,2.729,540,2.729,541,3.069,542,2.729,543,3.359,544,2.729,545,3.684,546,2.729,547,3.684,548,4.898,549,2.729,550,2.413,551,2.418,552,3.769,553,2.418,554,1.973,555,2.303,556,1.337,557,1.705,558,2.205,559,2.042,560,2.418,561,2.418,562,2.418,563,2.418,564,2.418,565,1.751,566,2.205,567,2.418,568,2.418,569,2.418,570,2.418,571,2.418,572,2.418,573,2.418,574,2.418,575,3.684,576,2.923,577,2.994,578,2.856,579,2.856,580,2.923,581,3.527,582,3.527,583,2.418,584,3.684,585,2.418,586,2.418,587,4.463,588,3.111,589,2.042,590,2.418,2616,3.312]],["title/classes/Scope.html",[0,0.129,603,2.121]],["body/classes/Scope.html",[0,0.154,2,1.2,3,0.137,4,0.115,5,0.079,10,0.303,11,0.992,17,0.401,18,1.33,21,1.37,24,0.894,26,1.126,27,0.006,28,0.662,29,0.715,41,1.005,44,0.274,48,0.129,59,0.004,60,0.004,76,1.099,83,1.126,217,1.544,218,1.893,247,1.693,248,1.803,281,3.626,366,3.05,603,3.249,614,4.274,615,6.115,616,6.115,618,5.535,619,6.505,621,6.227,624,5.535,625,6.146,779,2.823,937,2.823,1116,5.535,1811,4.556,2409,6.464,2617,4.864,2618,7.581,2619,7.581,2620,6.777,2621,5.903,2622,5.903,2623,5.903,2624,5.903,2625,5.903,2626,5.903,2627,7.581,2628,7.581,2629,5.903,2630,5.903,2631,5.903]],["title/classes/ServerConsole.html",[0,0.129,2632,3.819]],["body/classes/ServerConsole.html",[0,0.156,2,1.217,3,0.139,4,0.116,5,0.08,10,0.307,17,0.328,18,1.342,21,1.39,24,0.825,26,1.136,27,0.006,28,0.668,29,0.721,36,1.017,41,1.303,44,0.276,48,0.131,52,2.863,59,0.004,60,0.004,64,2.85,83,1.136,123,3.279,188,2.37,211,2.063,281,4.249,359,5.479,363,5.254,374,2.736,1036,5.352,1039,6.304,1042,6.839,1050,6.53,1314,7.321,1317,5.11,1330,4.129,1444,5.915,1465,5.613,1882,5.479,2087,5.352,2632,5.905,2633,5.352,2634,7.651,2635,5.988,2636,6.179,2637,5.988,2638,7.651,2639,5.905,2640,5.988,2641,6.839,2642,5.988,2643,5.988]],["title/modules/ServerConsoleModule.html",[111,1.314,2644,3.613]],["body/modules/ServerConsoleModule.html",[0,0.176,3,0.156,4,0.131,5,0.09,27,0.006,44,0.343,46,1.184,48,0.148,59,0.005,60,0.005,111,2.19,113,2.622,114,3.533,121,4.139,122,3.084,123,2.892,125,3.533,126,3.608,355,7.064,361,4.694,363,4.483,374,3.084,1051,5.562,1433,3.669,1996,3.777,2077,7.064,2632,6.364,2644,7.22,2645,6.033,2646,6.749,2647,6.749,2648,8.245,2649,6.749,2650,6.749,2651,6.749]],["title/controllers/ServerController.html",[664,2.121,2652,3.819]],["body/controllers/ServerController.html",[0,0.187,3,0.166,4,0.139,5,0.096,10,0.368,18,1.5,24,0.701,27,0.006,36,1.031,41,1.221,44,0.259,46,1.258,48,0.157,52,3.429,59,0.005,60,0.005,83,1.065,211,1.933,247,2.452,664,3.664,666,3.429,1314,7.798,1316,5.947,1317,4.522,1318,5.693,1319,4.934,1329,5.534,1330,3.511,2652,6.6,2653,6.409,2654,7.169]],["title/modules/ServerModule.html",[111,1.314,2655,3.613]],["body/modules/ServerModule.html",[0,0.135,3,0.12,4,0.101,5,0.069,17,0.223,27,0.006,36,1.014,44,0.356,46,0.912,48,0.114,57,2.485,59,0.004,60,0.004,83,0.772,84,0.967,111,1.852,112,6.593,113,2.019,114,2.988,118,6.28,121,3.5,122,2.374,123,2.227,126,3.051,169,1.445,181,2.608,186,1.514,217,1.824,218,1.666,232,2.097,234,1.911,313,4.154,381,6.593,556,2.097,576,2.485,577,2.545,578,2.428,579,2.428,580,2.485,666,3.334,729,3.324,1041,3.334,1566,5.745,1567,5.745,1568,5.745,1642,4.011,1643,3.794,1644,4.011,1758,4.011,1981,6.593,1996,2.908,2038,6.1,2050,3.794,2051,3.794,2052,3.794,2082,4.011,2083,4.011,2084,6.233,2085,6.233,2086,5.091,2093,4.282,2096,3.794,2097,3.794,2098,4.645,2099,6.233,2100,4.645,2101,4.011,2102,3.324,2303,6.593,2652,6.073,2655,7.312,2656,4.645,2657,4.645,2658,6.593,2659,5.196,2660,3.794,2661,3.459,2662,3.324,2663,4.282,2664,5.196,2665,5.196,2666,3.614,2667,5.196,2668,5.196,2669,5.196,2670,5.196,2671,5.196,2672,5.196,2673,5.196,2674,5.196,2675,5.196,2676,5.196,2677,3.614,2678,5.196,2679,4.645,2680,4.282,2681,5.196]],["title/classes/Submission.html",[0,0.129,1799,3.051]],["body/classes/Submission.html",[0,0.103,2,0.804,3,0.091,4,0.077,5,0.099,8,1.529,10,0.203,11,0.754,17,0.402,18,1.01,21,0.918,24,0.932,26,0.587,27,0.006,28,0.345,29,0.64,31,2.354,32,3.133,36,1.056,41,0.673,44,0.299,48,0.087,50,1.428,59,0.003,60,0.003,76,1.072,83,0.587,84,1.63,87,0.423,169,2.205,172,1.419,208,2.52,209,1.317,210,1.627,211,2.53,212,1.848,214,1.848,216,3.219,217,1.034,218,1.268,222,3.319,242,2.418,243,1.877,245,2.468,247,2.274,248,2.423,251,1.985,252,3.107,416,2.468,419,2.418,426,4.342,429,4.262,437,2.036,438,2.036,439,2.036,440,2.036,442,1.807,443,2.356,444,1.536,446,1.695,448,2.036,465,1.768,468,4.005,484,5.404,523,3.551,565,2.091,756,2.156,937,3.248,1422,5.399,1785,5.759,1786,3.258,1787,6.67,1788,6.148,1789,6.67,1790,7.399,1791,5.515,1792,7.399,1793,4.187,1794,7.215,1795,3.535,1796,3.535,1797,3.535,1798,2.633,1799,3.551,1800,5.148,1801,5.148,1802,4.745,1803,5.148,1804,5.148,1805,4.745,1806,6.67,1807,5.148,1808,2.53,1809,5.148,1810,7.399,1811,4.445,1812,6.071,1813,5.148,1814,3.535,1815,3.535,1816,3.535,1817,3.535,1818,3.535,1819,3.535,1820,3.535,1821,3.052,1822,3.535,1823,3.535,1824,3.535,2682,3.954,2683,3.954,2684,3.954,2685,3.954,2686,3.954,2687,3.954,2688,3.954,2689,3.954,2690,3.954,2691,3.954,2692,3.954]],["title/injectables/SubmissionRepo.html",[152,0.935,2693,4.078]],["body/injectables/SubmissionRepo.html",[0,0.143,3,0.127,4,0.107,5,0.073,10,0.282,12,1.92,17,0.369,18,1.271,21,1.278,24,0.842,26,1.278,27,0.006,28,0.751,29,0.811,41,1.379,44,0.31,46,0.966,48,0.12,59,0.004,60,0.004,76,1.602,83,1.202,152,1.368,153,1.92,155,2.63,162,3.01,173,3.912,174,2.475,186,1.604,188,2.179,191,2.546,217,1.895,218,1.765,219,2.515,232,2.221,265,3.28,266,4.55,268,3.548,366,2.64,412,3.28,484,4.317,505,3.394,506,4.635,593,6.476,597,5.97,603,2.359,614,3.31,621,3.521,798,3.464,1596,4.019,1791,3.828,1793,2.632,1794,4.536,1798,4.823,1799,3.394,1996,3.081,2693,5.97,2694,4.92,2695,7.244,2696,7.244,2697,5.504,2698,7.244,2699,5.504,2700,7.244,2701,5.504,2702,7.244,2703,5.504,2704,7.244,2705,5.504,2706,7.244,2707,5.504]],["title/classes/TargetInfoMapper.html",[0,0.129,2262,3.819]],["body/classes/TargetInfoMapper.html",[0,0.181,2,1.415,3,0.161,4,0.135,5,0.093,10,0.357,17,0.298,18,1.474,24,0.681,26,1.034,27,0.006,28,0.608,29,0.656,41,1.185,44,0.303,48,0.152,59,0.005,60,0.005,76,1.296,83,1.034,84,1.296,187,4.292,511,3.18,518,3.714,552,5.778,630,3.755,872,5.593,876,4.634,2262,6.484,2389,6.842,2400,6.222,2605,5.372,2607,5.735,2610,5.735,2708,7.509,2709,8.401,2710,6.96,2711,6.96,2712,6.96]],["title/classes/TargetInfoResponse.html",[0,0.129,2389,3.613]],["body/classes/TargetInfoResponse.html",[0,0.179,2,1.398,3,0.159,4,0.133,5,0.092,10,0.353,11,1.091,17,0.357,24,0.816,27,0.006,28,0.835,36,1.126,44,0.248,48,0.15,59,0.005,60,0.005,64,2.786,172,2.299,209,2.186,211,2.248,511,4.263,645,5.141,646,5.141,655,4.622,657,3.073,663,3.966,855,4.781,2389,6.088,2392,5.306,2613,5.306,2614,5.665,2615,5.665,2713,8.023]],["title/classes/Task.html",[0,0.129,1793,2.366]],["body/classes/Task.html",[0,0.107,2,0.834,3,0.095,4,0.08,5,0.055,8,1.57,10,0.21,11,0.774,17,0.405,18,1.037,21,0.952,24,0.937,26,0.609,27,0.006,28,0.772,29,0.873,32,3.186,36,1.042,41,1.006,44,0.302,48,0.129,50,1.481,59,0.003,60,0.003,64,2.152,83,0.878,84,1.412,87,0.439,169,2.11,172,1.456,208,2.587,209,1.352,210,1.687,211,2.523,212,1.916,214,1.916,216,3.362,217,1.072,218,1.315,222,3.356,242,2.482,243,2.883,245,2.533,247,2.176,248,2.318,251,2.058,252,2.46,366,2.623,408,3.31,410,4,416,2.533,419,1.721,426,3.916,429,3.044,437,2.111,438,2.111,439,2.111,440,2.111,442,1.873,444,1.593,446,1.757,448,2.111,463,2.994,465,1.833,469,2.294,470,2.294,489,3.411,490,4.111,493,2.365,495,4.111,496,2.851,523,3.645,556,2.386,756,2.596,825,2.994,1043,2.968,1422,2.528,1532,2.994,1754,4.949,1793,3.629,1798,5.052,1799,3.645,1808,4.855,1825,5.857,1826,3.164,1827,6.253,1828,5.541,1829,3.665,1830,3.665,1831,6.253,1832,3.378,1833,4.563,1834,5.284,1835,5.284,1836,2.229,1837,5.284,1838,4.855,1839,5.284,1840,6.783,1841,6.783,1842,3.665,1843,5.284,1844,3.665,1845,3.665,1846,3.665,1847,3.665,1848,3.665,1849,3.665,1850,5.284,1851,3.665,1852,3.665,1853,3.665,1854,3.665,2714,4.1,2715,4.1,2716,4.1,2717,4.1,2718,4.1,2719,4.1,2720,4.1,2721,4.1,2722,4.1,2723,4.1,2724,4.1]],["title/injectables/TaskAuthorizationService.html",[152,0.935,2725,3.441]],["body/injectables/TaskAuthorizationService.html",[0,0.158,3,0.14,4,0.118,5,0.081,10,0.311,12,2.115,17,0.331,18,1.353,21,1.408,24,0.755,26,1.145,27,0.006,28,0.673,29,0.727,41,1.032,44,0.306,46,1.064,48,0.169,59,0.004,60,0.004,76,1.436,83,0.9,152,1.457,153,2.115,155,2.322,162,2.771,169,2.144,173,2.653,174,2.08,186,1.766,188,2.401,191,2.282,494,4.427,531,4.481,541,3.044,591,6.271,741,4.934,743,4.934,760,4.596,835,4.934,1059,3.044,1456,5.134,1462,5.631,1517,3.739,1530,4.427,1752,3.879,1753,4.217,2725,5.364,2726,4.997,2727,7.712,2728,6.064,2729,6.064,2730,7.712,2731,7.355,2732,6.064,2733,6.355,2734,6.894,2735,6.894,2736,5.42,2737,4.68,2738,6.064,2739,5.42,2740,6.064,2741,6.064,2742,7.712,2743,6.064,2744,5.42]],["title/controllers/TaskController.html",[664,2.121,2745,3.819]],["body/controllers/TaskController.html",[0,0.158,3,0.14,4,0.117,5,0.081,10,0.311,12,2.111,17,0.259,18,1.351,24,0.592,26,0.899,27,0.006,28,0.529,29,0.571,41,1.03,44,0.349,46,1.062,48,0.132,59,0.004,60,0.004,76,1.66,83,1.144,84,1.127,155,2.32,174,2.077,186,1.763,188,2.396,191,1.791,211,1.632,614,3.52,630,2.706,657,2.706,664,2.594,666,2.895,668,3.732,681,3.872,682,4.419,684,4.419,690,4.419,696,5.315,697,4.594,798,3.684,1743,5.129,1744,5.129,2180,6.187,2189,4.988,2191,6.509,2203,4.672,2204,4.03,2519,5.625,2745,5.946,2746,5.411,2747,4.209,2748,6.053,2749,5.893,2750,6.053,2751,4.419,2752,4.672,2753,6.053,2754,6.053,2755,6.053,2756,6.053,2757,6.053,2758,6.053,2759,6.053,2760,6.053,2761,6.053]],["title/classes/TaskMapper.html",[0,0.129,2752,3.819]],["body/classes/TaskMapper.html",[0,0.168,2,1.311,3,0.149,4,0.125,5,0.086,10,0.331,17,0.276,18,1.406,24,0.631,26,0.958,27,0.006,28,0.563,29,0.608,41,1.098,44,0.289,48,0.141,59,0.005,60,0.005,76,1.624,83,0.958,84,1.201,186,1.879,518,3.591,630,3.584,872,5.338,875,4.294,876,4.294,1793,3.084,1838,4.126,1858,4.709,1859,4.709,1860,4.709,1862,6.348,1863,4.294,2288,5.315,2290,5.315,2610,5.315,2751,6.664,2752,6.188,2762,5.766,2763,8.018,2764,6.45,2765,8.018,2766,6.45,2767,6.45,2768,6.45,2769,6.45,2770,6.45,2771,6.45,2772,6.45,2773,6.45,2774,6.45,2775,6.45,2776,6.45,2777,6.45,2778,6.45,2779,6.45,2780,6.45,2781,6.45,2782,6.45,2783,6.45,2784,6.45]],["title/modules/TaskModule.html",[111,1.314,2658,3.613]],["body/modules/TaskModule.html",[0,0.167,3,0.148,4,0.124,5,0.085,27,0.006,44,0.35,46,1.125,48,0.14,59,0.004,60,0.004,111,2.122,113,2.491,114,3.424,121,4.01,122,2.93,123,2.748,125,3.424,126,2.806,591,6.361,604,4.46,666,3.821,1990,6.645,2594,3.954,2658,7.39,2725,6.645,2736,5.732,2745,6.716,2749,6.645,2785,5.732,2786,5.732,2787,6.645,2788,6.413,2789,6.413,2790,4.269,2791,6.413]],["title/injectables/TaskRepo.html",[152,0.935,2787,3.441]],["body/injectables/TaskRepo.html",[0,0.124,3,0.111,4,0.093,5,0.064,10,0.245,12,1.667,17,0.387,18,1.156,21,1.11,24,0.737,26,1.119,27,0.006,28,0.658,29,0.711,41,1.283,44,0.307,46,0.838,48,0.105,59,0.004,60,0.004,64,1.484,76,1.586,83,0.978,84,1.226,152,1.244,153,1.667,155,2.412,162,2.522,174,2.191,178,4.687,186,1.393,188,1.892,189,3.605,191,2.231,217,1.25,218,1.533,243,1.558,252,2.338,265,2.848,266,4.296,268,3.226,336,4.218,366,2.457,408,1.79,466,3.885,504,3.324,505,2.948,506,4.214,603,2.823,614,3.01,621,5.197,756,1.79,833,3.226,1041,4.463,1198,6.431,1209,3.689,1706,4.84,1736,6.008,1739,3.925,1740,4.218,1744,3.182,1753,4.581,1754,4.546,1793,3.885,1798,3.182,1808,5.197,1833,3.689,1997,5.428,2349,5.889,2453,4.273,2747,4.581,2787,4.581,2792,4.273,2793,7.538,2794,6.587,2795,4.78,2796,4.78,2797,4.78,2798,5.428,2799,5.889,2800,8.521,2801,6.587,2802,4.78,2803,5.084,2804,3.939,2805,4.273,2806,3.939,2807,4.78,2808,4.78,2809,4.78,2810,4.78,2811,4.78,2812,4.78,2813,4.78,2814,4.78,2815,4.78,2816,4.78,2817,4.78,2818,4.78,2819,4.78,2820,6.587,2821,4.78,2822,6.587,2823,4.78,2824,4.78,2825,4.78,2826,4.78,2827,4.78]],["title/classes/TaskResponse.html",[0,0.129,2751,3.613]],["body/classes/TaskResponse.html",[0,0.146,2,1.144,3,0.13,4,0.109,5,0.075,10,0.289,11,0.962,17,0.417,24,0.944,27,0.006,28,0.715,29,0.899,31,2.582,36,1.151,44,0.265,48,0.123,52,3.514,59,0.004,60,0.004,64,1.746,209,1.872,211,2.601,242,3.436,243,3.11,245,3.507,630,3.285,632,4.112,655,5.131,656,5.777,657,2.514,684,4.107,736,5.046,756,2.106,843,4.112,1706,3.352,1793,3.514,1827,6.743,1828,5.975,1838,3.598,1858,4.107,1859,4.107,1860,4.107,1863,5.448,2751,5.365,2828,5.028,2829,6.568,2830,8.184,2831,5.625,2832,5.625,2833,5.625,2834,5.625,2835,5.625,2836,5.625,2837,5.625,2838,5.625,2839,5.625,2840,5.625,2841,5.625,2842,6.743]],["title/classes/TaskScope.html",[0,0.129,2803,3.819]],["body/classes/TaskScope.html",[0,0.126,2,0.982,3,0.112,4,0.094,5,0.064,8,1.762,10,0.248,11,0.992,17,0.395,18,1.164,24,0.915,26,1.312,27,0.006,28,0.771,29,0.853,32,3.182,41,1.504,44,0.239,48,0.106,59,0.004,60,0.004,76,0.899,83,1.27,162,2.938,173,2.902,186,1.407,238,3.089,243,2.47,247,1.385,248,1.475,252,1.714,281,2.309,366,2.88,408,2.483,504,4.613,556,2.677,603,3.786,604,3.358,610,5.957,614,3.031,615,4.843,616,4.843,618,4.843,619,3.358,620,3.727,621,4.848,622,3.727,624,3.525,625,4.613,626,3.727,756,3.054,1059,2.424,1422,5.273,1754,4.241,1793,2.309,1808,3.089,1828,5.957,1838,4.244,2004,3.727,2005,5.93,2007,5.93,2008,4.316,2012,4.316,2803,7.436,2804,5.466,2806,5.466,2843,7.898,2844,6.633,2845,6.633,2846,6.633,2847,6.633,2848,4.828,2849,4.828,2850,6.633,2851,4.828,2852,6.633,2853,4.828,2854,6.633,2855,4.828,2856,3.525,2857,3.525,2858,3.525,2859,3.525,2860,4.828,2861,4.828,2862,4.828]],["title/injectables/TaskUC.html",[152,0.935,2749,3.441]],["body/injectables/TaskUC.html",[0,0.09,3,0.08,4,0.067,5,0.046,10,0.177,12,2.185,17,0.35,18,0.913,21,1.208,24,0.823,26,1.214,27,0.006,28,0.714,29,0.771,41,1.392,44,0.27,46,0.605,48,0.114,59,0.003,60,0.003,66,3.905,76,1.815,83,1.214,84,1.466,144,3.864,152,0.983,153,1.203,155,2.358,162,2.724,166,1.448,173,3.768,174,2.123,185,4.287,186,1.005,191,2.49,201,1.649,232,1.392,234,1.268,243,2.043,252,1.224,330,2.206,366,3.143,377,1.731,504,4.853,505,3.208,531,3.145,541,1.731,594,4.651,595,4.651,599,4.287,601,4.287,604,2.398,696,3.1,697,4.209,756,1.948,779,2.488,937,2.996,1059,3.145,1375,3.329,1377,2.126,1470,2.296,1739,3.1,1740,5.113,1742,6.407,1745,2.518,1752,3.329,1793,4.118,1802,4.287,1828,5.095,1833,2.662,1838,4.464,1858,5.095,1859,5.095,1860,5.095,1862,5.209,1990,5.684,2180,3.799,2189,4.287,2473,3.083,2519,5.095,2594,2.126,2725,4.853,2731,2.842,2739,3.083,2744,4.651,2747,3.618,2749,3.618,2787,5.476,2804,4.287,2805,3.083,2806,2.842,2863,2.842,2864,5.203,2865,5.203,2866,6.978,2867,5.203,2868,3.448,2869,3.448,2870,5.203,2871,3.448,2872,5.203,2873,3.448,2874,3.448,2875,3.448,2876,3.448,2877,3.448,2878,5.203,2879,6.238,2880,3.448,2881,3.448,2882,3.083,2883,3.083,2884,3.083,2885,2.842,2886,2.842,2887,3.448,2888,3.083,2889,2.662,2890,5.203,2891,3.448,2892,3.448,2893,3.448,2894,3.448,2895,5.203,2896,3.448,2897,5.203,2898,5.203,2899,3.448,2900,5.203,2901,5.203,2902,3.448,2903,6.978,2904,5.203,2905,3.448,2906,3.448,2907,5.203,2908,3.448,2909,3.448,2910,3.448,2911,6.266,2912,3.448,2913,3.448,2914,3.448,2915,5.203,2916,6.978,2917,5.203,2918,3.448,2919,3.448,2920,3.448,2921,3.448,2922,3.448,2923,3.448,2924,3.448,2925,3.448,2926,3.448,2927,3.448,2928,3.448,2929,3.448,2930,5.203,2931,3.448,2932,2.842]],["title/classes/TaskWithStatusVo.html",[0,0.129,1862,3.441]],["body/classes/TaskWithStatusVo.html",[0,0.175,2,1.367,3,0.156,4,0.13,5,0.09,10,0.345,11,1.077,17,0.381,21,1.56,24,0.87,26,0.998,27,0.006,28,0.587,29,0.634,31,2.804,44,0.243,48,0.147,59,0.005,60,0.005,87,0.719,756,2.517,1793,4.814,1821,5.188,1838,4.301,1855,7.46,1856,7.63,1857,5.539,1858,4.908,1859,4.908,1860,4.908,1861,6.009,1862,5.72,1863,6.516,1864,7.352,1865,6.009,2933,8.225,2934,6.722]],["title/classes/Team.html",[0,0.129,550,2.366]],["body/classes/Team.html",[0,0.17,2,1.327,3,0.151,4,0.127,5,0.087,8,2.145,10,0.335,11,1.057,17,0.411,21,1.515,24,0.897,26,0.969,27,0.006,28,0.822,29,0.615,32,3.391,36,1.105,44,0.291,48,0.143,50,2.357,59,0.005,60,0.005,172,1.989,206,6.025,208,3.534,209,1.847,210,2.686,211,2.365,212,3.049,214,3.049,216,3.225,217,1.707,218,2.093,416,3.461,419,2.74,446,2.796,465,2.917,469,3.652,470,3.652,550,3.862,1706,4.812,1711,4.538,2602,5.833,2603,5.833,2935,5.833,2936,8.076]],["title/classes/TeamNews.html",[0,0.129,589,3.051]],["body/classes/TeamNews.html",[0,0.178,2,0.673,3,0.077,4,0.143,5,0.044,8,1.954,10,0.17,11,0.661,16,2.8,17,0.407,18,0.885,24,0.918,26,0.492,27,0.006,28,0.597,29,0.803,32,3.938,36,1.114,41,0.564,44,0.3,48,0.161,50,1.196,59,0.003,60,0.003,83,0.492,84,1.369,87,0.354,162,2.122,163,3.948,164,3.891,166,2.567,169,2.241,172,1.812,190,2.303,208,2.208,209,1.398,210,1.363,211,2.491,212,1.548,214,1.548,216,3.366,217,0.866,218,1.062,222,3.011,229,3.421,234,2.248,242,2.119,243,2.399,245,2.162,247,1.753,248,1.867,251,1.662,252,1.175,324,2.911,351,1.911,408,1.889,411,3.311,416,1.419,419,2.567,426,3.622,427,2.358,437,1.705,438,1.705,439,1.705,440,1.705,442,1.513,444,2.375,446,1.419,447,2.042,448,1.705,467,3.769,474,2.042,489,1.911,493,1.911,508,1.973,509,2.303,510,3.658,511,3.968,512,3.797,513,4,514,3.716,515,4.991,516,4.754,517,4.898,518,2.516,519,3.895,521,2.729,522,3.228,523,4.215,524,3.509,525,2.729,526,2.729,527,3.684,528,4.215,529,3.684,530,3.509,531,2.533,532,3.359,533,3.509,534,2.729,535,2.729,536,2.729,537,3.527,538,3.911,539,2.729,540,2.729,541,3.069,542,2.729,543,3.359,544,2.729,545,3.684,546,2.729,547,3.684,548,4.898,549,2.729,550,2.923,551,2.418,552,3.769,553,2.418,554,1.973,555,2.303,556,1.337,557,1.705,558,2.205,559,2.042,560,2.418,561,2.418,562,2.418,563,2.418,564,2.418,565,1.751,566,2.205,567,2.418,568,2.418,569,2.418,570,2.418,571,2.418,572,2.418,573,2.418,574,2.418,575,3.684,576,2.923,577,2.994,578,2.856,579,2.856,580,2.923,581,3.527,582,3.527,583,2.418,584,3.684,585,2.418,586,2.418,587,4.463,588,2.042,589,3.111,590,3.684,2937,3.312]],["title/controllers/TeamNewsController.html",[664,2.121,2310,3.819]],["body/controllers/TeamNewsController.html",[0,0.146,3,0.13,4,0.109,5,0.075,10,0.289,12,1.962,17,0.241,18,1.289,24,0.55,26,0.835,27,0.006,28,0.491,29,0.53,36,0.987,41,0.958,44,0.344,46,0.987,48,0.123,59,0.004,60,0.004,66,4.112,76,1.523,83,0.835,84,1.047,155,2.241,169,2.043,174,1.981,186,1.639,188,2.227,189,2.69,191,1.665,211,1.517,506,4.701,510,2.702,550,4.305,603,3.507,614,3.739,630,2.514,657,2.514,664,2.41,666,2.69,668,3.469,681,3.598,682,4.107,683,4.892,684,4.107,690,4.107,693,4.341,696,5.364,697,4.468,1060,3.148,1242,4.876,1298,4.341,1711,3.912,1740,4.856,1953,2.975,2190,6.034,2191,5.777,2193,6.055,2203,4.341,2204,3.745,2205,5.235,2207,3.912,2208,4.107,2209,5.028,2210,5.028,2216,4.635,2217,4.635,2218,5.028,2219,5.028,2220,5.028,2221,5.028,2222,5.028,2310,5.671,2790,3.745,2938,6.568,2939,5.028,2940,8.184,2941,5.625,2942,7.348,2943,5.625,2944,8.184,2945,5.625,2946,5.625,2947,5.028,2948,5.625,2949,5.625]],["title/classes/TestBootstrapConsole.html",[0,0.129,2950,4.078]],["body/classes/TestBootstrapConsole.html",[0,0.176,2,1.372,3,0.156,4,0.131,5,0.09,8,2.19,10,0.346,18,1.446,24,0.66,27,0.006,36,0.814,41,1.149,44,0.297,48,0.18,59,0.005,60,0.005,76,1.535,83,1.224,126,2.953,155,1.848,174,2.401,191,1.997,363,4.483,374,3.084,576,3.228,577,3.306,578,3.154,579,3.154,580,3.228,581,3.894,939,5.209,1262,5.041,1317,3.569,1321,5.562,1322,6.033,1333,5.209,1336,4.928,2319,4.162,2639,6.364,2950,6.794,2951,5.562,2952,8.903,2953,6.749,2954,7.37,2955,6.749,2956,5.209,2957,6.033,2958,6.033,2959,6.033,2960,6.033]],["title/injectables/TimeoutInterceptor.html",[152,0.935,1886,3.819]],["body/injectables/TimeoutInterceptor.html",[0,0.142,3,0.126,4,0.106,5,0.073,10,0.28,11,0.943,17,0.346,18,1.264,24,0.872,26,1.07,27,0.006,28,0.629,29,0.809,31,2.889,41,1.227,44,0.309,46,0.958,48,0.119,59,0.004,60,0.004,64,1.695,83,1.274,134,4.499,152,1.361,153,1.904,247,1.566,248,1.668,281,2.611,366,2.629,518,3.319,576,2.611,577,2.674,578,4.008,579,2.551,580,2.611,581,3.15,664,3.088,740,2.887,1116,5.261,1242,4.293,1320,5.561,1325,5.937,1332,5.011,1344,6.441,1345,6.441,1346,6.62,1347,7.667,1349,2.968,1350,7.209,1353,4.499,1355,4.88,1433,3.917,1434,3.81,1454,4.499,1594,4.214,1836,2.968,1884,6.369,1886,5.561,2145,5.261,2961,4.88,2962,7.205,2963,5.261,2964,5.011,2965,5.937,2966,8.065,2967,8.065,2968,8.065,2969,5.459,2970,5.459,2971,6.225,2972,5.459,2973,5.459,2974,5.459,2975,5.459,2976,5.459,2977,7.205,2978,7.205,2979,5.459,2980,7.205,2981,5.459,2982,5.459,2983,5.459,2984,5.459,2985,5.459,2986,5.459,2987,5.459,2988,7.205,2989,5.459,2990,5.459]],["title/classes/UpdateNewsParams.html",[0,0.129,2200,3.613]],["body/classes/UpdateNewsParams.html",[0,0.232,2,1.228,3,0.14,4,0.117,5,0.081,10,0.31,11,1.167,16,3.325,17,0.363,24,0.828,27,0.006,29,0.725,36,1.075,44,0.278,48,0.132,59,0.004,60,0.004,64,2.767,172,2.318,211,2.283,243,2.509,510,3.56,512,4.509,514,4.603,629,4.663,630,3.44,632,4.306,634,5.401,636,6.341,637,4.745,638,6.341,639,5.939,656,5.934,657,2.701,658,6.878,659,7.345,660,6.977,661,3.486,951,4.069,1669,4.585,1712,5.123,2157,6.341,2158,6.341,2159,5.123,2160,5.939,2200,5.618,2991,7.968,2992,7.695,2993,6.042,2994,6.042,2995,6.042]],["title/classes/User.html",[0,0.129,169,1.376]],["body/classes/User.html",[0,0.13,2,1.017,3,0.116,4,0.097,5,0.067,8,1.805,10,0.444,11,0.89,17,0.404,21,1.161,24,0.932,26,0.743,27,0.006,28,0.723,29,0.816,32,3.476,36,1.149,44,0.299,48,0.149,50,1.807,59,0.004,60,0.004,84,1.541,87,0.535,169,1.889,172,1.674,208,2.973,209,1.554,210,2.059,211,2.541,212,2.337,214,2.337,216,3.359,217,1.308,218,1.604,222,3.548,242,2.853,243,2.215,245,2.912,247,2.213,248,2.357,251,2.511,252,2.739,411,3.544,416,2.912,419,2.1,426,3.869,427,3.175,429,3.499,437,2.576,438,2.576,439,2.576,440,2.576,442,2.285,443,2.98,444,1.943,446,2.143,447,3.084,465,2.236,467,3.084,473,3.861,474,3.084,1375,4.347,1720,4.598,1722,2.98,1723,3.25,1728,5.297,1729,5.297,1780,3.861,1784,3.861,1866,6.39,1867,4.122,1868,5.758,1869,4.471,1870,4.471,1871,4.471,1872,4.471,1873,4.471,1874,4.471,1875,4.471,1876,4.471,1877,4.471,1878,4.471,2565,4.471,2996,6.795,2997,5.002,2998,5.002,2999,5.002,3000,5.002,3001,6.795,3002,5.002,3003,5.002,3004,5.002]],["title/controllers/UserController.html",[664,2.121,3005,3.819]],["body/controllers/UserController.html",[0,0.174,3,0.155,4,0.13,5,0.089,10,0.343,12,2.331,17,0.286,18,1.437,24,0.654,26,0.992,27,0.006,28,0.583,29,0.63,41,1.138,44,0.348,46,1.172,48,0.146,59,0.005,60,0.005,83,0.992,155,2.427,169,1.858,174,2.21,186,1.947,188,2.645,211,1.802,657,2.987,664,2.863,666,3.195,668,4.12,681,4.275,682,4.879,690,4.879,696,5.281,697,4.759,1947,4.12,2203,5.157,2790,4.448,3005,6.325,3006,5.973,3007,6.682,3008,8.195,3009,6.682,3010,5.901,3011,6.682,3012,6.682,3013,6.682,3014,6.682,3015,6.682]],["title/injectables/UserFacade.html",[152,0.935,1926,3.441]],["body/injectables/UserFacade.html",[0,0.174,3,0.155,4,0.13,5,0.089,10,0.344,12,2.335,17,0.352,18,1.439,21,1.554,24,0.803,26,1.218,27,0.006,28,0.716,29,0.773,41,1.14,44,0.334,46,1.174,48,0.147,59,0.005,60,0.005,76,1.246,83,0.994,152,1.55,153,2.335,155,2.429,162,2.871,173,2.93,174,2.212,186,1.95,188,2.651,191,1.981,875,4.457,1926,5.706,1947,5.47,3010,6.428,3016,5.985,3017,8.205,3018,6.695,3019,6.695,3020,8.205,3021,6.695,3022,6.695,3023,6.695]],["title/classes/UserInfoMapper.html",[0,0.129,2263,3.819]],["body/classes/UserInfoMapper.html",[0,0.18,2,1.409,3,0.16,4,0.134,5,0.092,10,0.356,17,0.297,18,1.47,24,0.678,26,1.029,27,0.006,28,0.605,29,0.653,41,1.18,44,0.302,48,0.152,59,0.005,60,0.005,76,1.29,83,1.029,84,1.29,169,2.664,186,2.019,518,3.707,630,3.746,872,5.579,875,4.615,876,4.615,2263,6.468,2375,6.832,2549,7.491,2551,5.35,2552,6.196,2553,6.196,2554,6.196,2555,6.196,2605,5.35,2607,5.712,3024,7.491]],["title/classes/UserInfoResponse.html",[0,0.129,2375,3.613]],["body/classes/UserInfoResponse.html",[0,0.169,2,1.324,3,0.151,4,0.126,5,0.087,10,0.334,11,1.056,17,0.376,24,0.857,27,0.006,28,0.8,29,0.863,36,1.157,44,0.235,48,0.143,59,0.005,60,0.005,64,2.843,169,2.667,172,1.987,209,2.153,211,2.363,645,4.974,646,4.974,655,4.154,656,5.834,657,2.911,663,3.758,1728,5.606,1729,5.606,2375,5.89,2387,7.21,2392,5.027,2439,5.37,2613,5.027,2614,5.367,2615,5.367,3025,8.187,3026,7.21,3027,6.513]],["title/modules/UserModule.html",[111,1.314,118,3.441]],["body/modules/UserModule.html",[0,0.167,3,0.148,4,0.124,5,0.085,27,0.006,44,0.338,46,1.123,48,0.14,59,0.004,60,0.004,111,2.119,113,2.486,114,3.419,118,7.059,121,4.006,122,2.924,123,2.743,125,3.419,147,3.908,664,2.743,666,3.816,1926,6.986,2569,6.642,2586,6.642,2594,3.947,2790,4.261,3005,6.711,3010,6.358,3028,5.721,3029,5.721,3030,5.721,3031,6.358,3032,6.4,3033,6.4]],["title/injectables/UserRepo.html",[152,0.935,3031,3.294]],["body/injectables/UserRepo.html",[0,0.174,3,0.155,4,0.13,5,0.089,10,0.344,12,2.335,17,0.352,18,1.439,21,1.554,24,0.803,26,1.218,27,0.006,28,0.716,29,0.773,41,1.14,44,0.32,46,1.174,48,0.147,59,0.005,60,0.005,76,1.246,83,0.994,152,1.55,153,2.335,155,2.429,162,2.871,169,2.467,174,2.212,186,1.95,188,2.651,191,1.981,209,1.877,217,1.751,219,3.059,265,3.989,266,4.89,268,4.018,2572,7.334,2576,7.334,3031,5.462,3034,5.985,3035,6.695,3036,6.695,3037,6.695]],["title/injectables/UserUC.html",[152,0.935,3010,3.294]],["body/injectables/UserUC.html",[0,0.163,3,0.145,4,0.122,5,0.084,10,0.322,12,2.75,17,0.338,18,1.383,21,1.458,24,0.771,26,1.171,27,0.006,28,0.689,29,0.743,41,1.069,44,0.343,46,1.102,48,0.137,59,0.004,60,0.004,76,1.683,83,0.933,152,1.49,153,2.19,155,2.36,162,2.806,169,1.746,173,2.748,174,2.126,186,1.83,188,2.486,191,2.334,366,2.047,1720,3.234,1947,5.315,2547,4.847,2586,6.709,2594,3.873,3010,5.25,3031,6.328,3038,5.614,3039,7.885,3040,6.28,3041,6.28,3042,7.885,3043,6.28,3044,5.175,3045,6.28,3046,6.28,3047,6.28,3048,6.28,3049,5.614,3050,6.28,3051,5.614,3052,6.28,3053,6.28]],["title/classes/ValidationError.html",[0,0.129,23,3.441]],["body/classes/ValidationError.html",[0,0.156,2,1.217,3,0.139,4,0.116,5,0.08,8,2.032,9,6.293,10,0.307,11,1.002,12,3.431,13,3.42,14,5.595,15,5.297,16,3.045,17,0.418,18,1.342,19,6.948,20,6.948,21,1.39,23,5.321,24,0.945,26,0.889,27,0.006,28,0.523,29,0.564,31,1.889,32,4.007,33,5.352,34,6.385,35,5.352,36,1.133,37,5.352,38,5.352,39,5.352,40,5.352,41,1.303,42,5.352,43,3.568,44,0.276,45,4.621,46,1.05,47,5.352,48,0.131,49,4.934,50,2.163,53,3.255,54,2.677,55,4.372,58,5.352,59,0.004,60,0.004,336,3.351,3054,5.352,3055,5.988,3056,5.988,3057,5.988]],["title/classes/ValidationErrorDetailResponse.html",[0,0.129,71,3.819]],["body/classes/ValidationErrorDetailResponse.html",[0,0.192,2,1.496,3,0.17,4,0.143,5,0.098,12,2.567,17,0.315,21,1.708,24,0.72,26,1.093,27,0.006,28,0.643,29,0.694,36,1.191,48,0.161,49,6.064,54,3.882,59,0.005,60,0.005,68,5.023,71,6.703,3058,7.763,3059,6.578,3060,7.359,3061,7.359,3062,7.156]],["title/modules/ValidationModule.html",[111,1.314,387,3.613]],["body/modules/ValidationModule.html",[0,0.192,3,0.171,4,0.143,5,0.098,27,0.006,44,0.334,46,1.294,48,0.161,59,0.005,60,0.005,111,2.309,113,2.865,125,3.16,387,6.349,401,7.773,1323,4.718,1334,3.9,1368,5.692,1662,6.712,3063,7.375,3064,7.375,3065,7.375]],["title/changelog.html",[3066,3.193,3067,2.877,3068,3.697]],["body/changelog.html",[0,0.053,2,0.853,3,0.014,4,0.012,5,0.069,10,0.031,13,1.393,14,0.957,15,0.344,24,0.199,27,0.002,28,0.14,29,0.151,31,0.356,41,0.273,44,0.074,52,2.815,53,1.859,54,2.514,56,1.173,57,0.768,59,0.001,60,0.001,68,2.15,83,0.088,84,1.072,87,0.121,106,0.873,111,0.828,114,0.483,122,0.515,123,0.483,125,0.255,126,0.261,147,0.292,150,1.285,155,0.163,166,1.66,168,0.672,169,2.059,171,0.324,172,0.502,173,0.493,174,0.433,175,0.784,178,0.344,181,1.565,182,1.173,189,0.285,191,0.176,201,0.285,208,0.261,209,0.466,221,0.46,226,0.381,227,3.2,230,0.46,233,2.4,234,1.838,236,3.046,238,0.721,239,0.721,242,0.25,243,1.205,247,0.98,248,0.491,257,0.367,261,3.067,291,0.46,306,1.117,308,0.751,313,0.355,319,0.721,326,0.355,327,0.414,328,1.214,329,1.784,330,0.721,331,0.998,346,0.751,363,0.873,370,0.396,374,1.274,377,3.94,378,1.605,389,0.751,393,0.435,395,2.499,397,2.276,399,0.344,408,1.731,411,2.778,412,2.499,414,2.916,427,0.278,444,0.792,449,0.957,458,0.823,459,1.775,460,0.414,466,1.334,484,0.355,494,0.435,510,0.415,511,0.272,512,0.998,513,0.873,530,1.117,531,1.985,537,0.927,543,0.396,550,1.334,554,0.672,556,0.24,576,0.975,577,0.552,578,0.278,580,0.539,582,0.344,603,0.255,614,1.274,631,1.239,632,0.631,637,1.72,640,0.46,641,4.445,647,0.695,652,1.257,668,0.367,669,0.849,674,0.355,679,2.298,681,0.381,714,0.355,732,0.721,741,0.381,744,0.324,746,0.396,751,0.651,760,1.214,768,1.903,779,0.768,788,0.355,789,0.367,798,0.285,805,0.396,833,0.998,836,0.823,837,1.555,840,0.367,842,0.435,843,1.913,845,0.46,866,0.396,930,0.46,934,0.435,937,0.539,951,1.285,990,0.396,995,0.396,1005,0.929,1041,0.285,1043,1.4,1044,1.417,1048,1.417,1050,0.414,1054,0.721,1055,1.859,1058,0.927,1059,0.566,1060,0.899,1061,0.631,1065,0.87,1070,1.955,1117,1.304,1135,1.304,1176,1.304,1182,2.037,1183,1.173,1187,1.876,1188,0.784,1199,0.491,1204,0.695,1205,0.46,1212,1.72,1231,0.46,1238,0.929,1239,0.344,1242,0.672,1250,1.141,1252,1.323,1262,2.15,1265,0.46,1268,1.239,1269,2.075,1270,1.662,1273,0.751,1279,1.357,1289,0.491,1290,4.969,1291,1.357,1316,4.005,1317,2.445,1318,1.069,1319,1.798,1329,0.46,1330,2.448,1334,0.849,1342,0.751,1349,0.324,1375,0.381,1377,1.257,1378,0.552,1379,0.695,1380,0.784,1404,1.008,1432,0.344,1433,0.324,1434,1.808,1436,2.168,1444,2.276,1451,0.381,1453,0.46,1462,2.276,1463,1.027,1469,1.239,1496,0.414,1497,0.491,1500,0.46,1505,0.491,1506,1.069,1514,0.87,1517,0.99,1519,0.46,1526,0.46,1527,1.069,1531,1.027,1532,0.435,1553,6.238,1554,0.46,1569,0.491,1572,0.823,1576,0.46,1595,0.491,1596,0.823,1597,1.117,1600,0.751,1611,0.367,1625,1.488,1627,0.823,1630,0.381,1645,1.173,1654,0.491,1667,0.491,1668,1.68,1669,1.448,1672,2.75,1673,3.809,1680,0.87,1681,0.414,1682,2.036,1686,0.491,1710,3.476,1711,1.417,1712,0.396,1714,0.396,1720,1.76,1721,2.378,1722,4.446,1723,1.162,1725,0.784,1739,0.672,1740,0.899,1743,0.396,1753,1.117,1754,0.899,1759,1.069,1778,0.46,1788,0.929,1791,1.117,1793,1.491,1798,1.618,1799,0.695,1805,0.491,1808,0.721,1832,1.323,1836,1.695,1863,0.751,1868,1.417,1882,0.367,1884,0.414,1885,3.258,1887,0.751,1895,0.46,1901,0.435,1902,1.857,1909,1.173,1912,0.491,1914,0.491,1923,0.491,1930,1.436,1932,2.639,1934,2.276,1953,1.285,1967,1.173,1996,4.768,1997,0.929,2017,0.414,2019,0.46,2026,0.491,2029,2.187,2047,1.618,2065,1.68,2076,0.46,2095,0.435,2097,0.823,2101,1.573,2102,0.381,2106,1.117,2126,0.435,2128,0.414,2131,0.46,2143,0.929,2144,2.378,2145,0.823,2159,1.857,2182,2.276,2223,0.491,2234,0.414,2240,3.305,2318,1.618,2319,0.99,2320,4.899,2324,0.784,2363,0.491,2366,0.367,2373,0.491,2390,1.214,2398,2.406,2410,0.784,2437,2.173,2439,1.069,2447,0.823,2486,0.532,2487,2.298,2504,4.627,2506,1.108,2515,1.008,2594,0.99,2636,0.414,2660,2.496,2661,0.396,2662,1.027,2663,0.491,2666,2.378,2677,1.691,2733,2.003,2734,1.822,2735,1.008,2737,3.236,2747,2.168,2798,0.929,2829,0.532,2857,1.488,2858,0.435,2859,0.823,2885,0.929,2886,0.929,2932,0.929,2963,1.173,2971,0.46,3026,1.436,3062,0.929,3068,2.786,3069,0.595,3070,1.417,3071,0.929,3072,0.532,3073,0.595,3074,0.595,3075,1.606,3076,0.784,3077,4.387,3078,5.572,3079,8.408,3080,4.392,3081,0.595,3082,8.277,3083,0.595,3084,0.595,3085,0.491,3086,1.436,3087,0.595,3088,1.008,3089,0.491,3090,3.056,3091,1.128,3092,0.595,3093,5.953,3094,0.595,3095,7.477,3096,0.595,3097,0.595,3098,0.595,3099,0.595,3100,1.94,3101,0.595,3102,0.595,3103,8.544,3104,3.419,3105,0.595,3106,0.46,3107,3.697,3108,0.595,3109,0.595,3110,0.595,3111,2.792,3112,1.128,3113,0.532,3114,0.595,3115,0.595,3116,2.173,3117,0.595,3118,0.595,3119,3.056,3120,1.173,3121,0.823,3122,0.929,3123,1.117,3124,0.532,3125,0.595,3126,1.173,3127,2.571,3128,5.481,3129,0.595,3130,0.595,3131,2.038,3132,1.606,3133,2.699,3134,0.595,3135,0.595,3136,0.595,3137,0.595,3138,0.595,3139,0.396,3140,0.595,3141,0.595,3142,0.595,3143,0.595,3144,0.595,3145,0.595,3146,0.595,3147,0.87,3148,1.128,3149,0.595,3150,1.008,3151,0.595,3152,3.697,3153,1.128,3154,2.038,3155,2.786,3156,0.595,3157,6.008,3158,3.117,3159,0.595,3160,0.532,3161,0.595,3162,1.128,3163,0.595,3164,0.595,3165,0.595,3166,0.435,3167,0.595,3168,2.493,3169,0.595,3170,0.595,3171,0.595,3172,1.128,3173,5.169,3174,0.595,3175,0.595,3176,0.595,3177,1.128,3178,0.532,3179,0.595,3180,0.87,3181,0.595,3182,0.595,3183,1.128,3184,0.595,3185,3.535,3186,0.595,3187,0.595,3188,0.595,3189,0.595,3190,1.128,3191,1.606,3192,0.595,3193,0.532,3194,0.595,3195,0.595,3196,0.595,3197,2.298,3198,0.595,3199,0.595,3200,1.128,3201,0.595,3202,0.435,3203,2.038,3204,0.532,3205,1.488,3206,1.008,3207,0.595,3208,3.954,3209,1.606,3210,0.595,3211,6.054,3212,0.595,3213,0.595,3214,0.595,3215,0.595,3216,5.624,3217,0.595,3218,4.114,3219,1.008,3220,0.595,3221,0.595,3222,0.595,3223,3.117,3224,2.298,3225,0.595,3226,0.595,3227,0.595,3228,0.595,3229,1.606,3230,0.595,3231,9.033,3232,0.595,3233,0.491,3234,1.822,3235,1.606,3236,1.128,3237,0.595,3238,0.595,3239,1.94,3240,0.595,3241,0.595,3242,1.128,3243,0.595,3244,0.595,3245,1.822,3246,0.491,3247,1.436,3248,0.595,3249,0.595,3250,0.595,3251,0.595,3252,0.595,3253,1.436,3254,0.595,3255,0.595,3256,0.595,3257,0.595,3258,2.003,3259,3.117,3260,2.786,3261,0.595,3262,0.595,3263,0.595,3264,0.595,3265,0.595,3266,0.595,3267,0.595,3268,0.784,3269,1.606,3270,0.929,3271,0.595,3272,0.595,3273,0.414,3274,0.595,3275,0.595,3276,0.595,3277,0.532,3278,1.606,3279,0.595,3280,5.624,3281,0.595,3282,1.128,3283,2.431,3284,0.595,3285,0.595,3286,0.595,3287,0.595,3288,1.436,3289,2.431,3290,0.595,3291,2.431,3292,0.595,3293,2.038,3294,1.128,3295,2.406,3296,0.595,3297,0.595,3298,2.038,3299,0.595,3300,2.038,3301,4.132,3302,0.595,3303,0.595,3304,1.128,3305,2.038,3306,3.455,3307,0.595,3308,1.128,3309,0.532,3310,0.532,3311,0.46,3312,0.532,3313,2.003,3314,2.639,3315,1.488,3316,0.414,3317,1.128,3318,0.595,3319,0.595,3320,1.436,3321,0.595,3322,0.595,3323,0.595,3324,0.595,3325,1.606,3326,0.595,3327,0.595,3328,5.624,3329,2.173,3330,1.128,3331,1.128,3332,1.128,3333,1.822,3334,0.595,3335,0.595,3336,0.595,3337,0.595,3338,1.822,3339,1.128,3340,0.595,3341,0.595,3342,1.606,3343,0.595,3344,0.491,3345,0.784,3346,2.173,3347,0.532,3348,1.239,3349,0.595,3350,2.786,3351,0.595,3352,1.606,3353,2.569,3354,0.595,3355,0.595,3356,0.595,3357,1.128,3358,0.595,3359,2.173,3360,1.128,3361,0.595,3362,0.595,3363,2.038,3364,2.431,3365,1.68,3366,0.929,3367,0.595,3368,0.595,3369,2.853,3370,0.595,3371,0.595,3372,0.595,3373,1.008,3374,0.595,3375,0.595,3376,1.606,3377,0.929,3378,0.595,3379,1.008,3380,0.595,3381,3.419,3382,3.258,3383,1.128,3384,2.431,3385,0.595,3386,0.595,3387,0.595,3388,1.822,3389,0.532,3390,1.436,3391,0.595,3392,0.595,3393,0.595,3394,0.491,3395,0.595,3396,0.595,3397,0.595,3398,0.595,3399,2.789,3400,2.038,3401,0.595,3402,1.008,3403,2.786,3404,0.491,3405,2.038,3406,1.128,3407,1.008,3408,1.417,3409,1.008,3410,1.008,3411,1.304,3412,0.595,3413,0.595,3414,0.532,3415,0.595,3416,0.491,3417,0.435,3418,0.491,3419,0.595,3420,0.532,3421,0.595,3422,2.038,3423,0.595,3424,6.437,3425,0.595,3426,0.595,3427,0.929,3428,0.595,3429,0.595,3430,0.595,3431,1.606,3432,0.595,3433,1.323,3434,1.239,3435,0.595,3436,0.595,3437,0.595,3438,0.595,3439,1.128,3440,0.595,3441,0.595,3442,1.128,3443,0.595,3444,2.038,3445,0.929,3446,0.595,3447,0.595,3448,0.595,3449,2.153,3450,0.595,3451,0.595,3452,0.595,3453,0.595,3454,0.595,3455,3.056,3456,0.595,3457,0.532,3458,0.595,3459,3.455,3460,1.128,3461,1.173,3462,1.128,3463,0.595,3464,0.595,3465,3.947,3466,0.595,3467,0.595,3468,0.595,3469,0.595,3470,3.954,3471,3.419,3472,0.595,3473,4.817,3474,0.595,3475,0.595,3476,0.595,3477,2.431,3478,0.595,3479,0.595,3480,1.68,3481,0.491,3482,0.595,3483,0.532,3484,0.595,3485,1.822,3486,0.595,3487,0.595,3488,1.606,3489,0.595,3490,1.822,3491,0.595,3492,0.595,3493,1.606,3494,1.008,3495,1.008,3496,1.128,3497,1.128,3498,1.822,3499,1.128,3500,0.532,3501,0.595,3502,1.128,3503,1.128,3504,1.606,3505,1.128,3506,1.822,3507,0.595,3508,1.008,3509,0.595,3510,1.128,3511,1.008,3512,0.595,3513,2.786,3514,2.789,3515,1.128,3516,0.595,3517,2.173,3518,0.595,3519,2.789,3520,3.117,3521,0.595,3522,0.595,3523,1.128,3524,0.595,3525,0.595,3526,0.595,3527,0.595,3528,0.532,3529,0.595,3530,0.595,3531,0.595,3532,0.595,3533,0.595,3534,0.595,3535,0.595,3536,0.595,3537,0.595,3538,1.128,3539,3.305,3540,0.595,3541,1.436,3542,0.929,3543,0.595,3544,0.595,3545,1.128,3546,1.128,3547,0.595,3548,1.68,3549,0.595,3550,0.595,3551,0.595,3552,0.595,3553,0.595,3554,0.595,3555,2.038,3556,3.697,3557,0.595,3558,0.595,3559,0.595,3560,1.323,3561,0.491,3562,0.595,3563,0.595,3564,0.595,3565,1.128,3566,1.008,3567,1.128,3568,1.008,3569,1.128,3570,0.595,3571,1.436,3572,0.595,3573,0.595,3574,0.595,3575,2.187,3576,0.595,3577,1.128,3578,0.595,3579,0.595,3580,1.008,3581,0.595,3582,0.595,3583,1.436,3584,1.822,3585,0.595,3586,0.595,3587,1.008,3588,0.595,3589,0.595,3590,0.595,3591,0.595,3592,0.595,3593,2.789,3594,1.128,3595,0.595,3596,0.595,3597,0.595,3598,0.595,3599,0.595,3600,0.595,3601,1.008,3602,0.595,3603,0.595,3604,0.595,3605,0.595,3606,0.595,3607,1.008,3608,0.595,3609,0.595,3610,2.431,3611,1.128,3612,0.595,3613,1.606,3614,1.173,3615,0.595,3616,0.595,3617,0.595,3618,1.128,3619,0.595,3620,0.595,3621,1.008,3622,0.595,3623,0.595,3624,0.87,3625,1.128,3626,2.789,3627,0.595,3628,0.595,3629,0.595,3630,0.491,3631,0.595,3632,1.128,3633,1.008,3634,0.595,3635,0.595,3636,0.595,3637,0.595,3638,2.431,3639,0.532,3640,0.595,3641,1.008,3642,0.595,3643,0.532,3644,2.038,3645,0.929,3646,0.595,3647,1.128,3648,1.606,3649,0.595,3650,0.595,3651,0.595,3652,0.595,3653,1.128,3654,0.595,3655,0.491,3656,0.595,3657,0.595,3658,0.595,3659,1.606,3660,0.595,3661,0.595,3662,1.128,3663,0.595,3664,0.595,3665,0.595,3666,0.532,3667,1.128,3668,0.595,3669,1.606,3670,0.595,3671,0.595,3672,1.173,3673,1.128,3674,1.488,3675,0.595,3676,0.595,3677,0.595,3678,0.595,3679,1.606,3680,1.573,3681,0.595,3682,0.532,3683,0.595,3684,1.606,3685,0.595,3686,0.595,3687,0.595,3688,1.606,3689,0.595,3690,0.595,3691,1.128,3692,0.595,3693,1.436,3694,1.128,3695,0.595,3696,0.595,3697,0.595,3698,0.595,3699,0.595,3700,0.46,3701,0.87,3702,0.46,3703,0.595,3704,0.595,3705,0.532,3706,1.008,3707,0.595,3708,0.595,3709,0.595,3710,0.595,3711,1.606,3712,0.595,3713,0.595,3714,0.595,3715,2.038,3716,0.595,3717,1.128,3718,1.128,3719,0.595,3720,0.595,3721,0.595,3722,1.128,3723,0.595,3724,0.595,3725,0.595,3726,0.532,3727,0.595,3728,0.595,3729,0.595,3730,0.532,3731,0.595,3732,0.595,3733,0.595,3734,0.595,3735,0.595,3736,0.595,3737,0.595,3738,0.595,3739,0.532,3740,0.595,3741,0.595,3742,0.595,3743,0.595,3744,0.595,3745,1.128,3746,0.595,3747,0.595,3748,1.128,3749,0.595,3750,0.929,3751,1.417,3752,0.595,3753,1.128,3754,0.532,3755,0.595,3756,0.532,3757,0.595,3758,1.128,3759,0.595,3760,0.595,3761,0.491,3762,0.595,3763,2.431,3764,0.595,3765,0.595,3766,0.595,3767,0.595,3768,0.532,3769,0.595,3770,0.595,3771,0.595,3772,0.595,3773,0.595,3774,0.46,3775,0.595,3776,0.595,3777,0.595,3778,0.595,3779,0.595,3780,0.595,3781,0.751,3782,1.128,3783,0.595,3784,1.606,3785,0.595,3786,0.595,3787,0.595,3788,0.595,3789,0.595,3790,0.595,3791,0.595,3792,0.595,3793,0.595,3794,1.128,3795,0.491,3796,1.128,3797,0.532,3798,1.323,3799,0.595,3800,0.595,3801,0.491,3802,0.595,3803,8.392,3804,0.595,3805,0.595,3806,0.491,3807,0.595,3808,0.595,3809,0.595,3810,0.595,3811,0.595,3812,2.789,3813,0.595,3814,1.173,3815,0.595,3816,0.595,3817,0.595,3818,0.595,3819,0.595,3820,2.038,3821,1.822,3822,1.488,3823,1.436,3824,2.431,3825,1.128,3826,1.128,3827,3.056,3828,1.573,3829,1.008,3830,1.128,3831,1.128,3832,0.929,3833,1.128,3834,0.595,3835,0.595,3836,2.786,3837,0.491,3838,0.414,3839,0.929,3840,0.595,3841,0.46,3842,0.414,3843,0.46,3844,0.595,3845,0.595,3846,0.532,3847,0.595,3848,0.595,3849,0.595,3850,0.595,3851,0.595,3852,1.128,3853,0.595,3854,0.595,3855,1.128,3856,0.595,3857,0.595,3858,0.595,3859,0.532,3860,0.595,3861,0.595,3862,1.008,3863,0.491,3864,0.595,3865,1.606,3866,0.595,3867,0.532,3868,1.128,3869,0.595,3870,0.595,3871,0.532,3872,0.595,3873,1.128,3874,0.595,3875,0.595,3876,0.595,3877,0.595,3878,0.595,3879,1.008,3880,1.008,3881,2.038,3882,1.68,3883,0.595,3884,0.595,3885,0.595,3886,1.323,3887,0.595,3888,0.595,3889,0.595,3890,1.128,3891,1.606,3892,0.595,3893,0.595,3894,0.595,3895,0.595,3896,1.128,3897,0.595,3898,0.532,3899,1.128,3900,0.595,3901,0.532,3902,0.595,3903,0.595,3904,0.595,3905,1.128,3906,1.128,3907,0.595,3908,0.595,3909,0.595,3910,0.595,3911,0.595,3912,1.606,3913,1.606,3914,0.414,3915,2.003,3916,0.595,3917,1.128,3918,0.595,3919,0.595,3920,1.128,3921,1.606,3922,1.008,3923,0.595,3924,0.595,3925,0.532,3926,0.595,3927,0.595,3928,0.595,3929,0.595,3930,0.595,3931,0.595,3932,0.595,3933,0.595,3934,0.595,3935,0.595,3936,0.595,3937,0.595,3938,1.128,3939,0.532,3940,0.491,3941,0.595,3942,0.491,3943,0.595,3944,0.491,3945,0.595,3946,1.323,3947,0.595,3948,0.595,3949,0.595,3950,1.128,3951,0.595,3952,0.595,3953,0.595,3954,0.929,3955,0.595,3956,0.595,3957,0.595,3958,0.595,3959,0.595,3960,0.532,3961,0.595,3962,1.128,3963,0.595,3964,0.595,3965,1.128,3966,1.128,3967,1.606,3968,1.822,3969,1.128,3970,1.323,3971,0.929,3972,0.414,3973,0.595,3974,0.532,3975,0.595,3976,0.823,3977,0.595,3978,0.595,3979,0.595,3980,0.595,3981,0.595,3982,0.532,3983,0.595,3984,1.128,3985,1.606,3986,1.008,3987,0.595,3988,0.595,3989,0.595,3990,1.128,3991,1.128,3992,0.595,3993,0.595,3994,0.595,3995,0.595,3996,0.595,3997,0.595,3998,0.595,3999,0.595,4000,0.595,4001,0.532,4002,0.532,4003,0.595,4004,0.595,4005,1.606,4006,0.595,4007,1.128,4008,0.595,4009,1.008,4010,0.595,4011,1.128,4012,0.595,4013,1.128,4014,0.595,4015,0.929,4016,0.595,4017,0.532,4018,0.595,4019,0.595,4020,0.532,4021,1.606,4022,2.038,4023,1.128,4024,1.008,4025,1.128,4026,0.929,4027,1.128,4028,0.595,4029,1.128,4030,0.532,4031,0.595,4032,1.128,4033,1.008,4034,0.595,4035,0.532,4036,0.595,4037,0.532,4038,0.595,4039,0.595,4040,1.128,4041,0.595,4042,0.595,4043,0.595,4044,0.595,4045,0.532,4046,0.532,4047,0.595,4048,0.595,4049,0.595,4050,0.595,4051,0.595,4052,0.595,4053,0.595,4054,0.595,4055,0.595,4056,0.595,4057,0.595,4058,0.595,4059,0.595,4060,0.595,4061,0.929,4062,0.595,4063,0.595,4064,0.595,4065,0.595,4066,0.595,4067,0.595,4068,0.595,4069,0.595,4070,0.595,4071,0.595,4072,0.491,4073,0.595,4074,0.491,4075,0.595,4076,0.595,4077,0.532,4078,0.595,4079,0.595,4080,0.595,4081,0.595,4082,0.595,4083,0.595,4084,0.595,4085,0.595,4086,0.595,4087,0.595,4088,0.491,4089,0.595,4090,0.595,4091,0.595,4092,0.595,4093,1.606,4094,0.595,4095,1.128,4096,1.606,4097,1.128,4098,1.128,4099,1.128,4100,1.128,4101,0.595,4102,0.595,4103,0.595,4104,0.595,4105,0.595,4106,0.595,4107,0.532,4108,0.595,4109,1.128,4110,0.595,4111,0.595,4112,0.46,4113,0.595,4114,0.491,4115,0.595,4116,1.128,4117,0.595,4118,0.46,4119,0.595,4120,0.595,4121,0.595,4122,0.595,4123,0.491,4124,0.595,4125,1.606,4126,1.606,4127,0.595,4128,1.008,4129,0.595,4130,0.595,4131,0.595,4132,0.595,4133,0.595,4134,0.595,4135,0.532,4136,0.595,4137,0.595,4138,1.128,4139,0.532,4140,0.532,4141,0.532,4142,0.595,4143,0.595,4144,0.595,4145,0.595,4146,0.595,4147,0.595,4148,0.595,4149,0.595,4150,0.595,4151,1.128,4152,1.128,4153,0.595,4154,0.532,4155,0.595,4156,0.595,4157,0.595,4158,1.128,4159,0.595,4160,0.595,4161,1.128,4162,0.595,4163,1.128,4164,0.595,4165,0.595,4166,1.128,4167,2.038,4168,0.595,4169,0.595,4170,0.595,4171,0.595,4172,0.595,4173,0.87,4174,0.532,4175,1.128,4176,0.595,4177,0.595,4178,0.595,4179,0.595,4180,0.595,4181,0.595,4182,0.595,4183,0.595,4184,0.595,4185,0.595,4186,0.595,4187,0.595,4188,0.595,4189,1.606,4190,0.595,4191,0.595,4192,0.595,4193,0.595,4194,0.595,4195,0.595,4196,0.595,4197,1.128,4198,1.128,4199,0.595,4200,0.595,4201,0.595,4202,2.038,4203,4.415,4204,1.128,4205,0.929,4206,1.008,4207,1.128,4208,1.128,4209,0.595,4210,1.128,4211,1.008,4212,1.128,4213,1.128,4214,1.128,4215,0.929,4216,1.128,4217,2.038,4218,1.128,4219,2.038,4220,1.128,4221,1.128,4222,0.929,4223,1.606,4224,1.128,4225,0.595,4226,0.491,4227,0.87,4228,1.128,4229,0.595,4230,2.431,4231,1.128,4232,0.595,4233,0.491,4234,0.595,4235,2.038,4236,0.595,4237,0.595,4238,0.595,4239,0.595,4240,0.532,4241,0.595,4242,0.595,4243,0.595,4244,1.128,4245,1.128,4246,1.128,4247,0.595,4248,0.595,4249,0.595,4250,0.595,4251,0.595,4252,1.128,4253,1.128,4254,0.595,4255,0.595,4256,0.595,4257,0.46,4258,0.595,4259,0.595,4260,0.595,4261,1.128,4262,0.595,4263,1.606,4264,1.436,4265,0.595,4266,0.595,4267,0.491,4268,1.128,4269,1.128,4270,0.595,4271,0.46,4272,0.595,4273,0.595,4274,1.606,4275,1.128,4276,1.128,4277,0.595,4278,1.128,4279,0.595,4280,0.595,4281,0.595,4282,2.038,4283,0.595,4284,0.595,4285,0.595,4286,0.595,4287,0.595,4288,0.595,4289,0.595,4290,1.128,4291,0.595,4292,0.595,4293,0.595,4294,0.532,4295,0.595,4296,1.128,4297,0.595,4298,0.595,4299,0.491,4300,0.595,4301,1.128,4302,0.595,4303,0.532,4304,0.595,4305,1.128,4306,1.128,4307,0.595,4308,0.595,4309,0.532,4310,1.128,4311,0.595,4312,0.595,4313,1.128,4314,1.128,4315,0.595,4316,0.595,4317,0.595,4318,1.128,4319,1.128,4320,0.595,4321,0.595,4322,1.128,4323,0.595,4324,0.595,4325,0.595,4326,1.128,4327,0.595,4328,0.595,4329,0.491,4330,0.595,4331,2.038,4332,0.491,4333,0.595,4334,1.128,4335,0.46,4336,1.128,4337,0.595,4338,2.431,4339,1.128,4340,0.46,4341,0.595,4342,0.595,4343,0.491,4344,0.595,4345,0.595,4346,0.595,4347,0.595,4348,0.595,4349,0.595,4350,0.595,4351,0.595,4352,0.595,4353,0.595,4354,0.595,4355,0.595,4356,1.008,4357,0.595,4358,0.595,4359,0.595,4360,0.595,4361,0.491,4362,0.595,4363,0.595,4364,0.532,4365,0.595,4366,0.532,4367,0.595,4368,0.595,4369,0.595,4370,0.491,4371,0.46,4372,0.595,4373,0.595,4374,0.532,4375,1.606,4376,0.595,4377,0.532,4378,0.532,4379,0.595,4380,0.532,4381,0.595,4382,0.595,4383,0.595,4384,0.595,4385,0.595,4386,2.038,4387,0.595,4388,0.595,4389,0.532,4390,0.595,4391,1.436,4392,0.595,4393,0.595,4394,0.595,4395,0.595,4396,0.532,4397,0.595,4398,0.595,4399,1.128,4400,0.595,4401,0.595,4402,0.595,4403,0.46,4404,1.128,4405,0.595,4406,0.595,4407,0.595,4408,0.595,4409,1.606,4410,1.128,4411,1.128,4412,0.595,4413,0.532,4414,1.128,4415,0.532,4416,1.606,4417,0.595,4418,0.595,4419,0.595,4420,0.595,4421,0.595,4422,1.128,4423,1.128,4424,1.128,4425,1.128,4426,1.436,4427,1.128,4428,0.595,4429,1.128,4430,0.595,4431,1.128,4432,0.532,4433,1.606,4434,0.595,4435,0.595,4436,0.595,4437,0.595,4438,2.431,4439,0.595,4440,0.532,4441,0.595,4442,0.595,4443,0.595,4444,0.532,4445,0.595,4446,0.929,4447,0.595,4448,0.532,4449,0.46,4450,0.595,4451,0.595,4452,0.595,4453,0.595,4454,1.128,4455,0.595,4456,0.595,4457,0.595,4458,0.595,4459,0.532,4460,0.595,4461,0.595,4462,0.595,4463,0.595,4464,0.491,4465,0.595,4466,0.595,4467,0.595,4468,1.128,4469,0.532]],["title/coverage.html",[3781,4.491]],["body/coverage.html",[0,0.258,1,1.314,5,0.044,6,1.764,7,1.764,9,1.263,17,0.085,23,1.373,27,0.006,43,1.176,53,1.073,54,2.264,59,0.002,60,0.002,61,1.523,62,1.764,63,1.764,71,1.523,84,0.367,87,1.022,88,1.217,90,4.173,91,1.217,95,1.217,99,1.217,102,1.217,105,1.217,106,1.073,119,1.441,120,1.373,133,2.314,144,1.217,145,1.314,152,1.767,154,1.764,169,0.925,206,1.263,207,2.742,222,0.767,247,0.566,254,1.373,255,1.764,299,1.314,300,1.764,323,1.764,334,1.441,359,1.217,360,1.626,361,1.373,365,1.764,408,0.739,409,3.33,411,0.753,417,1.523,484,1.176,485,2.742,487,1.523,498,1.626,499,1.764,508,1.176,509,3.932,510,0.726,511,0.902,522,1.263,548,1.314,550,0.944,588,1.217,589,1.217,591,1.314,592,2.742,603,0.846,605,1.523,627,1.373,628,2.742,629,3.33,650,3.15,664,2.937,665,1.523,667,1.764,675,1.441,681,1.263,683,1.314,685,1.373,687,1.314,688,1.523,696,1.176,697,1.016,701,1.105,702,4.173,731,1.314,733,1.314,737,1.263,739,1.176,752,1.314,761,1.044,812,1.314,813,3.33,828,1.314,846,1.217,850,1.373,851,3.33,857,1.441,871,1.764,897,1.441,898,1.764,937,4.927,974,1.373,975,3.909,985,1.523,987,1.523,1004,1.441,1017,1.764,1031,1.441,1032,2.742,1033,2.742,1037,1.217,1041,0.944,1074,1.523,1075,1.764,1076,1.764,1104,1.263,1105,1.626,1108,1.764,1157,2.742,1158,2.742,1169,1.314,1215,1.523,1311,1.523,1312,3.555,1313,3.555,1324,1.626,1331,1.626,1337,1.626,1338,1.764,1339,1.764,1343,1.139,1365,1.441,1369,1.764,1373,1.626,1381,2.975,1382,2.742,1389,1.263,1423,1.373,1424,1.764,1425,1.764,1440,1.523,1441,2.568,1442,2.43,1476,2.742,1477,1.523,1481,2.568,1482,2.568,1483,2.742,1519,1.523,1564,1.523,1565,3.555,1571,1.626,1573,5.853,1574,5.537,1577,1.626,1578,1.314,1591,1.626,1593,1.626,1598,1.626,1601,1.626,1611,4.023,1638,1.523,1639,1.626,1651,1.626,1662,1.523,1663,1.764,1664,1.764,1703,1.373,1704,2.43,1716,1.373,1718,3.15,1723,0.944,1724,1.373,1727,1.314,1734,1.764,1735,1.764,1736,1.314,1737,2.43,1738,2.43,1742,1.441,1750,1.523,1751,2.742,1754,1.105,1757,1.764,1775,1.523,1776,2.742,1785,1.523,1786,2.742,1793,0.944,1799,1.217,1825,1.523,1826,2.568,1855,1.523,1856,2.742,1857,2.742,1862,1.373,1866,1.523,1867,2.742,1886,1.523,1888,1.523,1889,1.764,1890,1.764,1893,3.555,1920,1.523,1921,1.764,1922,1.764,1924,1.764,1926,1.373,1947,1.217,1957,2.742,1958,2.742,1990,1.373,1991,1.764,1998,1.523,2003,1.764,2004,3.33,2013,1.764,2039,2.43,2042,1.523,2048,1.373,2055,1.523,2064,2.742,2068,1.523,2086,1.441,2105,1.523,2106,2.314,2107,1.626,2108,1.626,2118,1.626,2149,2.742,2150,1.523,2178,1.523,2179,1.764,2190,1.373,2191,1.314,2200,1.441,2204,1.314,2205,1.263,2207,1.373,2208,1.441,2231,2.742,2232,2.742,2245,1.626,2248,1.764,2260,1.523,2262,1.523,2263,1.523,2308,1.314,2310,1.523,2319,1.217,2325,1.764,2330,1.373,2351,1.523,2371,3.33,2375,1.441,2380,1.441,2385,1.626,2389,1.441,2390,1.176,2402,2.742,2409,1.523,2421,1.764,2422,1.626,2503,1.764,2504,1.441,2518,1.764,2530,1.764,2531,1.626,2538,1.626,2547,1.523,2548,1.764,2569,1.373,2570,1.764,2586,1.373,2587,1.764,2600,1.764,2604,1.764,2605,3.33,2612,1.764,2613,3.33,2617,1.626,2632,1.523,2633,1.764,2652,1.523,2653,1.764,2666,2.314,2693,1.626,2694,1.764,2708,1.764,2713,1.764,2725,1.373,2726,1.626,2745,1.523,2746,1.764,2749,1.373,2751,1.441,2752,1.523,2762,1.764,2787,1.373,2792,1.764,2803,1.523,2828,1.764,2842,1.626,2843,1.764,2863,1.626,2935,1.764,2938,1.764,2939,1.764,2950,1.626,2951,2.742,2956,3.33,2961,1.764,2971,1.523,2991,1.764,3005,1.523,3006,1.764,3010,1.314,3016,1.764,3024,1.764,3025,1.764,3031,1.314,3034,1.764,3038,1.764,3054,1.764,3058,1.764,3059,1.764,3116,3.856,3168,3.856,3359,1.764,3369,1.523,3449,1.523,3459,1.626,3621,1.764,3641,1.764,3751,1.373,3781,1.314,4329,8.001,4470,1.626,4471,8.204,4472,9.692,4473,7.373,4474,7.373,4475,1.764,4476,6.131,4477,1.974,4478,7.929,4479,6.125,4480,6.852,4481,5.655,4482,1.764,4483,1.764,4484,3.856,4485,3.856,4486,1.764,4487,1.764,4488,7.132,4489,1.764,4490,1.764,4491,9.247,4492,3.555,4493,1.626,4494,1.974,4495,1.974,4496,2.975,4497,1.974,4498,5.064,4499,1.764,4500,2.975,4501,1.764,4502,4.314,4503,7.583,4504,3.328,4505,1.974,4506,1.626,4507,1.974,4508,1.974,4509,4.314,4510,4.314,4511,1.974,4512,1.974,4513,1.974,4514,1.974,4515,1.974,4516,7.583,4517,1.764,4518,1.764,4519,4.314,4520,1.974,4521,2.975,4522,2.975,4523,1.764,4524,1.764,4525,1.764,4526,1.764,4527,1.764,4528,1.764,4529,1.974,4530,5.655,4531,4.314,4532,1.974,4533,1.764,4534,1.764,4535,1.764,4536,1.764,4537,1.764,4538,1.764,4539,1.974,4540,1.974,4541,1.974,4542,1.764,4543,1.764,4544,3.555,4545,1.974]],["title/dependencies.html",[114,2.55,4072,3.408]],["body/dependencies.html",[0,0.155,4,0.08,5,0.079,17,0.177,27,0.006,46,0.726,52,1.98,59,0.003,60,0.003,114,1.774,128,3.196,130,3.701,150,3.687,155,1.63,174,2.056,181,2.078,209,0.947,217,1.824,218,1.328,219,1.892,318,3.196,329,4.46,363,2.251,374,1.892,377,2.078,389,2.756,391,2.756,454,2.88,522,3.809,538,2.649,576,2.847,657,1.851,661,4.022,680,3.023,714,2.467,770,2.553,1135,2.649,1210,3.196,1269,2.756,1323,2.649,1353,3.412,1434,3.148,1451,4.877,1452,3.412,1517,2.553,1540,3.701,1868,2.88,1902,2.756,1933,6.232,1934,2.756,1970,3.701,2046,3.023,2047,2.756,2050,3.023,2083,3.196,2144,2.88,2438,3.701,2639,3.196,2661,2.756,2662,3.809,2663,3.412,2677,6.28,3150,3.701,3160,3.701,3219,3.701,3234,3.701,3542,4.906,3568,3.701,3705,3.701,3706,3.701,3750,4.906,3754,3.701,3859,3.701,3879,3.701,3880,3.701,3925,3.701,3960,3.701,3972,2.88,3976,4.347,3986,3.701,4174,3.701,4413,3.701,4448,3.701,4546,5.954,4547,8.664,4548,4.14,4549,4.14,4550,4.14,4551,4.14,4552,4.14,4553,4.14,4554,5.954,4555,4.14,4556,7.623,4557,4.14,4558,4.14,4559,4.14,4560,4.14,4561,4.14,4562,4.14,4563,4.14,4564,4.14,4565,4.14,4566,4.14,4567,3.412,4568,4.14,4569,4.14,4570,5.954,4571,4.14,4572,4.14,4573,4.14,4574,4.14,4575,4.14,4576,4.14,4577,4.14,4578,5.954,4579,4.14,4580,5.954,4581,4.14,4582,4.14,4583,4.14,4584,8.076,4585,4.14,4586,4.14,4587,4.14,4588,4.14,4589,3.701,4590,4.14,4591,4.14,4592,4.14,4593,4.14,4594,5.954,4595,4.14,4596,6.971,4597,4.14,4598,4.14,4599,4.14,4600,5.954,4601,4.14,4602,5.954,4603,5.954,4604,4.14,4605,4.14,4606,4.14,4607,4.14,4608,3.023,4609,4.14,4610,4.14,4611,4.14,4612,4.14,4613,4.14,4614,5.954,4615,4.14,4616,4.14,4617,4.14,4618,4.14,4619,4.14,4620,4.14,4621,4.14,4622,4.14,4623,4.14,4624,4.14,4625,4.14,4626,4.14,4627,4.14,4628,4.14,4629,4.14,4630,4.14,4631,4.14,4632,5.954,4633,5.322,4634,4.14,4635,4.14,4636,4.14,4637,4.14,4638,3.701,4639,4.14,4640,4.14,4641,5.954,4642,4.14,4643,4.14,4644,4.14,4645,4.14,4646,4.14,4647,4.14,4648,4.14,4649,4.14,4650,4.14,4651,4.14,4652,4.14,4653,4.14,4654,5.954,4655,4.14,4656,4.14,4657,4.14,4658,4.14,4659,4.14,4660,5.954,4661,3.701,4662,4.14,4663,4.14,4664,4.14,4665,4.14,4666,4.14,4667,4.14,4668,4.14,4669,4.14,4670,3.701,4671,4.14,4672,4.14,4673,4.14,4674,4.14,4675,4.14,4676,4.14,4677,4.14,4678,4.14,4679,3.412,4680,4.14,4681,4.14,4682,4.14,4683,4.14,4684,4.14,4685,4.14,4686,4.14,4687,4.14,4688,4.14,4689,4.14,4690,4.14]],["title/miscellaneous/enumerations.html",[4691,2.646,4692,5.318]],["body/miscellaneous/enumerations.html",[10,0.367,27,0.006,59,0.005,60,0.005,164,4.287,248,3.028,408,2.678,411,2.728,466,3.421,550,3.421,1296,6.236,1517,4.411,1530,5.224,1704,5.224,1710,4.975,1711,4.975,1737,5.224,1738,6.236,1745,6.236,1746,7.037,2726,5.895,2731,7.037,2863,5.895,2879,7.634,2882,6.395,2883,6.395,2884,6.395,2885,5.895,4691,4.577,4692,6.395,4693,6.395,4694,6.395,4695,7.154,4696,7.154]],["title/miscellaneous/functions.html",[4691,2.646,4697,4.344]],["body/miscellaneous/functions.html",[9,4.625,10,0.282,17,0.347,26,1.201,27,0.006,28,0.706,29,0.762,36,1.037,41,1.463,43,4.307,52,2.624,54,3.614,59,0.004,60,0.004,66,3.07,172,1.352,181,4.058,226,3.51,234,2.017,238,3.51,248,2.208,336,3.07,370,5.945,522,5.981,556,2.214,559,3.383,630,2.452,756,2.054,779,2.624,780,4.425,781,4.425,937,2.624,1059,2.754,1330,3.54,1423,5.027,1432,4.171,1456,3.652,1484,6.462,1500,4.235,1505,4.521,1521,4.904,1573,4.235,1574,6.274,1612,4.521,1615,4.521,1619,4.521,1638,5.579,1643,5.903,1645,5.278,1675,5.027,1882,3.383,2020,4.521,2026,4.521,2234,3.816,2245,6.662,2636,5.622,2842,6.662,2956,7.078,3078,4.904,3090,4.904,3566,4.904,3666,4.904,3821,6.462,4026,4.521,4222,4.521,4374,4.904,4482,6.462,4483,6.462,4489,4.904,4490,4.904,4524,4.904,4525,6.462,4526,4.904,4527,6.462,4608,4.006,4691,3.51,4697,4.006,4698,5.486,4699,5.486,4700,7.227,4701,5.486,4702,5.486,4703,7.081,4704,4.904,4705,7.229,4706,4.904,4707,5.486,4708,4.904,4709,4.521,4710,4.006,4711,7.229,4712,7.229,4713,4.904,4714,5.486,4715,4.904,4716,7.227,4717,5.486,4718,5.486,4719,4.521,4720,4.904,4721,7.229,4722,5.486]],["title/index.html",[10,0.212,3066,3.193,3067,2.877]],["body/index.html",[13,3.259,14,2.676,15,2.591,16,1.622,27,0.005,28,0.551,31,2.3,52,3.016,54,2.82,57,3.016,59,0.004,60,0.004,64,1.394,67,2.873,84,0.836,114,1.925,150,4.405,184,2.873,209,1.027,220,3.466,226,5.058,227,3.429,230,4.869,231,2.769,233,2.442,234,1.651,238,2.873,247,1.288,261,2.513,330,4.035,331,4.697,374,3.806,395,2.676,397,2.99,460,3.123,510,2.319,533,3.123,537,2.591,582,3.639,632,2.513,637,2.769,668,4.496,833,2.2,930,3.466,995,2.99,1055,4.696,1069,2.769,1173,3.123,1182,3.759,1188,5.499,1204,5.584,1212,2.769,1262,3.964,1267,3.123,1279,4.199,1290,3.53,1316,3.123,1317,2.375,1330,3.089,1349,2.442,1380,5.07,1432,2.591,1434,3.336,1451,5.058,1453,3.466,1463,4.035,1517,2.769,1630,4.035,1635,3.466,1681,3.123,1739,2.676,1836,2.442,1887,2.99,2102,2.873,2130,3.701,2234,3.123,2365,4.606,2366,2.769,2439,2.99,2512,4.015,2660,3.279,2661,2.99,2662,4.035,2858,3.279,3070,3.123,3071,3.701,3100,3.123,3111,4.854,3113,5.639,3127,3.123,3139,2.99,3218,4.869,3231,4.015,3239,3.123,3247,7.93,3258,3.701,3268,3.123,3295,3.466,3309,5.639,3311,4.869,3316,3.123,3348,3.466,3416,3.701,3418,3.701,3575,4.664,3583,4.015,3633,6.517,3674,4.606,3751,3.123,3781,2.99,3795,5.198,3814,4.606,3822,3.279,3841,3.466,3842,5.499,3914,3.123,3942,6.008,3944,5.198,3974,4.015,4118,3.466,4141,4.015,4226,3.701,4227,4.869,4267,3.701,4370,3.701,4403,3.466,4444,4.015,4446,3.701,4608,3.279,4723,3.466,4724,7.117,4725,4.606,4726,3.466,4727,3.701,4728,3.466,4729,5.198,4730,4.199,4731,2.99,4732,4.015,4733,4.491,4734,5.639,4735,5.639,4736,4.491,4737,4.491,4738,4.491,4739,3.466,4740,4.015,4741,6.308,4742,4.015,4743,4.015,4744,3.279,4745,7.291,4746,5.07,4747,4.015,4748,4.491,4749,4.015,4750,5.198,4751,4.491,4752,3.701,4753,4.491,4754,4.491,4755,4.491,4756,4.491,4757,4.015,4758,3.466,4759,4.491,4760,4.015,4761,6.308,4762,6.308,4763,8.329,4764,7.907,4765,4.491,4766,4.491,4767,6.308,4768,4.015,4769,4.491,4770,3.701,4771,6.308,4772,4.491,4773,4.015,4774,6.308,4775,3.279,4776,4.015,4777,4.491,4778,4.491,4779,3.466,4780,4.491,4781,4.015,4782,4.491,4783,3.701,4784,4.869,4785,4.491,4786,4.491,4787,4.015,4788,4.491,4789,2.99,4790,3.701]],["title/license.html",[3066,3.193,3067,2.877,4791,3.697]],["body/license.html",[0,0.026,4,0.173,5,0.024,13,3.776,14,0.593,18,0.175,24,0.097,27,0.001,31,0.574,44,0.036,57,1.485,59,0.001,60,0.001,67,1.164,83,0.148,84,0.894,87,0.477,89,0.732,100,0.636,106,0.541,107,2.599,123,0.426,166,2.264,168,1.85,169,1.793,171,1.688,172,0.448,178,1.049,183,2.246,184,3.89,216,0.366,221,3.438,234,2.669,239,6.158,243,0.324,261,1.018,281,0.476,307,0.692,326,0.593,328,1.084,331,0.487,346,0.662,366,0.324,377,0.913,378,1.599,391,0.662,396,0.768,411,0.379,449,0.593,452,1.939,457,0.82,512,0.487,528,0.613,531,2.706,532,0.662,559,2.23,578,0.465,579,0.465,603,0.426,632,1.406,637,1.915,639,0.768,642,2.159,652,0.613,680,0.726,743,0.636,751,2.086,768,1.034,779,1.729,790,0.593,798,0.87,805,0.662,833,0.891,834,0.613,841,0.768,842,0.726,934,1.328,990,2.965,995,1.673,1041,0.476,1057,2.64,1058,1.791,1061,1.018,1070,1.642,1176,1.164,1182,2.42,1208,0.82,1212,2.23,1239,3.256,1242,1.497,1243,3.757,1250,2.273,1272,0.82,1279,1.673,1290,1.406,1291,0.662,1318,5.336,1319,2.771,1330,2.764,1334,2.148,1349,0.541,1377,1.915,1378,3.071,1380,3.34,1431,1.673,1451,1.164,1470,0.662,1506,0.662,1526,3.706,1600,1.211,1669,0.593,1672,0.692,1682,2.267,1684,1.328,1722,3.363,1739,1.084,1744,1.211,1779,2.966,1863,0.662,1899,0.82,1902,1.673,1950,0.82,1953,3.105,1967,4.287,1996,1.738,2017,0.692,2021,0.662,2023,0.726,2095,0.726,2097,0.726,2102,0.636,2125,3.252,2127,0.82,2128,2.825,2131,1.939,2144,2.159,2160,3.946,2224,0.82,2234,4.084,2319,0.613,2365,1.328,2366,2.505,2390,4.325,2439,0.662,2447,0.726,2487,0.82,2504,1.835,2620,0.889,2636,1.265,2641,0.889,2856,1.328,2857,3.506,2889,0.768,2932,2.071,2947,1.626,2964,2.159,3049,0.889,3072,0.889,3076,1.747,3077,2.267,3079,1.626,3085,1.499,3088,2.246,3089,1.499,3100,3.34,3111,2.965,3123,2.159,3185,0.889,3197,0.82,3202,0.726,3206,3.232,3218,0.768,3245,0.889,3268,2.159,3270,0.82,3311,6.706,3313,6.843,3315,5.449,3316,1.747,3329,0.889,3344,1.499,3353,1.499,3365,0.82,3369,0.768,3377,1.499,3379,1.626,3389,2.775,3394,1.499,3402,0.889,3408,0.692,3414,2.246,3416,0.82,3433,2.558,3445,0.82,3449,1.404,3455,1.626,3459,1.499,3461,0.726,3481,0.82,3494,1.626,3506,0.889,3528,0.889,3542,1.499,3571,0.889,3575,2.599,3584,0.889,3587,0.889,3601,0.889,3614,2.267,3624,2.791,3643,1.626,3645,0.82,3655,1.499,3672,0.726,3680,0.768,3682,0.889,3700,0.768,3701,2.791,3756,0.889,3774,0.768,3781,1.211,3797,1.626,3801,1.499,3806,0.82,3822,0.726,3828,3.438,3839,0.82,3841,6.235,3842,3.75,3843,1.939,3846,6.832,3863,1.499,3898,0.889,3940,0.82,3954,0.82,3968,0.889,3970,1.499,3971,1.499,4001,0.889,4024,0.889,4026,0.82,4061,0.82,4088,0.82,4112,1.404,4205,1.499,4227,2.396,4233,1.499,4267,1.499,4271,1.939,4303,1.626,4335,1.939,4340,0.768,4343,3.347,4361,4.65,4364,0.889,4371,0.768,4377,6.041,4378,1.626,4380,1.626,4389,0.889,4426,0.889,4432,1.626,4449,4.356,4459,2.246,4496,0.889,4608,0.726,4706,2.775,4708,0.889,4710,2.267,4713,0.889,4715,0.889,4716,0.889,4724,0.82,4727,0.82,4731,3.589,4744,5.13,4746,0.692,4747,2.246,4752,3.67,4773,0.889,4775,1.835,4784,1.939,4789,0.662,4791,8.665,4792,6.758,4793,6.608,4794,0.995,4795,2.513,4796,7.949,4797,5.445,4798,5.832,4799,3.616,4800,0.995,4801,0.995,4802,1.819,4803,3.616,4804,2.513,4805,2.513,4806,5.872,4807,0.995,4808,0.995,4809,1.626,4810,3.616,4811,3.67,4812,1.819,4813,1.819,4814,5.606,4815,4.802,4816,0.995,4817,0.995,4818,4.062,4819,1.626,4820,0.889,4821,0.889,4822,5.045,4823,8.652,4824,2.513,4825,2.246,4826,0.995,4827,0.995,4828,3.105,4829,5.113,4830,0.995,4831,5.113,4832,0.995,4833,3.616,4834,0.768,4835,0.82,4836,5.763,4837,0.889,4838,0.889,4839,5.391,4840,5.643,4841,3.616,4842,5.872,4843,0.995,4844,1.819,4845,0.995,4846,0.995,4847,2.246,4848,0.995,4849,0.995,4850,0.995,4851,0.995,4852,0.995,4853,0.995,4854,3.105,4855,2.513,4856,0.995,4857,0.995,4858,5.789,4859,1.939,4860,0.995,4861,2.071,4862,2.513,4863,0.995,4864,2.246,4865,0.768,4866,1.819,4867,1.819,4868,2.513,4869,0.995,4870,5.01,4871,3.616,4872,3.616,4873,4.062,4874,2.513,4875,1.819,4876,0.995,4877,0.995,4878,0.995,4879,2.513,4880,0.995,4881,0.995,4882,1.819,4883,0.995,4884,1.819,4885,0.995,4886,0.995,4887,3.105,4888,0.889,4889,1.819,4890,8.614,4891,2.513,4892,5.113,4893,2.775,4894,1.404,4895,0.995,4896,1.819,4897,2.513,4898,5.113,4899,5.391,4900,0.995,4901,3.105,4902,1.819,4903,3.105,4904,2.775,4905,0.995,4906,2.513,4907,7.726,4908,1.626,4909,0.995,4910,4.802,4911,0.995,4912,2.246,4913,2.825,4914,0.995,4915,6.447,4916,2.246,4917,1.819,4918,5.643,4919,4.062,4920,0.995,4921,1.819,4922,4.454,4923,0.995,4924,6.08,4925,1.819,4926,0.995,4927,0.82,4928,0.995,4929,2.513,4930,0.995,4931,0.995,4932,0.995,4933,0.82,4934,2.513,4935,2.775,4936,0.995,4937,0.995,4938,0.995,4939,1.626,4940,5.391,4941,0.889,4942,0.82,4943,2.246,4944,2.513,4945,2.513,4946,0.995,4947,3.232,4948,0.889,4949,1.265,4950,2.246,4951,0.995,4952,0.995,4953,0.995,4954,1.626,4955,0.995,4956,6.976,4957,2.246,4958,0.726,4959,1.819,4960,1.819,4961,2.98,4962,0.995,4963,0.995,4964,0.995,4965,1.819,4966,0.995,4967,1.499,4968,0.995,4969,2.98,4970,0.995,4971,0.82,4972,4.454,4973,2.558,4974,0.995,4975,3.232,4976,0.995,4977,1.819,4978,0.995,4979,0.995,4980,0.995,4981,0.995,4982,0.995,4983,2.513,4984,0.995,4985,1.819,4986,1.819,4987,1.819,4988,0.995,4989,6.08,4990,1.626,4991,0.995,4992,0.995,4993,0.889,4994,0.995,4995,0.995,4996,0.995,4997,2.513,4998,0.889,4999,0.995,5000,5.763,5001,0.768,5002,0.995,5003,0.995,5004,3.616,5005,3.631,5006,0.995,5007,0.995,5008,2.513,5009,0.995,5010,0.995,5011,3.105,5012,0.995,5013,0.995,5014,0.995,5015,0.995,5016,0.995,5017,0.995,5018,1.819,5019,0.995,5020,0.995,5021,0.995,5022,1.819,5023,0.995,5024,0.995,5025,0.995,5026,0.995,5027,0.995,5028,1.819,5029,1.328,5030,4.57,5031,0.995,5032,4.062,5033,0.995,5034,0.995,5035,2.513,5036,3.105,5037,3.105,5038,3.105,5039,0.995,5040,3.232,5041,3.232,5042,0.995,5043,2.513,5044,0.995,5045,1.819,5046,0.995,5047,1.626,5048,3.616,5049,1.819,5050,3.105,5051,3.105,5052,0.995,5053,2.513,5054,3.232,5055,0.995,5056,0.995,5057,3.67,5058,1.819,5059,0.726,5060,0.995,5061,0.889,5062,2.513,5063,0.995,5064,0.995,5065,2.246,5066,0.995,5067,0.995,5068,0.995,5069,0.995,5070,0.995,5071,2.513,5072,0.995,5073,0.889,5074,2.246,5075,1.819,5076,4.062,5077,6.488,5078,2.513,5079,1.819,5080,1.819,5081,1.819,5082,3.105,5083,0.889,5084,0.995,5085,0.995,5086,0.995,5087,3.631,5088,1.819,5089,0.995,5090,0.995,5091,0.995,5092,0.995,5093,1.819,5094,0.995,5095,1.819,5096,0.995,5097,0.995,5098,3.506,5099,0.995,5100,5.045,5101,0.995,5102,0.995,5103,0.995,5104,1.819,5105,0.995,5106,2.64,5107,3.105,5108,1.819,5109,0.889,5110,0.995,5111,0.995,5112,0.995,5113,0.995,5114,1.819,5115,0.995,5116,0.995,5117,0.82,5118,2.775,5119,0.995,5120,1.819,5121,0.995,5122,0.995,5123,2.246,5124,0.995,5125,0.995,5126,0.995,5127,0.995,5128,3.105,5129,0.995,5130,0.995,5131,0.889,5132,0.889,5133,0.889,5134,0.995,5135,0.995,5136,0.995,5137,3.616,5138,0.995,5139,0.995,5140,3.105,5141,0.995,5142,0.995,5143,0.995,5144,0.995,5145,0.995,5146,0.995,5147,3.105,5148,0.995,5149,0.995,5150,2.513,5151,0.995,5152,0.82,5153,2.513,5154,0.995,5155,0.995,5156,0.995,5157,0.995,5158,0.995,5159,0.995,5160,0.995,5161,0.889,5162,0.995,5163,0.726,5164,1.819,5165,0.889,5166,0.995,5167,3.105,5168,0.995,5169,0.995,5170,1.819,5171,2.513,5172,2.513,5173,0.82,5174,1.819,5175,0.995,5176,4.454,5177,0.995,5178,0.995,5179,1.819,5180,0.995,5181,0.995,5182,0.995,5183,0.995,5184,3.105,5185,2.513,5186,0.995,5187,3.616,5188,0.995,5189,0.995,5190,0.995,5191,0.995,5192,0.889,5193,0.995,5194,1.819,5195,1.819,5196,1.626,5197,2.513,5198,0.889,5199,0.995,5200,2.513,5201,0.995,5202,1.499,5203,0.995,5204,1.819,5205,0.995,5206,0.995,5207,1.819,5208,7.463,5209,2.513,5210,0.995,5211,3.616,5212,5.391,5213,2.513,5214,0.995,5215,0.995,5216,0.995,5217,3.105,5218,0.995,5219,2.513,5220,0.995,5221,0.995,5222,0.995,5223,0.995,5224,0.995,5225,0.995,5226,0.995,5227,3.105,5228,1.819,5229,0.995,5230,0.995,5231,2.513,5232,0.995,5233,1.819,5234,2.513,5235,1.819,5236,0.995,5237,0.995,5238,0.995,5239,1.819,5240,2.513,5241,0.889,5242,0.995,5243,0.995,5244,1.819,5245,0.995,5246,0.889,5247,0.995,5248,0.995,5249,0.995,5250,2.513,5251,1.819,5252,0.889,5253,0.995,5254,0.995,5255,3.105,5256,0.995,5257,2.513,5258,0.995,5259,0.995,5260,1.819,5261,0.995,5262,0.995,5263,0.995,5264,2.513,5265,1.819,5266,1.819,5267,0.995,5268,1.819,5269,4.454,5270,1.626,5271,2.513,5272,3.105,5273,0.889,5274,0.995,5275,1.819,5276,0.995,5277,2.513,5278,0.995,5279,0.995,5280,0.995,5281,0.995,5282,0.995,5283,0.995,5284,2.513,5285,1.819,5286,0.995,5287,0.889,5288,0.995,5289,0.995,5290,1.819,5291,1.819,5292,0.995,5293,1.626,5294,0.995,5295,0.995,5296,0.82,5297,0.995,5298,2.513,5299,0.995,5300,0.995,5301,0.995,5302,0.995,5303,1.819,5304,2.513,5305,0.995,5306,0.995,5307,0.995,5308,0.995,5309,1.819,5310,0.995,5311,0.995,5312,0.995,5313,0.995,5314,0.995,5315,0.995,5316,0.995,5317,0.995,5318,0.768,5319,0.995,5320,0.995,5321,0.995,5322,3.105,5323,0.995,5324,0.995,5325,1.819,5326,0.995,5327,0.995,5328,0.995,5329,0.995,5330,0.995,5331,0.995,5332,0.995,5333,0.82,5334,0.995,5335,0.995,5336,0.995,5337,0.889,5338,1.819,5339,0.995,5340,0.995,5341,0.995,5342,0.995,5343,0.889,5344,1.819,5345,0.995,5346,0.995,5347,0.889,5348,0.889,5349,0.692,5350,0.995,5351,1.819,5352,1.819,5353,0.995,5354,0.995,5355,0.995,5356,0.995,5357,2.513,5358,1.499,5359,0.995,5360,1.819,5361,1.819,5362,0.995,5363,0.82,5364,0.889,5365,0.995,5366,0.889,5367,0.995,5368,0.995,5369,1.819,5370,0.995,5371,2.513,5372,0.995,5373,0.995,5374,0.995,5375,0.995,5376,0.995,5377,0.995,5378,0.995,5379,0.995,5380,0.995,5381,0.889,5382,0.995,5383,0.82,5384,0.995,5385,0.995,5386,0.995,5387,0.995,5388,0.995,5389,0.995,5390,0.995,5391,0.995,5392,0.995,5393,0.995,5394,0.995,5395,0.768,5396,0.889,5397,1.819,5398,1.626,5399,0.995,5400,0.995,5401,0.995,5402,0.995,5403,0.995,5404,0.995,5405,0.889,5406,0.768,5407,0.995,5408,0.82,5409,0.995,5410,0.995,5411,0.995,5412,0.995,5413,0.995]],["title/modules.html",[113,2.621]],["body/modules.html",[27,0.005,59,0.005,60,0.005,112,4.765,113,2.535,118,4.538,138,4.538,143,4.538,355,4.765,381,4.765,384,4.765,385,4.765,386,4.175,387,4.765,1100,4.765,1239,5.434,1558,4.765,1902,6.771,1981,4.765,2038,4.538,2077,4.765,2104,5.037,2303,4.765,2644,4.765,2655,4.765,2658,4.765,5414,10.17,5415,10.17,5416,9.183,5417,9.419]],["title/overview.html",[3166,4.925]],["body/overview.html",[2,0.864,27,0.006,59,0.003,60,0.003,89,1.238,112,6.635,113,1.651,114,2.6,115,3.8,116,3.8,117,3.8,118,6.7,119,5.166,120,4.92,121,3.046,122,1.942,123,1.822,138,6.411,139,3.8,140,3.8,141,3.8,142,3.8,143,5.9,144,5.384,145,4.71,153,1.483,299,4.71,355,6.194,356,3.8,357,3.8,358,3.8,359,5.505,381,6.811,382,3.8,383,3.8,384,5.166,385,5.166,386,5.586,387,5.166,591,4.71,666,2.033,685,4.92,1037,4.363,1100,6.194,1101,3.8,1102,3.8,1103,3.8,1104,5.712,1169,5.813,1343,5.038,1389,5.586,1427,3.8,1428,3.8,1429,3.8,1519,3.281,1558,6.194,1559,3.8,1560,3.8,1561,3.8,1926,6.073,1981,5.957,1982,3.8,1983,3.8,1990,4.92,2033,3.8,2034,3.8,2035,3.8,2038,4.92,2077,7.035,2078,3.8,2079,3.8,2205,5.586,2303,6.879,2304,3.8,2306,3.8,2307,3.8,2308,4.71,2569,4.92,2586,4.92,2644,6.194,2645,3.8,2655,7.075,2656,3.8,2657,3.8,2658,6.938,2725,4.92,2749,4.92,2785,3.8,2786,3.8,2787,4.92,3010,4.71,3028,3.8,3029,3.8,3030,3.8,3031,4.71,3166,3.104,3369,3.281,4479,3.8,5418,4.251,5419,4.251]],["title/todo.html",[232,1.669,3066,3.193,3067,2.877]],["body/todo.html",[0,0.112,5,0.057,11,0.562,13,1.92,17,0.262,21,0.997,27,0.005,28,0.534,36,0.518,52,3.403,53,2.335,54,2.732,56,3.136,57,3.917,59,0.003,60,0.003,68,2.335,89,1.251,111,2.175,123,2.619,126,1.879,147,2.103,150,3.232,155,1.948,169,1.699,171,2.335,172,2.205,174,1.158,181,2.156,186,1.251,209,1.398,223,5.863,226,3.91,227,4.867,232,1.733,233,3.868,234,2.85,247,2.223,261,5.231,268,2.993,308,4.069,313,2.559,325,4.069,378,2.212,389,4.069,395,3.642,399,2.478,400,3.136,403,3.315,458,5.195,510,1.579,513,2.335,577,2.993,582,2.478,630,2.732,632,3.42,664,1.84,668,2.648,770,2.648,798,2.054,833,3.485,834,2.648,837,2.748,840,3.769,1024,2.648,1041,3.403,1043,2.156,1055,2.335,1058,2.478,1060,2.404,1061,2.404,1070,4.331,1117,4.552,1176,2.748,1204,4.387,1243,2.748,1250,2.404,1270,2.559,1279,4.069,1317,4.631,1330,2.103,1343,2.478,1349,3.323,1364,2.648,1379,3.769,1432,4.105,1434,3.232,1464,5.036,1497,3.539,1554,3.315,1572,3.136,1574,3.136,1597,2.987,1599,2.859,1629,5.453,1630,3.91,1666,6.749,1669,2.559,1672,2.987,1759,4.069,1884,2.987,1900,3.539,1902,2.859,1932,3.315,1934,2.859,1950,5.036,1952,3.839,1953,2.271,2017,2.987,2029,2.748,2113,6.36,2125,3.136,2139,2.987,2144,2.987,2318,2.859,2319,2.648,2366,2.648,2390,2.559,2398,3.315,2594,2.648,2660,3.136,2662,3.91,2677,4.948,2790,2.859,2856,3.136,2857,3.136,3077,3.136,3093,6.749,3095,3.839,3121,3.136,3139,2.859,3211,3.539,3224,3.539,3233,5.036,3273,2.987,3295,3.315,3301,3.839,3345,2.987,3366,3.539,3394,3.539,3404,3.539,3408,4.948,3409,3.839,3410,3.839,3433,3.539,3434,3.315,3465,3.839,3680,3.315,3751,4.25,3823,3.839,3827,3.839,3914,2.987,4061,3.539,4072,3.539,4074,3.539,4118,3.315,4371,3.315,4403,3.315,4464,3.539,4633,3.839,4661,3.839,4770,3.539,4779,3.315,4789,2.859,4790,3.539,4834,3.315,4958,3.136,4993,3.839,5117,3.539,5395,4.717,5420,3.539,5421,4.295,5422,3.839,5423,3.839,5424,3.315,5425,3.539,5426,4.295,5427,4.295,5428,3.839,5429,4.295,5430,5.66,5431,4.295,5432,4.295,5433,4.295,5434,4.295,5435,4.295,5436,4.295,5437,4.295,5438,3.539,5439,4.295,5440,4.295,5441,4.295,5442,4.295,5443,4.295,5444,4.295,5445,4.295,5446,4.295,5447,4.295,5448,4.295,5449,4.295,5450,4.295,5451,4.295,5452,4.295,5453,3.839,5454,4.295,5455,4.295,5456,4.295,5457,4.295,5458,4.295,5459,3.839,5460,4.295,5461,4.295,5462,3.839,5463,3.839,5464,3.839,5465,4.295,5466,3.839,5467,4.295,5468,4.295,5469,4.295,5470,3.539,5471,4.295,5472,6.36,5473,4.295,5474,4.295,5475,4.295,5476,4.295,5477,4.295,5478,4.295,5479,3.539,5480,4.295,5481,6.112,5482,3.839,5483,4.295]],["title/miscellaneous/typealiases.html",[4691,2.646,5484,5.949]],["body/miscellaneous/typealiases.html",[10,0.288,17,0.42,27,0.006,31,1.772,34,5.105,36,0.677,59,0.004,60,0.004,87,0.601,111,1.949,162,2.278,169,1.561,172,1.383,209,1.284,271,5.97,408,2.102,411,2.141,505,5.042,510,2.699,531,3.684,550,2.685,552,4.526,619,5.105,625,5.105,702,3.592,711,5.105,719,4.373,722,4.886,734,5.105,754,5.105,1041,3.51,1117,3.592,1441,4.334,1442,5.97,1446,6.048,1455,6.048,1704,4.1,1706,5.602,1712,3.738,1713,5.359,1714,4.886,1718,4.1,1723,3.51,1727,3.738,1730,5.359,1737,4.1,1738,5.359,1741,6.048,1778,4.334,1826,4.334,1831,6.048,1953,2.97,2039,4.1,2053,5.665,2054,6.048,2096,4.1,2097,4.1,2105,4.334,2106,5.105,2109,6.561,2144,5.105,2371,4.334,2383,6.561,2422,4.627,2456,4.627,2457,4.627,2519,4.1,2538,4.627,2617,4.627,3560,4.627,3561,4.627,4492,4.627,4493,6.048,4691,3.592,4693,6.561,4694,5.02,5109,5.02,5485,5.615,5486,7.34,5487,7.34,5488,5.615,5489,8.043,5490,7.34,5491,5.615,5492,7.34,5493,7.34,5494,5.615,5495,5.615,5496,5.02,5497,5.615,5498,5.02,5499,5.02,5500,5.615,5501,7.34,5502,5.615,5503,7.34,5504,5.615,5505,5.02,5506,5.615,5507,5.02,5508,5.615,5509,5.615,5510,5.615,5511,3.905,5512,5.615,5513,5.615,5514,5.615,5515,5.615]],["title/miscellaneous/variables.html",[3133,4.344,4691,2.646]],["body/miscellaneous/variables.html",[1,1.974,5,0.023,9,1.897,10,0.088,11,0.226,13,1.326,16,1.41,17,0.368,18,0.302,27,0.006,28,0.563,31,1.231,36,0.894,41,0.294,43,2.325,48,0.085,52,1.418,53,0.937,54,4.183,55,1.259,59,0.002,60,0.002,64,1.439,65,1.974,66,2.593,68,0.937,76,1.713,83,1.295,84,1.646,111,0.458,125,1.271,133,2.714,150,2.064,155,1.43,166,1.639,168,1.027,169,2.318,173,1.708,174,1.25,181,0.866,185,1.421,191,1.545,201,1.418,208,0.755,210,1.221,211,0.465,216,0.634,227,1.612,231,1.063,232,0.696,234,0.634,247,2.76,248,2.923,252,0.612,281,1.418,308,1.148,313,3.111,319,3.34,326,1.767,328,1.027,331,0.845,332,3.216,334,1.259,363,2.122,374,1.355,378,0.888,399,0.995,400,1.259,408,2.286,409,1.331,410,2.252,411,2.827,412,1.027,413,1.259,414,1.199,419,2.395,427,0.806,454,1.199,459,1.259,463,1.259,464,1.421,484,1.027,508,1.027,510,0.634,537,0.995,538,1.103,550,0.825,556,1.575,576,1.418,577,1.453,578,1.386,579,1.386,580,1.418,581,0.995,588,1.063,589,1.063,614,1.355,628,1.421,629,2.289,632,1.66,650,4.165,655,0.888,662,2.849,664,0.739,666,0.825,669,1.568,681,1.897,696,3.399,697,2.01,702,1.103,704,0.965,719,1.027,724,3.111,731,1.974,732,1.897,733,1.974,751,1.711,761,2.761,779,3.083,780,2.937,781,2.689,798,0.825,812,1.148,828,1.148,833,0.845,834,1.063,843,1.66,846,1.063,934,1.259,937,0.825,939,1.331,951,0.912,975,1.331,985,2.289,986,1.421,987,2.289,988,2.444,989,4.303,990,1.974,991,3.819,992,6.11,993,5.032,994,1.421,995,1.974,996,1.421,997,1.421,998,1.421,999,1.421,1000,1.421,1001,1.421,1002,1.421,1003,1.421,1024,1.063,1041,1.866,1043,0.866,1054,1.103,1055,0.937,1058,0.995,1059,1.489,1061,0.965,1070,0.912,1183,1.259,1188,1.199,1204,1.063,1243,1.103,1255,1.331,1262,2.122,1290,0.965,1311,1.331,1312,1.421,1313,3.216,1316,1.199,1317,1.568,1320,1.331,1324,2.444,1325,2.444,1326,1.541,1327,1.541,1330,1.453,1331,2.444,1332,2.063,1333,1.331,1334,2.064,1335,1.259,1336,1.259,1343,2.674,1346,1.331,1349,1.612,1364,2.858,1379,1.063,1423,2.063,1432,0.995,1433,0.937,1434,1.568,1462,1.259,1469,1.331,1470,1.148,1481,1.331,1482,1.331,1483,2.444,1496,1.199,1527,1.148,1537,1.541,1554,1.331,1564,1.331,1565,1.421,1569,1.421,1571,3.216,1572,1.259,1573,1.331,1574,4.708,1576,1.331,1577,2.444,1578,2.598,1591,2.444,1592,1.541,1593,2.444,1594,4.402,1595,1.421,1596,1.259,1597,3.967,1598,2.444,1599,2.598,1600,1.148,1601,2.444,1602,1.541,1603,2.651,1604,1.541,1605,1.421,1606,1.541,1607,1.541,1608,1.541,1609,1.541,1610,1.541,1612,1.421,1615,1.421,1619,1.421,1625,1.259,1626,2.651,1627,1.259,1628,1.541,1629,1.148,1630,2.497,1631,2.651,1632,1.421,1633,2.651,1634,1.541,1635,2.289,1636,1.541,1637,1.541,1638,1.331,1639,2.444,1640,1.541,1641,1.541,1642,1.331,1643,1.259,1644,1.331,1645,1.259,1646,1.541,1647,1.541,1648,1.541,1649,1.541,1650,4.668,1651,2.444,1652,4.668,1653,1.541,1654,1.421,1655,1.541,1668,2.444,1675,1.199,1706,1.027,1719,1.897,1720,3.145,1723,2.216,1725,1.199,1728,1.897,1729,1.897,1754,0.965,1779,1.259,1793,0.825,1799,1.063,1836,0.937,1868,2.714,1893,1.421,1894,1.541,1895,1.331,1896,1.541,1912,1.421,1918,1.541,1919,1.541,1932,1.331,1934,3.476,1947,1.829,1957,1.421,1958,2.444,1971,1.541,1996,2.184,2021,1.148,2029,1.897,2039,1.259,2044,1.331,2045,2.444,2050,1.259,2053,1.331,2055,2.289,2056,1.421,2057,1.421,2058,1.421,2059,1.331,2060,1.421,2082,2.289,2086,2.849,2096,2.166,2101,1.331,2102,1.897,2105,1.331,2106,2.714,2107,1.421,2108,2.444,2114,1.541,2116,4.143,2118,2.444,2119,1.541,2120,2.651,2121,1.541,2122,1.541,2123,1.541,2124,1.421,2125,1.259,2126,1.259,2127,1.421,2128,1.199,2129,1.541,2130,1.421,2131,1.331,2132,1.541,2133,1.541,2134,1.541,2135,1.541,2136,1.541,2137,1.541,2139,2.063,2159,1.148,2231,1.421,2232,2.444,2318,1.148,2319,2.406,2371,1.331,2385,2.444,2390,3.111,2409,2.289,2504,1.259,2551,1.331,2561,1.541,2563,1.541,2639,2.289,2644,1.259,2661,1.148,2662,1.897,2666,4.247,2951,1.421,2954,2.651,2956,3.012,2957,1.541,2958,1.541,2959,1.541,2960,1.541,2963,1.259,2971,2.289,3051,1.541,3111,2.598,3121,3.384,3127,1.199,3133,1.259,3193,1.541,3239,3.967,3295,2.289,3310,1.541,3344,1.421,3345,1.199,3346,1.541,3347,2.651,3348,1.331,3388,2.651,3408,1.199,3500,1.541,3701,1.331,3781,1.148,3838,1.199,3940,1.421,3946,1.421,3972,2.714,4002,2.651,4135,2.651,4139,1.541,4226,1.421,4470,1.421,4475,1.541,4484,1.541,4485,4.143,4486,2.651,4487,3.488,4492,1.421,4493,3.819,4499,1.541,4500,4.143,4501,2.651,4506,3.216,4517,1.541,4518,2.651,4521,1.541,4522,1.541,4523,2.651,4528,1.541,4533,1.541,4534,2.651,4535,1.541,4536,2.651,4537,1.541,4538,2.651,4542,1.541,4543,2.651,4544,3.819,4589,1.541,4691,1.103,4697,2.166,4700,5.458,4703,1.421,4723,2.289,4750,1.421,4781,1.541,4927,1.421,4958,1.259,5425,1.421,5438,3.216,5462,2.651,5472,1.541,5489,2.651,5496,1.541,5498,2.651,5499,3.488,5507,1.541,5516,1.724,5517,1.724,5518,2.966,5519,1.724,5520,1.724,5521,1.724,5522,3.902,5523,1.724,5524,1.724,5525,1.724,5526,2.966,5527,4.634,5528,3.902,5529,1.724,5530,1.724,5531,1.724,5532,2.966,5533,1.724,5534,1.724,5535,1.724,5536,1.724,5537,1.724,5538,2.966,5539,1.724,5540,1.724,5541,1.724,5542,1.724,5543,1.724,5544,1.724,5545,1.724,5546,1.541,5547,1.724,5548,1.541,5549,1.724,5550,1.724,5551,1.724,5552,1.724,5553,1.724,5554,2.444,5555,1.541,5556,1.541,5557,1.541,5558,1.724,5559,1.724,5560,1.724,5561,2.651,5562,1.724,5563,1.724,5564,1.724,5565,1.724,5566,1.724,5567,1.541,5568,1.724,5569,1.724,5570,1.724,5571,1.724,5572,1.724,5573,1.724,5574,1.724,5575,1.724,5576,1.724,5577,1.724,5578,1.724,5579,1.724,5580,1.724,5581,1.724,5582,1.724,5583,1.724,5584,1.724,5585,1.724,5586,1.724,5587,1.724,5588,1.724,5589,1.724,5590,1.724,5591,1.724,5592,1.724,5593,1.724,5594,1.724,5595,1.724,5596,1.724,5597,1.724,5598,3.902,5599,2.966,5600,1.541,5601,1.724,5602,2.966,5603,1.724,5604,2.966,5605,1.724,5606,1.724,5607,1.724,5608,1.724,5609,1.724,5610,1.724,5611,1.724,5612,1.724,5613,1.724,5614,1.724]],["title/additional-documentation/nestjs-application.html",[331,1.74,374,1.623,1378,1.74,2506,1.932]],["body/additional-documentation/nestjs-application.html",[8,0.983,13,3.613,14,3.268,27,0.005,28,0.323,57,3.456,59,0.003,60,0.003,89,1.078,111,1.457,113,1.437,122,1.691,150,2.9,168,3.268,171,2.012,184,2.367,227,5.083,233,2.982,234,3.159,247,1.061,261,2.071,308,3.651,327,2.573,328,2.205,329,2.367,331,4.437,363,4.196,374,4.01,377,1.858,378,2.824,392,2.856,452,2.856,454,2.573,512,1.812,518,2.69,576,3.456,580,2.623,642,3.814,647,2.282,674,2.205,768,2.69,833,2.686,843,2.071,951,3.822,1048,3.814,1050,3.814,1055,2.012,1058,2.135,1061,3.07,1065,4.233,1069,4.457,1070,1.957,1117,2.367,1135,3.509,1173,2.573,1182,2.205,1235,3.049,1239,2.135,1243,4.181,1270,2.205,1290,2.071,1291,3.651,1317,4.275,1330,3.54,1336,2.702,1378,1.812,1379,2.282,1380,3.814,1432,3.164,1434,1.957,1451,2.367,1470,2.463,1506,2.463,1553,2.702,1597,5.026,1625,2.702,1629,4.811,1635,2.856,1681,3.814,1758,2.856,1880,3.049,1887,3.651,1953,1.957,2019,2.856,2021,2.463,2047,4.811,2065,3.049,2102,3.509,2126,2.702,2141,3.308,2318,5.138,2319,4.457,2324,2.573,2398,2.856,2506,2.982,2661,2.463,2662,2.367,2679,3.308,2680,4.52,2964,3.814,3067,3.814,3070,2.573,3093,3.049,3100,3.814,3111,6.356,3121,6.274,3122,4.52,3147,2.856,3166,2.702,3180,4.233,3197,3.049,3306,3.049,3313,3.049,3316,2.573,3338,3.308,3345,5.026,3348,4.233,3365,5.385,3366,4.52,3407,3.308,3411,4.937,3548,3.049,3614,4.005,3750,3.049,3751,6.444,3781,5.138,3798,4.52,3914,2.573,3942,3.049,3946,4.52,3972,2.573,4077,5.842,4140,3.308,4173,4.233,4222,3.049,4506,3.049,4544,3.049,4670,3.308,4679,3.049,4723,2.856,4724,3.049,4725,2.702,4726,2.856,4728,2.856,4731,2.463,4732,3.308,4739,5.044,4750,3.049,4770,3.049,4789,4.811,4797,3.049,4927,3.049,4948,4.903,4949,2.573,4957,3.308,4958,4.772,5000,3.308,5029,2.702,5098,2.702,5106,4.005,5163,2.702,5202,3.049,5246,3.308,5252,3.308,5363,4.52,5383,3.049,5406,2.856,5416,3.308,5459,4.903,5463,5.842,5464,5.842,5511,3.814,5554,4.52,5555,4.903,5556,3.308,5557,3.308,5615,3.7,5616,3.7,5617,3.7,5618,3.7,5619,3.7,5620,3.7,5621,3.7,5622,3.7,5623,3.7,5624,5.485,5625,3.7,5626,3.7,5627,3.7,5628,5.485,5629,7.227,5630,3.7,5631,3.7,5632,3.7,5633,3.049,5634,3.7,5635,7.227,5636,3.7,5637,3.308,5638,3.7,5639,3.7,5640,3.7,5641,8.083,5642,3.7,5643,3.7,5644,3.7,5645,3.7,5646,5.485,5647,3.7,5648,3.7,5649,3.7,5650,3.7,5651,5.485,5652,3.7,5653,3.7,5654,4.903,5655,5.485,5656,3.7,5657,3.7,5658,3.7,5659,3.7,5660,5.485,5661,3.7,5662,3.7,5663,2.856,5664,3.7,5665,3.7,5666,3.7,5667,3.7,5668,3.7,5669,3.7,5670,3.308,5671,3.7,5672,3.7,5673,3.7,5674,3.7,5675,3.7,5676,6.535,5677,4.903,5678,3.7,5679,3.7,5680,3.7,5681,3.7,5682,3.7,5683,3.7,5684,5.485,5685,3.7,5686,5.485,5687,4.52,5688,3.308,5689,3.7,5690,6.535,5691,5.485,5692,3.7,5693,3.7,5694,3.7,5695,3.308,5696,3.7,5697,3.308,5698,3.7,5699,3.7,5700,3.7,5701,3.7,5702,3.7,5703,3.7,5704,3.7,5705,3.7]],["title/additional-documentation/nestjs-application/software-architecture.html",[1378,1.74,2506,1.932,4730,2.365,4798,2.742]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.666,4,0.047,5,0.044,13,3.396,14,1.951,15,0.793,24,0.489,26,0.486,27,0.003,28,0.212,31,0.434,50,0.879,52,3.633,53,2.46,54,2.942,56,1.004,57,1.566,59,0.001,60,0.001,65,1.62,66,1.362,68,2.152,83,0.204,84,0.609,87,0.679,89,0.709,114,1.939,123,1.043,126,0.602,147,0.673,166,1.022,168,1.951,169,2.035,171,4.578,172,0.807,175,0.956,181,0.69,184,2.532,194,1.133,201,0.657,209,1.237,226,5.297,227,0.747,229,0.769,232,0.555,233,1.323,234,2.879,238,0.879,239,2.095,247,0.394,248,1,261,0.769,324,0.793,326,5.591,327,0.956,328,2.358,329,4.471,331,3.78,346,0.915,363,0.747,377,4.03,378,2.038,391,3.836,392,1.878,395,3.224,396,1.061,397,4.221,399,0.793,408,0.515,412,1.45,459,1.004,466,1.566,511,1.112,512,1.192,531,1.222,537,1.889,550,0.657,554,0.819,556,0.555,557,0.708,579,0.642,582,1.404,603,0.589,614,1.808,631,1.061,637,1.501,641,0.879,647,3.085,652,1.501,663,0.793,714,1.951,743,0.879,746,0.915,768,3.623,790,0.819,798,0.657,834,0.848,835,0.879,836,1.777,837,3.687,840,0.848,843,2.799,1043,3.047,1055,1.323,1058,1.404,1061,1.362,1068,1.133,1069,0.848,1117,2.895,1135,0.879,1182,2.696,1187,2.527,1212,4.514,1239,1.404,1250,0.769,1262,2.152,1267,2.752,1270,2.358,1290,0.769,1317,1.731,1318,0.915,1319,4.632,1334,3.21,1341,4.894,1342,3.836,1349,4.196,1364,0.848,1377,3.336,1378,1.604,1380,4.41,1432,1.889,1433,2.941,1434,4.605,1436,1.692,1444,2.18,1456,2.18,1496,0.956,1500,3.055,1506,0.915,1517,0.848,1527,0.915,1530,1.004,1531,0.879,1553,1.004,1599,4.381,1600,0.915,1605,1.133,1627,1.004,1630,0.879,1675,0.956,1710,0.956,1720,1.253,1722,3.224,1723,0.657,1725,0.956,1739,0.819,1740,0.769,1743,0.915,1752,0.879,1759,2.18,1765,4.122,1779,2.391,1791,0.956,1808,1.557,1836,2.152,1881,1.061,1882,2.441,1884,0.956,1885,5.002,1887,0.915,1895,1.061,1899,1.133,1901,3.652,1909,1.004,1953,3.047,1954,1.229,1966,1.133,1967,3.304,1996,1.362,2017,2.277,2021,1.62,2023,2.89,2027,1.777,2059,1.061,2076,1.061,2124,1.133,2125,3.304,2128,2.277,2145,1.004,2159,1.62,2197,2.175,2324,0.956,2365,4.432,2366,3.085,2390,0.819,2410,0.956,2447,1.004,2506,0.747,2636,0.956,2660,1.004,2661,2.18,2662,2.095,2733,1.133,2737,1.061,2747,2.277,2798,1.133,2857,2.391,2859,1.004,2886,1.133,2889,2.527,2963,1.004,2964,0.956,2965,1.133,3070,1.692,3071,2.005,3076,2.752,3077,2.391,3080,2.698,3085,1.133,3086,2.175,3089,1.133,3100,1.692,3106,2.527,3120,6.786,3122,1.133,3123,3.147,3126,1.004,3127,1.692,3133,1.004,3139,1.62,3166,1.004,3178,4.045,3180,1.061,3202,2.89,3204,1.229,3205,1.004,3224,1.133,3233,1.133,3239,0.956,3246,1.133,3253,1.229,3258,1.133,3260,2.927,3268,2.277,3273,0.956,3277,1.229,3288,2.175,3306,1.133,3312,1.229,3315,3.652,3350,2.927,3353,1.133,3377,1.133,3382,2.005,3408,0.956,3411,0.879,3417,2.89,3418,1.133,3420,1.229,3427,2.698,3449,1.061,3457,1.229,3461,3.304,3480,1.133,3481,2.005,3483,1.229,3485,1.229,3495,1.229,3498,1.229,3517,1.229,3561,2.005,3575,2.532,3607,2.175,3614,3.95,3624,7.192,3630,2.005,3672,2.89,3674,6.045,3693,1.229,3700,1.878,3730,2.175,3751,1.692,3761,3.728,3774,1.878,3795,1.133,3801,1.133,3814,3.304,3822,2.391,3828,3.055,3836,3.538,3842,3.479,3843,1.061,3862,1.229,3863,2.005,3867,1.229,3882,2.005,3886,2.698,3901,5.668,3914,0.956,3915,1.133,3944,1.133,3971,1.133,3976,1.004,3982,4.045,4020,2.927,4037,2.175,4074,1.133,4088,1.133,4112,3.055,4114,1.133,4123,1.133,4173,1.061,4206,1.229,4211,1.229,4240,4.045,4257,1.878,4271,1.878,4299,1.133,4329,1.133,4332,1.133,4335,1.061,4340,2.527,4343,1.133,4356,1.229,4361,2.005,4391,1.229,4403,4.176,4415,1.229,4440,1.229,4449,1.878,4469,2.175,4679,2.005,4704,2.175,4709,2.005,4710,3.95,4720,1.229,4723,2.527,4725,1.777,4730,5.606,4731,3.012,4739,1.061,4740,2.175,4744,2.89,4746,0.956,4752,2.005,4758,6.861,4775,1.004,4779,1.061,4784,1.878,4797,2.005,4798,1.061,4809,2.175,4811,1.133,4814,1.229,4819,1.229,4822,1.229,4825,1.229,4834,1.061,4836,1.229,4847,1.229,4858,2.005,4859,3.861,4861,4.122,4864,2.175,4865,1.878,4888,1.229,4893,1.229,4894,4.894,4913,0.956,4916,1.229,4933,1.133,4935,2.927,4939,1.229,4941,1.229,4947,1.229,4949,2.277,4956,1.229,4961,5.758,4967,1.133,4969,1.133,4971,2.005,4973,1.133,4975,1.229,5001,3.055,5005,1.229,5029,1.004,5030,1.229,5047,1.229,5057,1.133,5059,1.004,5074,1.229,5077,1.229,5083,1.229,5087,2.175,5098,1.004,5100,1.229,5106,2.391,5118,1.229,5131,2.175,5132,4.045,5152,1.133,5161,3.538,5163,1.004,5165,1.229,5173,1.133,5192,1.229,5196,1.229,5198,1.229,5202,1.133,5241,4.471,5270,1.229,5287,1.229,5296,4.458,5318,5.245,5333,1.133,5347,1.229,5348,1.229,5349,4.41,5358,1.133,5396,1.229,5408,1.133,5420,2.005,5423,1.229,5424,3.861,5466,2.175,5482,1.229,5633,1.133,5663,1.061,5706,1.375,5707,1.375,5708,5.883,5709,6.07,5710,2.433,5711,3.274,5712,2.927,5713,4.748,5714,2.433,5715,2.927,5716,5.41,5717,1.375,5718,1.375,5719,3.055,5720,3.538,5721,1.375,5722,1.375,5723,1.375,5724,1.375,5725,2.433,5726,1.375,5727,1.375,5728,4.525,5729,1.375,5730,1.375,5731,3.274,5732,2.433,5733,1.375,5734,1.375,5735,1.375,5736,1.375,5737,1.375,5738,1.375,5739,1.375,5740,1.229,5741,2.433,5742,5.002,5743,1.375,5744,1.375,5745,2.433,5746,2.433,5747,3.958,5748,3.274,5749,3.958,5750,1.375,5751,3.538,5752,3.538,5753,1.375,5754,1.375,5755,1.375,5756,1.375,5757,1.375,5758,1.375,5759,2.927,5760,1.375,5761,1.375,5762,1.375,5763,7.596,5764,1.375,5765,7.411,5766,1.375,5767,2.175,5768,1.375,5769,2.433,5770,1.133,5771,4.432,5772,6.07,5773,1.375,5774,2.927,5775,2.175,5776,2.433,5777,1.375,5778,1.375,5779,1.375,5780,1.375,5781,1.375,5782,3.261,5783,2.433,5784,1.375,5785,1.375,5786,1.375,5787,1.375,5788,1.229,5789,1.375,5790,1.375,5791,1.375,5792,1.229,5793,1.375,5794,1.375,5795,1.375,5796,1.229,5797,2.433,5798,1.375,5799,3.274,5800,1.375,5801,1.375,5802,1.375,5803,2.433,5804,1.375,5805,2.433,5806,3.274,5807,1.375,5808,1.375,5809,1.375,5810,2.433,5811,3.274,5812,1.375,5813,1.375,5814,1.375,5815,1.375,5816,1.375,5817,1.375,5818,1.229,5819,1.375,5820,2.433,5821,1.375,5822,1.375,5823,6.07,5824,1.375,5825,1.229,5826,1.133,5827,1.375,5828,1.375,5829,1.375,5830,1.375,5831,1.375,5832,1.375,5833,1.375,5834,3.274,5835,1.375,5836,2.433,5837,3.274,5838,1.375,5839,1.375,5840,1.375,5841,1.375,5842,2.433,5843,1.375,5844,1.375,5845,1.375,5846,2.175,5847,1.375,5848,1.229,5849,1.375,5850,1.375,5851,2.433,5852,1.375,5853,1.229,5854,1.375,5855,2.433,5856,1.375,5857,1.375,5858,1.375,5859,1.375,5860,1.229,5861,1.375,5862,1.375,5863,2.433,5864,1.375,5865,1.375,5866,1.375,5867,1.375,5868,1.375,5869,1.229,5870,1.375,5871,1.375,5872,1.375,5873,1.229,5874,3.274,5875,1.375,5876,1.375,5877,1.375,5878,1.375,5879,1.375,5880,2.433,5881,1.375,5882,1.229,5883,1.375,5884,3.274,5885,1.375,5886,1.375,5887,2.433,5888,1.375,5889,2.433,5890,1.375,5891,1.375,5892,1.375,5893,1.375,5894,1.375,5895,1.375,5896,1.375,5897,2.433,5898,1.375,5899,1.375,5900,1.375,5901,1.375,5902,1.375,5903,1.375,5904,1.375,5905,1.375,5906,8.202,5907,1.375,5908,1.375,5909,1.229,5910,1.375,5911,1.375,5912,2.433,5913,1.375,5914,1.375,5915,1.375,5916,1.375,5917,1.375,5918,1.375,5919,1.229,5920,1.375,5921,1.375,5922,1.229,5923,1.375,5924,1.375,5925,1.375,5926,1.375,5927,2.433,5928,1.375,5929,1.375,5930,2.527,5931,1.375,5932,1.375,5933,1.133,5934,1.375,5935,1.375,5936,4.525,5937,1.375,5938,1.375,5939,1.375,5940,1.375,5941,1.375,5942,1.375,5943,1.375,5944,1.375,5945,1.375,5946,1.375,5947,1.375,5948,2.433,5949,1.375,5950,1.375,5951,2.433,5952,1.375,5953,1.375,5954,1.375,5955,2.433,5956,1.375,5957,1.375,5958,1.375,5959,1.375,5960,1.229,5961,2.433,5962,1.375,5963,2.433,5964,1.375,5965,1.375,5966,1.375,5967,1.229,5968,2.433]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.392,1378,1.525,2506,1.693,4730,2.073,5771,2.274]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.213,2,0.506,3,0.058,4,0.048,5,0.109,11,0.665,13,1.802,17,0.173,21,0.578,24,0.737,27,0.006,28,0.658,44,0.145,48,0.15,52,3.284,53,2.762,57,1.928,59,0.002,60,0.002,66,1.394,67,3.737,68,1.354,76,1.087,83,0.755,84,0.751,87,0.267,89,1.175,111,2.402,113,3.176,114,1.067,125,1.728,126,1.764,138,1.732,143,3.534,144,2.486,145,3.889,147,3.364,150,3.393,152,0.47,155,1.104,168,1.484,169,1.784,171,3.176,172,1.781,174,1.087,175,1.732,181,3.905,188,0.986,191,1.193,209,0.57,211,1.73,216,0.916,227,2.762,229,3.844,231,3.602,234,3.372,240,1.922,241,2.052,247,0.714,257,1.535,291,1.922,307,2.804,310,1.658,311,2.226,324,2.326,325,1.658,326,3.48,328,3.028,330,2.58,331,1.22,370,1.658,374,2.932,377,4.183,378,3.008,389,3.383,399,2.326,411,1.938,460,2.804,510,1.868,512,1.975,537,2.326,554,3.028,580,1.191,582,1.437,614,1.138,627,1.732,630,3.232,632,1.394,642,3.534,647,2.486,652,1.535,661,2.932,664,3.227,666,3.069,674,1.484,680,1.818,683,1.658,693,1.922,696,2.403,697,2.076,714,2.403,744,1.354,768,3.202,790,1.484,798,2.43,833,1.22,834,2.486,837,3.251,840,1.535,843,1.394,1024,2.486,1043,1.25,1058,1.437,1061,2.257,1069,3.602,1070,2.687,1092,1.818,1173,1.732,1175,2.052,1176,4.105,1177,4.187,1205,1.922,1212,1.535,1239,1.437,1242,1.484,1250,2.257,1262,3.176,1270,1.484,1290,2.844,1291,2.684,1317,2.132,1319,4.172,1330,1.22,1332,1.732,1341,3.922,1364,1.535,1377,3.957,1378,2.489,1379,1.535,1382,2.052,1387,2.226,1389,4.394,1431,1.658,1432,3.702,1433,3.734,1435,3.534,1436,1.732,1437,1.732,1438,1.732,1442,1.818,1444,1.658,1456,1.658,1465,1.658,1532,1.818,1588,2.226,1597,1.732,1599,1.658,1630,3.251,1665,4.187,1666,3.323,1675,1.732,1681,1.732,1684,1.818,1714,1.658,1752,2.58,1793,1.191,1881,1.922,1882,2.486,1888,1.922,1901,1.818,1909,1.818,1934,1.658,1953,3.632,1966,2.052,1996,1.394,2027,2.944,2029,1.593,2095,3.71,2191,1.658,2212,2.226,2213,2.226,2214,2.226,2215,2.226,2216,2.052,2224,2.052,2318,1.658,2365,2.944,2366,1.535,2381,2.226,2390,2.403,2410,1.732,2439,1.658,2531,2.052,2594,3.133,2666,1.732,2677,1.732,2790,1.658,2799,2.226,2858,1.818,2859,1.818,3031,1.658,3044,5.288,3076,1.732,3080,2.052,3100,2.804,3106,1.922,3119,2.226,3120,5.498,3123,1.732,3126,1.818,3133,1.818,3139,5.179,3205,1.818,3239,2.804,3246,4.187,3273,2.804,3316,1.732,3382,4.813,3408,4.776,3411,2.58,3417,1.818,3434,1.922,3461,3.71,3511,2.226,3539,2.226,3548,2.052,3575,2.58,3672,2.944,3674,1.818,3701,1.922,3702,3.112,3828,1.922,3832,2.052,3837,2.052,3838,2.804,3842,1.732,3843,1.922,3882,4.187,3939,2.226,3972,4.463,4009,2.226,4015,2.052,4017,2.226,4030,2.226,4045,2.226,4046,2.226,4118,1.922,4227,1.922,4257,1.922,4309,2.226,4332,2.052,4703,2.052,4709,2.052,4710,1.818,4727,2.052,4730,3.383,4731,4.272,4739,1.922,4744,1.818,4746,1.732,4757,2.226,4758,3.922,4768,2.226,4775,1.818,4776,2.226,4783,2.052,4784,4.508,4787,2.226,4789,1.658,4790,2.052,4821,2.226,4835,2.052,4837,2.226,4865,1.922,4894,1.922,4908,2.226,4913,1.732,4933,2.052,4942,2.052,4943,2.226,4949,1.732,4967,2.052,4973,2.052,5001,1.922,5029,2.944,5040,2.226,5059,1.818,5098,1.818,5152,2.052,5163,1.818,5273,4.542,5318,3.112,5343,2.226,5349,1.732,5366,2.226,5408,2.052,5424,4.508,5425,4.187,5430,5.68,5438,4.187,5479,4.187,5511,3.534,5546,2.226,5561,2.226,5567,2.226,5633,2.052,5637,2.226,5687,3.323,5708,2.226,5719,1.922,5752,2.226,5765,7.234,5767,2.226,5770,3.323,5771,4.685,5788,2.226,5796,2.226,5818,3.604,5825,4.542,5860,3.604,5882,3.604,5919,3.604,5922,2.226,5930,1.922,5969,2.052,5970,2.226,5971,2.49,5972,5.081,5973,2.49,5974,6.464,5975,3.323,5976,2.49,5977,4.032,5978,5.841,5979,2.49,5980,2.49,5981,2.49,5982,2.49,5983,2.49,5984,2.49,5985,2.49,5986,4.032,5987,2.49,5988,2.49,5989,2.49,5990,2.226,5991,4.032,5992,2.49,5993,2.49,5994,2.49,5995,2.49,5996,2.226,5997,2.49,5998,2.49,5999,2.226,6000,4.032,6001,2.49,6002,2.052,6003,2.49,6004,2.49,6005,2.49,6006,2.49,6007,2.49,6008,2.49,6009,2.49,6010,2.49,6011,4.032,6012,4.032,6013,2.49,6014,2.226,6015,3.604,6016,2.49,6017,2.49,6018,2.49,6019,2.49,6020,2.49,6021,2.49,6022,2.49,6023,2.49,6024,2.49,6025,2.49,6026,2.49,6027,2.49,6028,2.49,6029,2.49,6030,2.49,6031,2.49,6032,2.49,6033,2.49,6034,2.49,6035,2.49,6036,2.49,6037,2.49,6038,2.49,6039,2.49,6040,2.49,6041,2.49,6042,2.49,6043,2.49,6044,2.49,6045,2.49,6046,2.49,6047,2.226,6048,2.49,6049,2.49,6050,2.226,6051,2.49,6052,2.49,6053,2.49,6054,2.49,6055,2.49,6056,2.49,6057,2.49,6058,2.49,6059,2.49,6060,2.226,6061,2.49]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[1378,1.525,2506,1.693,5430,2.274,5719,2.404,6062,2.784]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.576,14,3.434,24,0.387,27,0.006,36,0.478,51,3.262,54,1.77,57,3.25,59,0.003,60,0.003,67,2.533,76,1.073,83,0.856,84,1.39,87,0.424,123,1.697,155,1.084,162,1.789,169,2.523,172,1.42,174,1.068,181,4.157,191,2.348,194,4.75,201,1.893,211,1.068,229,3.226,232,1.598,233,3.134,234,3.38,257,2.441,291,4.449,310,2.636,326,5.093,327,4.727,328,2.359,329,2.533,330,2.533,331,4.055,374,2.633,377,1.987,378,2.968,389,2.636,392,4.449,395,2.359,396,3.056,397,2.636,411,2.592,419,1.662,427,2.693,460,4.008,513,2.152,524,4.008,531,1.987,614,2.633,631,5.246,641,2.533,652,4.604,768,3.265,790,3.434,835,2.533,840,3.554,937,1.893,951,2.094,990,2.636,1050,2.753,1092,2.891,1243,2.533,1262,3.134,1267,2.753,1270,3.434,1273,2.636,1279,2.636,1290,3.226,1319,2.284,1342,2.636,1349,2.152,1364,2.441,1377,5.401,1433,4.855,1437,2.753,1438,2.753,1465,2.636,1496,2.753,1527,2.636,1531,4.348,1599,2.636,1611,2.441,1625,2.891,1681,2.753,1684,2.891,1793,1.893,1836,2.152,1868,4.008,1953,3.594,2139,2.753,2324,2.753,2447,2.891,2460,3.539,2492,3.539,2551,3.056,2677,2.753,2747,2.753,2856,2.891,2888,3.539,3070,2.753,3076,2.753,3111,2.636,3120,2.891,3123,2.753,3126,5.793,3139,2.636,3147,3.056,3202,4.208,3268,4.008,3273,4.008,3314,3.056,3315,2.891,3417,2.891,3490,6.076,3513,3.539,3575,2.533,3672,4.963,3700,3.056,3702,3.056,3806,3.262,3814,2.891,3838,2.753,3841,4.449,3976,2.891,4112,3.056,4123,3.262,4299,3.262,4335,3.056,4449,3.056,4567,3.262,4608,2.891,4697,2.891,4710,2.891,4726,3.056,4730,4.97,4731,3.837,4744,2.891,4746,2.753,4835,4.75,4859,6.391,4865,3.056,4870,3.262,4913,2.753,4949,4.008,5059,2.891,5098,4.208,5106,4.208,5163,2.891,5296,3.262,5318,3.056,5337,3.539,5349,2.753,5383,3.262,5395,3.056,5405,5.152,5406,3.056,5420,3.262,5430,6.957,5470,3.262,5511,2.753,5663,3.056,5687,3.262,5715,3.539,5719,4.449,5720,3.539,5765,6.124,5848,3.539,5853,3.539,5873,3.539,5909,3.539,5933,3.262,5969,3.262,5974,5.152,5990,5.152,6047,3.539,6050,3.539,6062,3.539,6063,3.959,6064,3.959,6065,3.959,6066,3.959,6067,3.959,6068,3.959,6069,3.959,6070,3.959,6071,5.764,6072,3.959,6073,3.959,6074,3.959,6075,3.959,6076,3.959,6077,3.959,6078,3.959,6079,3.959,6080,3.959,6081,3.959,6082,3.959,6083,3.959,6084,3.959,6085,3.959,6086,3.539,6087,3.959,6088,3.959,6089,3.539,6090,3.959,6091,3.539,6092,3.959,6093,3.959,6094,3.959,6095,3.959,6096,3.959,6097,3.959,6098,3.959,6099,5.152,6100,3.959,6101,3.959,6102,3.959,6103,3.959,6104,3.959,6105,3.959,6106,3.959,6107,3.959,6108,3.959,6109,3.959,6110,3.959,6111,3.959,6112,3.959,6113,3.959,6114,3.959,6115,3.959,6116,3.959,6117,3.959,6118,3.959,6119,3.959,6120,3.959,6121,3.959,6122,3.959,6123,3.959,6124,3.959,6125,3.959,6126,3.959,6127,3.959,6128,5.764,6129,3.959,6130,3.262,6131,3.959,6132,3.539,6133,3.959,6134,3.959,6135,3.959,6136,3.959,6137,3.262]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[391,2.073,1378,1.525,2506,1.693,5349,2.166,5713,2.566]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.171,13,3.367,14,2.844,15,2.754,16,1.724,17,0.348,21,1.108,23,4.577,27,0.006,28,0.417,31,2.076,36,1.125,44,0.272,48,0.104,51,3.933,52,3.147,53,4.095,54,3.807,59,0.004,60,0.004,65,3.178,66,2.671,68,4.63,87,0.704,111,2.262,126,2.88,152,0.902,155,1.307,168,2.844,184,4.818,224,3.933,227,2.595,229,4.215,231,2.943,234,2.985,247,2.442,307,3.32,310,3.178,324,2.754,326,5.074,327,3.32,328,3.921,329,3.054,331,2.338,366,1.556,374,3.007,377,3.304,386,4.21,389,3.178,391,4.381,395,2.844,397,5.405,403,3.684,449,3.921,559,2.943,637,4.058,768,1.965,1043,2.396,1060,2.671,1061,3.683,1197,3.933,1250,2.671,1330,2.338,1343,5.303,1349,5.072,1363,4.267,1364,4.058,1365,3.485,1373,3.933,1377,2.943,1378,3.223,1379,4.644,1434,2.524,1435,3.32,1465,3.178,1599,5.014,1600,6.119,1629,4.381,1632,3.933,1759,4.381,1764,4.267,1765,3.933,1767,4.267,1771,4.267,1773,4.267,1774,4.267,1836,3.578,1882,2.943,1901,3.485,1953,3.48,1996,2.671,2017,3.32,2018,4.267,2021,3.178,2027,4.805,2029,4.21,2223,5.423,2468,4.267,2636,3.32,2858,3.485,2859,3.485,3062,3.933,3127,3.32,3205,3.485,3218,3.684,3411,3.054,3575,3.054,4033,4.267,4215,5.423,4725,3.485,4789,3.178,4954,4.267,5073,4.267,5349,3.32,5677,4.267,5713,5.423,5826,3.933,5869,4.267,5975,3.933,5999,4.267,6002,3.933,6060,4.267,6137,3.933,6138,4.773,6139,8.118,6140,4.773,6141,4.773,6142,4.773,6143,8.118,6144,4.267,6145,4.773,6146,4.773,6147,7.532,6148,4.773,6149,4.773,6150,4.773,6151,4.773,6152,6.581,6153,4.773,6154,4.773,6155,4.773,6156,4.267,6157,4.773,6158,6.581,6159,4.773,6160,4.773,6161,4.773,6162,4.773,6163,4.773,6164,4.773,6165,4.773,6166,4.773,6167,4.773,6168,4.773,6169,4.773,6170,4.773]],["title/additional-documentation/nestjs-application/testing.html",[1378,2.026,1887,2.754,2506,2.249]],["body/additional-documentation/nestjs-application/testing.html",[0,0.081,2,0.372,13,2.813,17,0.207,24,0.472,26,0.272,27,0.006,28,0.356,41,0.312,44,0.113,52,0.876,54,3.529,59,0.002,60,0.002,65,2.718,66,3.029,68,0.995,76,1.441,83,0.804,84,0.581,111,1.96,113,1.213,114,1.749,123,0.785,125,1.749,126,1.786,144,1.925,155,2.263,156,1.637,157,1.637,163,0.897,166,0.769,168,4.269,169,1.135,171,0.995,172,0.451,173,0.801,174,1.589,175,2.171,179,1.637,181,2.049,191,2.476,201,1.952,217,0.479,227,5.099,229,1.747,231,1.129,233,2.219,234,3.111,238,1.998,240,1.413,247,1.383,248,1.473,266,1.651,268,1.999,310,3.603,325,1.219,326,2.432,328,1.86,330,1.998,331,2.651,374,0.837,377,2.421,378,3.24,386,1.171,393,1.337,395,1.86,408,0.686,427,0.856,449,1.091,454,2.171,458,1.337,508,1.091,510,2.167,543,1.219,556,0.739,559,1.129,578,0.856,579,0.856,582,2.355,603,1.338,630,0.819,663,1.056,664,2.067,666,0.876,732,1.171,744,0.995,751,2.783,768,3.038,770,1.129,779,2.588,790,1.091,798,2.588,840,1.129,843,1.747,918,1.637,990,2.718,995,2.079,1043,3.705,1054,2.611,1055,0.995,1059,0.919,1092,2.28,1135,1.171,1176,1.171,1204,1.129,1212,1.925,1239,1.802,1242,1.091,1250,1.025,1262,3.204,1265,1.413,1267,1.273,1268,1.413,1269,1.219,1270,3.225,1273,1.219,1291,3.923,1317,4.96,1319,3.123,1321,4.856,1330,0.897,1333,4.178,1334,2.862,1335,3.522,1336,3.952,1341,1.413,1342,3.211,1346,1.413,1349,1.698,1364,2.517,1375,1.998,1376,2.791,1377,3.88,1379,1.129,1414,1.337,1431,1.219,1433,0.995,1434,2.159,1444,2.079,1456,1.219,1463,1.998,1465,4.413,1506,1.219,1517,1.129,1526,2.41,1527,2.718,1530,1.337,1531,1.171,1536,4.311,1572,1.337,1576,2.41,1596,1.337,1600,1.219,1611,4.952,1627,1.337,1629,3.923,1630,3.086,1645,2.28,1667,1.509,1672,1.273,1684,1.337,1687,1.637,1719,1.171,1720,0.943,1721,1.273,1739,1.091,1740,1.747,1758,1.413,1759,1.219,1791,1.273,1836,2.622,1863,1.219,1880,1.509,1882,1.925,1884,2.171,1887,5.743,1900,1.509,1953,2.862,1996,1.025,2019,1.413,2020,1.509,2021,1.219,2022,1.637,2023,3.522,2027,1.337,2029,2.611,2093,1.509,2102,2.611,2104,2.41,2106,2.171,2115,1.637,2126,1.337,2128,1.273,2139,4.098,2143,2.573,2145,1.337,2146,1.637,2180,2.28,2188,1.637,2193,1.509,2204,1.219,2205,1.171,2235,1.637,2308,2.718,2318,3.603,2319,2.517,2324,3.764,2366,1.129,2373,1.509,2390,1.091,2410,3.354,2439,1.219,2456,1.509,2457,1.509,2519,1.337,2594,4.868,2655,2.28,2680,1.509,2737,1.413,2790,1.219,2856,2.28,2889,1.413,2963,4.303,2964,1.273,2965,1.509,3044,1.509,3067,1.273,3076,1.273,3077,1.337,3106,1.413,3111,1.219,3120,5.05,3124,1.637,3126,2.28,3127,2.171,3139,3.211,3147,1.413,3155,1.637,3202,2.28,3205,4.303,3211,1.509,3239,2.171,3268,3.764,3270,1.509,3273,3.354,3311,2.41,3314,1.413,3315,1.337,3316,2.171,3320,1.637,3333,1.637,3345,2.171,3373,1.637,3390,1.637,3403,2.791,3404,3.364,3411,5.05,3417,1.337,3434,1.413,3461,3.522,3508,2.791,3541,4.838,3560,2.573,3575,1.171,3580,5.624,3624,1.413,3639,1.637,3645,1.509,3655,1.509,3674,1.337,3680,1.413,3702,1.413,3739,1.637,3761,1.509,3768,1.637,3814,2.28,3822,2.98,3829,1.637,3832,1.509,3837,1.509,3838,2.171,3839,1.509,3842,4.098,3871,1.637,3886,1.509,3914,2.171,3915,1.509,3954,3.364,3970,1.509,3976,1.337,4035,1.637,4114,1.509,4128,1.637,4154,3.649,4173,1.413,4205,1.509,4215,1.509,4233,1.509,4257,1.413,4264,5.624,4271,2.41,4340,1.413,4366,1.637,4370,1.509,4396,1.637,4446,1.509,4470,1.509,4567,1.509,4638,1.637,4697,4.594,4719,1.509,4726,4.178,4731,1.219,4734,1.637,4735,1.637,4743,1.637,4746,1.273,4749,1.637,4758,1.413,4775,2.28,4779,5.338,4783,1.509,4798,1.413,4811,1.509,4820,1.637,4834,1.413,4838,1.637,4858,1.509,4859,3.151,4861,1.509,4870,3.364,4894,1.413,4904,1.637,4912,1.637,4913,1.273,4942,1.509,4949,3.354,4950,1.637,4961,2.573,4969,1.509,4971,1.509,4990,1.637,4998,1.637,5001,1.413,5029,1.337,5041,1.637,5054,1.637,5057,1.509,5059,1.337,5065,1.637,5106,2.28,5117,1.509,5123,1.637,5133,6.404,5173,1.509,5293,1.637,5358,1.509,5363,1.509,5364,1.637,5381,4.311,5395,1.413,5424,3.151,5428,1.637,5430,1.337,5453,1.637,5470,1.509,5479,1.509,5505,1.637,5511,1.273,5548,1.637,5600,2.791,5654,1.637,5663,5.116,5670,1.637,5688,1.637,5712,1.637,5740,1.637,5751,1.637,5759,2.791,5765,5.53,5770,1.509,5771,3.952,5774,1.637,5775,1.637,5782,1.509,5792,4.311,5826,1.509,5930,1.413,5933,3.364,5967,2.791,5969,3.974,5970,1.637,5975,1.509,5996,1.637,6002,1.509,6014,1.637,6015,1.637,6086,1.637,6089,2.791,6091,1.637,6099,1.637,6132,1.637,6137,2.573,6144,1.637,6156,1.637,6171,3.122,6172,1.831,6173,1.831,6174,1.831,6175,1.831,6176,1.831,6177,1.831,6178,1.831,6179,1.831,6180,1.831,6181,1.831,6182,1.831,6183,1.831,6184,1.831,6185,3.122,6186,1.831,6187,1.831,6188,1.831,6189,1.831,6190,1.831,6191,1.831,6192,1.831,6193,1.831,6194,1.831,6195,1.831,6196,1.831,6197,1.831,6198,1.831,6199,1.831,6200,1.831,6201,1.831,6202,1.831,6203,1.831,6204,1.831,6205,1.831,6206,1.831,6207,1.831,6208,1.831,6209,1.831,6210,1.831,6211,1.831,6212,1.831,6213,4.082,6214,1.831,6215,4.082,6216,3.122,6217,5.413,6218,3.122,6219,4.082,6220,1.831,6221,1.831,6222,3.122,6223,1.831,6224,1.831,6225,1.831,6226,1.831,6227,1.831,6228,1.831,6229,1.831,6230,1.831,6231,5.893,6232,1.831,6233,1.831,6234,1.831,6235,1.831,6236,1.831,6237,1.831,6238,1.831,6239,1.831,6240,1.831,6241,1.831,6242,1.831,6243,1.831,6244,3.122,6245,1.831,6246,3.122,6247,1.831,6248,1.831,6249,1.831,6250,3.122,6251,1.831,6252,1.831,6253,4.082,6254,3.122,6255,3.122,6256,1.831,6257,1.831,6258,4.823,6259,1.831,6260,1.831,6261,1.831,6262,1.831,6263,1.831,6264,1.831,6265,1.831,6266,3.122,6267,3.122,6268,1.831,6269,3.122,6270,1.831,6271,1.831,6272,1.831,6273,1.831,6274,1.831,6275,3.122,6276,3.122,6277,1.831,6278,1.831,6279,3.122,6280,1.831,6281,1.831,6282,3.122,6283,1.831,6284,1.831,6285,1.831,6286,1.831,6287,1.831,6288,1.831,6289,3.122,6290,4.823,6291,1.831,6292,1.831,6293,1.831,6294,1.831,6295,1.831,6296,1.831,6297,3.122,6298,1.831,6299,1.831,6300,1.831,6301,1.831,6302,1.831,6303,1.831,6304,1.831,6305,1.831,6306,1.831,6307,1.831,6308,3.122,6309,1.831,6310,1.831,6311,1.831,6312,1.831,6313,1.831,6314,1.831,6315,1.831,6316,1.831,6317,1.831,6318,1.831,6319,1.831,6320,1.831,6321,1.831,6322,1.831,6323,1.831,6324,1.831,6325,1.831,6326,1.831,6327,1.831,6328,1.831,6329,1.831,6330,1.831,6331,1.831,6332,1.831,6333,1.831,6334,1.831,6335,1.831,6336,1.831,6337,1.831,6338,1.831,6339,1.831,6340,1.831,6341,1.831]],["title/additional-documentation/nestjs-application/decisions.html",[1378,2.026,2506,2.249,6130,3.408]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.621,27,0.005,52,3.055,59,0.004,60,0.004,172,1.574,181,4.001,209,1.461,211,1.723,217,1.671,226,4.087,234,3.194,239,4.087,313,3.806,329,4.087,374,2.919,444,2.482,580,3.811,603,2.738,714,3.806,744,3.473,768,2.629,835,5.099,843,4.46,1043,3.207,1135,5.557,1250,3.575,1329,4.931,1330,3.129,1334,3.378,1434,3.378,1437,5.543,1438,4.443,1463,4.087,1506,4.253,1669,3.806,1902,5.783,1953,3.378,2028,5.71,2139,4.443,2363,6.567,2366,3.939,2410,5.543,3070,4.443,3123,4.443,3180,6.705,3411,4.087,3427,6.567,3480,5.264,3630,5.264,3726,5.71,3798,5.264,3922,5.71,3972,4.443,4107,5.71,4294,5.71,4719,5.264,4725,4.664,4730,4.253,4913,4.443,5333,5.264,5406,4.931,5771,4.664,5782,5.264,5930,4.931,5960,5.71,6130,6.567,6342,6.388,6343,6.388,6344,6.388,6345,6.388,6346,6.388,6347,6.388,6348,6.388,6349,6.388,6350,6.388,6351,7.97,6352,6.388,6353,6.388,6354,6.388,6355,6.388,6356,6.388,6357,6.388,6358,6.388,6359,6.388,6360,6.388,6361,6.388,6362,6.388,6363,6.388,6364,6.388]],["title/additional-documentation/nestjs-application/vscode.html",[1378,2.026,2506,2.249,4728,3.193]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.113,27,0.005,57,4.038,59,0.005,60,0.005,227,4.59,330,4.49,331,4.135,346,4.673,374,3.858,391,4.673,833,4.135,843,3.928,1070,4.465,1298,5.417,1317,3.712,1953,3.712,2095,5.125,2159,4.673,2964,4.881,3121,5.125,3314,5.417,3345,5.872,3411,4.49,3445,5.784,3614,5.125,3774,5.417,3838,4.881,4015,6.957,4728,6.517,4760,7.547,4789,4.673,4958,5.125,5061,6.274,5398,8.095,5422,6.274,5511,4.881,5554,5.784,5695,6.274,5697,6.274,6365,7.019,6366,7.019,6367,7.019,6368,7.019,6369,7.019,6370,7.019,6371,7.019,6372,7.019,6373,7.019]],["title/additional-documentation/nestjs-application/git.html",[1378,2.026,2506,2.249,4729,3.408]],["body/additional-documentation/nestjs-application/git.html",[27,0.005,59,0.005,60,0.005,399,4.441,579,3.597,1836,4.185,1882,4.747,1996,4.308,2666,5.354,4371,5.941,4464,7.347,4729,7.756,4742,6.881,5846,6.881,6374,7.698,6375,7.698,6376,7.698,6377,7.698]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":937,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4626,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4662,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4672,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4587,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":4577,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4586,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4653,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4684,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4676,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4646,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4631,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4637,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4675,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4570,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4640,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4629,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4472,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4519,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4530,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4529,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4509,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4478,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4491,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4471,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4503,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4488,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4498,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4502,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4516,"title":{},"body":{"coverage.html":{}}}],["0000d213816abba584714c0a",{"_index":986,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["0000d224816abba584714c9c",{"_index":6315,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6317,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":779,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4654,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4665,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4613,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4599,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4649,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4610,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4690,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4663,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4581,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4552,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4578,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4616,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4553,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4592,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4474,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":4515,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":4514,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4481,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4480,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4510,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4540,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4508,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4520,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2504,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":4473,"title":{},"body":{"coverage.html":{}}}],["106",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3459,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["110",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["111",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4656,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["121",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3587,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["14.14",{"_index":1555,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["1499",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":3455,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3449,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4611,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3571,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":5017,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6358,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6357,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":751,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4669,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4628,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4650,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4614,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4574,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4595,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4576,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":4505,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":4477,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3369,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["2007",{"_index":4795,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3359,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["213",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3168,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["231",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["237",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["247",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3116,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3641,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["26.11.0",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["26.11.1",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["26.11.2",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["26.11.3",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["26.12.0",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["26.9.3",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["269",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["274",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3329,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["29",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["297",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":5455,"title":{},"body":{"todo.html":{}}}],["3",{"_index":990,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4660,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4666,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6308,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4657,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4648,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4688,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4568,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4667,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":4513,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4497,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3601,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["315",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["318",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["319",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":4479,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["331",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["339",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["3395",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["354",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["370",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["377",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["386",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["388",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["391",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["394",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":995,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4584,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4680,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4606,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4623,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2117,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":4605,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4588,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4555,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":4582,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4547,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4554,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4607,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":4531,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4539,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4495,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5419,"title":{},"body":{"overview.html":{}}}],["4008",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":5466,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":6168,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1632,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["436",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["487",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["490",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":3270,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4572,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4573,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4609,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4561,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4652,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4630,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":4532,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4512,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4476,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":6159,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":4494,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6316,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":732,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4594,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4563,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3568,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.9.4",{"_index":4658,"title":{},"body":{"dependencies.html":{}}}],["6.9.6",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["6/10",{"_index":4541,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4496,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":2582,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":5418,"title":{},"body":{"overview.html":{}}}],["6328",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4504,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":5448,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":5094,"title":{},"body":{"license.html":{}}}],["6d",{"_index":5112,"title":{},"body":{"license.html":{}}}],["7",{"_index":2932,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":4596,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4604,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4668,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["7021",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1519,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["8.0.0",{"_index":4557,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":4559,"title":{},"body":{"dependencies.html":{}}}],["8.0.9",{"_index":4556,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4590,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4687,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4565,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4618,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":4507,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":4511,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2509,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4767,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":646,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1588,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1225,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1608,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1621,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1609,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1623,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["_id.$oid",{"_index":1294,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":615,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":616,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":2966,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":4786,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":5152,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4784,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":5039,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1208,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":324,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":2952,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":463,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5228,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5227,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5436,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":4374,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":1319,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":533,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3971,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3982,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1116,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":5078,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5393,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4863,"title":{},"body":{"license.html":{}}}],["accord",{"_index":5038,"title":{},"body":{"license.html":{}}}],["according",{"_index":3481,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1721,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1719,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":5396,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4981,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5275,"title":{},"body":{"license.html":{}}}],["act",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1469,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":3445,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1956,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":4906,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5314,"title":{},"body":{"license.html":{}}}],["actors",{"_index":6071,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5296,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":5132,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4885,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1996,"title":{},"body":{"injectables/LessonRepo.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1290,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":459,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":1378,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":2858,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":618,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":624,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":1690,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":758,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["address",{"_index":5348,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4881,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3086,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":1187,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":1974,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1980,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1959,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1961,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":6096,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":3306,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":5015,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":5158,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5382,"title":{},"body":{"license.html":{}}}],["affects",{"_index":5159,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4793,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5256,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4978,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":2806,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":2847,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6323,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4222,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":5029,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":5065,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":5412,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5331,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5370,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":6068,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5284,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4564,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1916,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5485,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["all_entities",{"_index":2086,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1237,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1247,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1253,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5263,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3314,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":3076,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2159,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":5041,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":346,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4848,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":5090,"title":{},"body":{"license.html":{}}}],["always",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":3561,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":4566,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":2067,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4569,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4683,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5229,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4841,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6299,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":1696,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ansible",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":5003,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":5051,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4893,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":6028,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4736,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4737,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4741,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":655,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":2838,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":855,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["apiproperty({enum",{"_index":2394,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":2392,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":656,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":2832,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apipropertyoptional({description",{"_index":2387,"title":{},"body":{"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({type",{"_index":2384,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":2203,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":2210,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2754,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":3012,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1689,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":61,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":1613,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1630,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6325,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6320,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5483,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":88,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4898,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":331,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4725,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1175,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5353,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1243,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6329,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4752,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":5034,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5389,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3310,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5499,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5488,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":5520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5489,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":5526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5491,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5493,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../find",{"_index":4694,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4700,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5496,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5498,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4693,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5495,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5497,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":5529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5490,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":5518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":5500,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.uc.ts",{"_index":4695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":5487,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":5494,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5502,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":1565,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":2647,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":4475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2633,"title":{},"body":{"classes/ServerConsole.html":{},"coverage.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2637,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2640,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2635,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":2951,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":2953,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":388,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":1369,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":1371,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":3058,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":1362,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":1573,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1734,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":1424,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":4484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1879,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1757,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1768,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1766,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1772,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1763,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1770,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":2036,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":2013,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1663,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":3063,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4489,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4490,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1893,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":4492,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1889,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1921,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1957,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1924,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1927,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1929,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":146,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":1381,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":2105,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/setup",{"_index":4499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":1441,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":1430,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":667,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:15",{"_index":672,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:22",{"_index":677,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":851,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13",{"_index":863,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18",{"_index":862,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23",{"_index":856,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:28",{"_index":864,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33",{"_index":865,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:38",{"_index":859,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46",{"_index":868,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51",{"_index":870,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56",{"_index":869,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:61",{"_index":867,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:69",{"_index":1016,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:74",{"_index":1015,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8",{"_index":860,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":2149,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:12",{"_index":2163,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:16",{"_index":2164,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:22",{"_index":2152,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:26",{"_index":2153,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":1984,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":871,"title":{},"body":{"classes/DashboardMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":874,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1017,"title":{},"body":{"injectables/DashboardUc.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14",{"_index":1023,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6",{"_index":1020,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9",{"_index":1021,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":90,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":2039,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":2043,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":2064,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":2069,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":2071,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1032,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1075,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"coverage.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":300,"title":{},"body":{"injectables/BsonConverter.html":{},"coverage.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":316,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":304,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":2081,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1157,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":628,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":2231,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":2371,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":2378,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":2396,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":2372,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":2377,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":2386,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":2388,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":2395,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":2393,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":2391,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":2382,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":2376,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":2399,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":2374,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":2397,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":2379,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2612,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2713,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2991,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":3025,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":2179,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":2184,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":2192,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":2196,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":2202,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":2187,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2938,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":2248,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:31",{"_index":2255,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:45",{"_index":2253,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:58",{"_index":2259,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:9",{"_index":2257,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2604,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2708,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":3024,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":2309,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":2402,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":2325,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":2347,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:19",{"_index":2331,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:32",{"_index":2337,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":2333,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":2422,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:112",{"_index":2452,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:136",{"_index":2433,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:14",{"_index":2429,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:147",{"_index":2444,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:167",{"_index":2450,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":2443,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:195",{"_index":2446,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:27",{"_index":2431,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:57",{"_index":2435,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:88",{"_index":2441,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2828,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:10",{"_index":2839,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:13",{"_index":2831,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:16",{"_index":2836,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2833,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2835,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2837,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2834,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:32",{"_index":2841,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:35",{"_index":2840,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2746,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":2748,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2762,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":2764,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2694,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":2697,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2701,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:21",{"_index":2703,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:26",{"_index":2699,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":2843,"title":{},"body":{"classes/TaskScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2792,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":2795,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:24",{"_index":2797,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:63",{"_index":2802,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2788,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":2726,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":2729,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":2732,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2863,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:118",{"_index":2877,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:13",{"_index":2869,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:21",{"_index":2874,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:35",{"_index":2875,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:57",{"_index":2876,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:79",{"_index":2880,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:84",{"_index":2871,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:97",{"_index":2873,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":2538,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":2542,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":2541,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":2539,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":2546,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":2544,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":2543,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":2545,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":2540,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":3006,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":3009,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":2548,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":2550,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2570,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:11",{"_index":2579,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:16",{"_index":2577,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:21",{"_index":2581,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:7",{"_index":2575,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":3034,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:6",{"_index":3035,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:9",{"_index":3036,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2587,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":2592,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":2590,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":3038,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":3043,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":3041,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":3016,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":3019,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":3021,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":3032,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":4517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":592,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:22",{"_index":596,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:25",{"_index":598,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:32",{"_index":600,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:38",{"_index":602,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:8",{"_index":623,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":499,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:10",{"_index":503,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:7",{"_index":501,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts",{"_index":813,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14",{"_index":1310,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17",{"_index":1308,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21",{"_index":1309,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:25",{"_index":816,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:33",{"_index":823,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36",{"_index":824,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:40",{"_index":822,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43",{"_index":820,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:47",{"_index":895,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:55",{"_index":896,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6",{"_index":1307,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts",{"_index":898,"title":{},"body":{"classes/DashboardModelMapper.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:12",{"_index":911,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:16",{"_index":906,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:26",{"_index":915,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:44",{"_index":913,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:58",{"_index":909,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:79",{"_index":917,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":975,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:53",{"_index":1732,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:54",{"_index":1731,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:55",{"_index":1733,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:59",{"_index":978,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:63",{"_index":982,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:69",{"_index":983,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:75",{"_index":980,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:81",{"_index":981,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2653,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2654,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2659,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":323,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":337,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":340,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":339,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":338,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":335,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":341,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":342,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":3054,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":3056,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":4521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":1338,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1312,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2961,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2972,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2970,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2969,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2974,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2976,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":2503,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":2510,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":2513,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":2518,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":2522,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":2525,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":2524,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":2523,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":2521,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":2530,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":4522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":4528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":246,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":250,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":249,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":253,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":409,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:29",{"_index":424,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:32",{"_index":422,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":428,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:40",{"_index":432,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:44",{"_index":436,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":434,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:52",{"_index":418,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:65",{"_index":441,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":485,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":491,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":488,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:26",{"_index":492,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":702,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:111",{"_index":1702,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:126",{"_index":716,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:128",{"_index":713,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:130",{"_index":717,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:132",{"_index":715,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:134",{"_index":723,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:141",{"_index":728,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:145",{"_index":712,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:158",{"_index":720,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:162",{"_index":718,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:174",{"_index":726,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":1304,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":1305,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":1303,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:32",{"_index":1306,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:47",{"_index":1749,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:49",{"_index":1748,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:51",{"_index":1747,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:63",{"_index":1693,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:70",{"_index":1698,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:74",{"_index":1697,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:78",{"_index":1694,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:80",{"_index":1700,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:84",{"_index":1701,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:88",{"_index":1695,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:92",{"_index":1699,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":1476,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:16",{"_index":1479,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:19",{"_index":1478,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":1751,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":1989,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:17",{"_index":1988,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:20",{"_index":1987,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":509,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":2175,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":2166,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":2168,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":2169,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":2171,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":2172,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":2173,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":2174,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":2170,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":2167,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":2176,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":2165,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:79",{"_index":2177,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":1776,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":2567,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":2568,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":2564,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2600,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:7",{"_index":2601,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":1786,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:23",{"_index":2690,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":2688,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":2684,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":2691,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:36",{"_index":2683,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":2689,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:43",{"_index":2685,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":2686,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":2687,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:51",{"_index":2692,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:57",{"_index":2682,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":1826,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:24",{"_index":2719,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:27",{"_index":2715,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:30",{"_index":2717,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:33",{"_index":2720,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:36",{"_index":2722,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:39",{"_index":2716,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:42",{"_index":2718,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:45",{"_index":2721,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:47",{"_index":2724,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:52",{"_index":2723,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:68",{"_index":2714,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2935,"title":{},"body":{"classes/Team.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:7",{"_index":2936,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":1867,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":2998,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":2999,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":3000,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":3003,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":2996,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/factory/course.factory.ts",{"_index":4533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/school.factory.ts",{"_index":4535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/user.factory.ts",{"_index":4537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1737,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1718,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5508,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5512,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":1704,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5513,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/vo/task",{"_index":1856,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":360,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"coverage.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1105,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"coverage.html":{}}}],["apps/server/src/shared/infra/file",{"_index":1481,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":255,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":278,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":274,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":276,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":280,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":287,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":283,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":285,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":269,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":267,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":272,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":2003,"title":{},"body":{"classes/LessonScope.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":1991,"title":{},"body":{"injectables/LessonRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:15",{"_index":1995,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":1993,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":4542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2617,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":2619,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":2624,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":2622,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":2621,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":4738,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4730,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":6038,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5407,"title":{},"body":{"license.html":{}}}],["archives",{"_index":6085,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6098,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4571,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2639,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1583,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5374,"title":{},"body":{"license.html":{}}}],["around",{"_index":5420,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5293,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5304,"title":{},"body":{"license.html":{}}}],["array",{"_index":1514,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":933,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.from(modelentity.references).map((ref",{"_index":924,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1244,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":1407,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":5012,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1296,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["ascending",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4838,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6298,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5246,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":6014,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4962,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5366,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":6049,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5392,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5196,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":4035,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5398,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":98,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":101,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5206,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":5180,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1906,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1914,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":5434,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1890,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":151,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":1382,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":1390,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":1398,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":1400,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":1394,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":1392,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":1396,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1898,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1919,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1918,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":681,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":690,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1725,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":3239,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":1891,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1892,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":112,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5179,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2889,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":149,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":138,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":144,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":5173,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5270,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5308,"title":{},"body":{"license.html":{}}}],["authors",{"_index":5185,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":6171,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":3506,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":4227,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":6176,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1239,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":1827,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{}}}],["avoid",{"_index":3403,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4817,"title":{},"body":{"license.html":{}}}],["aws",{"_index":4448,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3150,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1779,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1276,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1192,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup.js",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":2323,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6108,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":730,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":787,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["badrequestexception('invalid",{"_index":2537,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["bar",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":325,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":446,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["base64",{"_index":4686,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":93,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":1182,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basedir",{"_index":1167,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":206,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/School.html":{},"classes/Team.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":2603,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:7",{"_index":2602,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentitywithtimestamps",{"_index":222,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":437,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":439,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":438,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":440,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basepath",{"_index":1159,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":254,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":2342,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":2340,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":2341,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":2343,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":2346,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":2344,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":2345,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":2338,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":2339,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4971,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3706,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":109,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4579,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4850,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4860,"title":{},"body":{"license.html":{}}}],["before",{"_index":582,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4768,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4991,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":3124,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":393,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2965,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3970,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5302,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4998,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4844,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5511,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5395,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":834,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":3461,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":5067,"title":{},"body":{"license.html":{}}}],["bind",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["biology",{"_index":998,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["birth",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["birthdate",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6180,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6187,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":6084,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":680,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4678,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":756,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":4722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":2956,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":2960,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":2954,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["boss",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["bosscloud",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":4026,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":3247,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":3388,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":6079,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":5416,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5414,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["bson",{"_index":318,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":322,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":320,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":314,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":299,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"coverage.html":{},"overview.html":{}}}],["bsondocuments",{"_index":312,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["bufferencoding",{"_index":1533,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1597,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["building",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":3485,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5426,"title":{},"body":{"todo.html":{}}}],["business",{"_index":326,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":38,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6158,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["bycourseids",{"_index":2005,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":2007,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bydraft",{"_index":2844,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":2850,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":2006,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":2009,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":2845,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":2852,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1143,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":2403,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":2405,"title":{},"body":{"classes/NewsScope.html":{}}}],["byteacherid",{"_index":2846,"title":{},"body":{"classes/TaskScope.html":{}}}],["byteacherid(userid",{"_index":2854,"title":{},"body":{"classes/TaskScope.html":{}}}],["byunpublished",{"_index":2404,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":2407,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2695,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2698,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1057,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":2571,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":4107,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":1342,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":2146,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":3268,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":1347,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1628,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3814,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6311,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3838,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6132,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6163,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":5045,"title":{},"body":{"license.html":{}}}],["case",{"_index":1377,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4859,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1576,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1581,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2981,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2984,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3643,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":2024,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":108,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5210,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1705,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":5170,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5220,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":3404,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4583,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":3077,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1553,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":3068,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":3070,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":3197,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":3457,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":5149,"title":{},"body":{"license.html":{}}}],["characters",{"_index":1505,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":4829,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3607,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":233,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1667,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4777,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4781,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":4173,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":6123,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["chemistry",{"_index":999,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":4745,"title":{},"body":{"index.html":{}}}],["children",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":4233,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5356,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4659,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4996,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":5004,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5391,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5260,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5272,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":1426,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1883,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3126,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":458,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":1272,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1109,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1119,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6137,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":329,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":2096,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":4782,"title":{},"body":{"index.html":{}}}],["close",{"_index":2143,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":5388,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3829,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4723,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3410,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":4444,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2663,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4635,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4621,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5446,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":139,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":142,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":140,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":356,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":358,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":357,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1101,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1103,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1102,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":1427,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":1428,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":1429,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":1559,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":1560,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":1561,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1982,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1983,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":2033,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":2034,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":2035,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":2078,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":2080,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":2079,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":2304,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":2307,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":2305,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":2306,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2645,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2646,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":2656,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2657,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2785,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":2786,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3028,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3029,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":3030,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":4141,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":4154,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1677,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":5333,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":444,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(elementmodel",{"_index":963,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["collection(modelentity",{"_index":973,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["collection(this",{"_index":429,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["collection.deletemany",{"_index":1146,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1144,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1141,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1152,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1110,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1121,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1084,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter",{"_index":1194,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1245,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1248,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1150,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1230,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1044,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{}}}],["collections.includes(collectionname",{"_index":1154,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1151,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1228,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport",{"_index":1284,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1286,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1257,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1260,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1227,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":410,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["columnnames",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["columns",{"_index":703,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["colums",{"_index":782,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["combine",{"_index":5343,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":5062,"title":{},"body":{"license.html":{}}}],["come",{"_index":4708,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":5052,"title":{},"body":{"license.html":{}}}],["command",{"_index":1050,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1042,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":4589,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":2959,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4927,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":1787,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["commentschema",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":5135,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3944,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5285,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4780,"title":{},"body":{"index.html":{}}}],["common",{"_index":4608,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4967,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4813,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":6016,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1595,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6353,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":5058,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":5066,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5317,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1336,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4953,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":4776,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":2027,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5242,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4988,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3624,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4758,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4591,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":2903,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":4901,"title":{},"body":{"license.html":{}}}],["computetaskstatusforstudent",{"_index":2864,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforstudent(task",{"_index":2870,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher",{"_index":2865,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher(task",{"_index":2872,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":3382,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5349,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":6035,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4593,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6191,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5311,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4870,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":2666,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2660,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2675,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2676,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2674,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":836,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4759,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2144,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5486,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":3495,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":3517,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["consentversionservice",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":5231,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5373,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":5198,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6129,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3801,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":6054,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":363,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":2091,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":2014,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":2648,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1039,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":355,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":359,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"coverage.html":{},"overview.html":{}}}],["conspicuously",{"_index":5033,"title":{},"body":{"license.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4980,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":1026,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject(request",{"_index":1458,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":2066,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1036,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":2728,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(dashboardrepo",{"_index":1019,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":2520,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":265,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":1388,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":3060,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesystemadapter",{"_index":1168,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":710,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(message",{"_index":3055,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":2428,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":2618,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":416,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["constructor(protected",{"_index":288,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":1473,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2589,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(task",{"_index":1864,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":2868,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":1370,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":333,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1925,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":3040,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":3018,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":5321,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":5118,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":3528,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":5318,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4704,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":4773,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":2365,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":512,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":92,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":97,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5282,"title":{},"body":{"license.html":{}}}],["context",{"_index":1349,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6313,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3797,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":5143,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5195,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5327,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4820,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5269,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5271,"title":{},"body":{"license.html":{}}}],["control",{"_index":4343,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5274,"title":{},"body":{"license.html":{}}}],["controller",{"_index":664,"title":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":691,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1093,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":2211,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":2755,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2945,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":3013,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":1985,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":2089,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":875,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":3045,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2710,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":2314,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2789,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":2315,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":666,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4920,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6183,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1297,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converted",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["converter/bson.converter",{"_index":1214,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["convey",{"_index":4907,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5306,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":5150,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4915,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5194,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4812,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4806,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3846,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4871,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4808,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4796,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4878,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4994,"title":{},"body":{"license.html":{}}}],["core",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6377,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2667,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":6164,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":6141,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":6142,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":381,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":3205,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5368,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":4264,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4956,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3219,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":5088,"title":{},"body":{"license.html":{}}}],["count",{"_index":506,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":505,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":2354,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":2820,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5261,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5514,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4905,"title":{},"body":{"license.html":{}}}],["country",{"_index":5298,"title":{},"body":{"license.html":{}}}],["counts",{"_index":5510,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":408,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":493,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["coursefactory",{"_index":4534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":484,"title":{"classes/CourseGroup.html":{}},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":1795,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegroupid",{"_index":1804,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegrouprepo",{"_index":498,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{},"coverage.html":{}}}],["coursegroups",{"_index":494,"title":{},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":2706,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":490,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseids",{"_index":504,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursename",{"_index":2830,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":508,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":583,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":591,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":466,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":605,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["court",{"_index":5326,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5387,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5288,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6089,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":3781,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4890,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6304,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1262,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":2212,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":2183,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":2430,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1111,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1123,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcurrenttestuser",{"_index":4518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1531,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{}}}],["createdat.$date",{"_index":1295,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":1485,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":1494,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createerrorresponse",{"_index":1577,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1585,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4482,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1612,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4483,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1619,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1601,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1634,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1618,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1638,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1615,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":519,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":2118,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6309,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":6043,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":627,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":2055,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":2061,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1975,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1979,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1496,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":372,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createtestmodule",{"_index":1331,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":1486,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":1498,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["creating",{"_index":631,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1673,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":513,"title":{},"body":{"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":524,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4932,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":391,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":6036,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6101,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4597,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":3350,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1655,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1657,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":225,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5223,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":2887,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1183,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1222,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":2126,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":696,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":2214,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":2908,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":693,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":1379,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6160,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":5080,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5340,"title":{},"body":{"license.html":{}}}],["customer",{"_index":5085,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":394,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":2031,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5713,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5371,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3974,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":669,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getgrid().map((elementwithposition",{"_index":879,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":877,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.entity",{"_index":919,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.model.mapper",{"_index":984,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1029,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":1986,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":665,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboarddefaultreference",{"_index":827,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["dashboardelement",{"_index":839,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["dashboardentity",{"_index":701,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["dashboardentity(hardcodedtestdashboardid",{"_index":1003,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardentity(modelentity.id",{"_index":940,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementmodel",{"_index":812,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(elementwithposition.gridelement.getid",{"_index":954,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":850,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardgridsubelementresponse",{"_index":857,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardid",{"_index":678,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":688,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"coverage.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":694,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1010,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":846,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelentity(entity.getid",{"_index":968,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper",{"_index":897,"title":{"classes/DashboardModelMapper.html":{}},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["dashboardmodelmapper.mapelementtoentity(e",{"_index":935,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapgridelementtomodel(elementwithposition",{"_index":971,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapreferencetoentity(ref",{"_index":925,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapreferencetomodel(ref",{"_index":961,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.maptoentity(dashboardmodel",{"_index":1012,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.maptomodel(entity",{"_index":1006,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardprops",{"_index":711,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":974,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardresponse",{"_index":687,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboards",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":685,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":768,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":889,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.group",{"_index":890,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":887,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":885,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1043,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2678,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":2108,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":2110,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":2112,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":2107,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database/types.ts",{"_index":5504,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1031,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["databasemanagementcontroller",{"_index":1074,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"coverage.html":{}}}],["databasemanagementmodule",{"_index":1100,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1104,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"coverage.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1037,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"coverage.html":{},"overview.html":{}}}],["databases",{"_index":6354,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":1358,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":3379,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1117,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":1566,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":1567,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":1568,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":5507,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":6063,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1758,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1762,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1773,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4760,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2680,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":5016,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1950,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":3483,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6130,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":347,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":5186,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":2842,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":1683,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4703,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":3312,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":5006,"title":{},"body":{"license.html":{}}}],["default",{"_index":247,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":455,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":420,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":421,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":423,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":731,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreference",{"_index":739,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["defaultgridreference(modelentity.id",{"_index":920,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreference(new",{"_index":993,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel",{"_index":828,"title":{"classes/DefaultGridReferenceModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel(metadata.id",{"_index":944,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultmessage",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":2142,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaultrows",{"_index":733,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":640,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2968,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5365,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4845,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5323,"title":{},"body":{"license.html":{}}}],["define",{"_index":229,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2095,"title":{},"body":{"modules/ManagementModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1324,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1328,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1311,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1269,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":2186,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":2432,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":2185,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":3390,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedcount",{"_index":1145,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":2229,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":3693,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":6175,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":5155,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5286,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6099,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3147,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependent",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["depending",{"_index":1520,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["depends",{"_index":1507,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deploy",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1453,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":5294,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1746,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6331,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":1841,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["descriptive",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":301,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":303,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":305,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":5719,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":5096,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4811,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5347,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":3059,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":3061,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4756,"title":{},"body":{"index.html":{}}}],["details",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1255,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3862,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":5127,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6365,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4724,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6184,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3389,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3914,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4788,"title":{},"body":{"index.html":{}}}],["di",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":2084,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["didnt",{"_index":832,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["die",{"_index":3420,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4632,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5474,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5346,"title":{},"body":{"license.html":{}}}],["different",{"_index":2366,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":5177,"title":{},"body":{"license.html":{}}}],["digits",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1179,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":2059,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4992,"title":{},"body":{"license.html":{}}}],["directions",{"_index":5101,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4894,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":1497,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"todo.html":{}}}],["dirnameprefix",{"_index":1502,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":1548,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":577,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":5026,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5357,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5175,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":6066,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":6074,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":223,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":587,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":5309,"title":{},"body":{"license.html":{}}}],["display",{"_index":3088,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":514,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":736,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":639,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4917,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4174,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5350,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4804,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5402,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5312,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4872,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":3338,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5462,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":632,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":3751,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":3072,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":306,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doe",{"_index":5613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":2130,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6340,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":5430,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":4598,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/TaskScope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4779,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":5129,"title":{},"body":{"license.html":{}}}],["down",{"_index":6178,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5239,"title":{},"body":{"license.html":{}}}],["draft",{"_index":2805,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["drafts",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["driven",{"_index":6062,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5506,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1266,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1112,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1125,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropdown",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":6091,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":630,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":2768,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.content",{"_index":2267,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2781,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":2288,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":2283,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":2269,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2783,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2770,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2552,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":878,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":876,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2554,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2610,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":2292,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":2560,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":2281,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":2558,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":2271,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":2273,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2774,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":2279,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":2275,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":2277,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":2265,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":2296,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":2290,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":2286,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1590,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1589,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":3011,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":2220,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1666,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1828,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":3193,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["duplicate",{"_index":3768,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":5079,"title":{},"body":{"license.html":{}}}],["duration",{"_index":1340,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":1337,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":3224,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":5126,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4963,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":2044,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":934,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":226,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1646,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":1647,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":2318,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3842,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4889,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1443,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":530,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":5385,"title":{},"body":{"license.html":{}}}],["effected",{"_index":5023,"title":{},"body":{"license.html":{}}}],["effective",{"_index":5007,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5400,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6177,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5254,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5403,"title":{},"body":{"license.html":{}}}],["element",{"_index":788,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{}}}],["element.gridelement",{"_index":797,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["element.gridelement.getreferences().length",{"_index":936,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementdto",{"_index":880,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":888,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.groupelements",{"_index":891,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":881,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":886,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":884,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":893,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":894,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":953,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":964,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.references",{"_index":962,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":955,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":957,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elements",{"_index":866,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["elementtomove",{"_index":802,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementwithposition",{"_index":892,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement",{"_index":959,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getcontent",{"_index":883,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.gridelement.getid",{"_index":882,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{}}}],["elementwithposition.pos.x",{"_index":956,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":958,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["eligible",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":268,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.findone(dashboardgridelementmodel",{"_index":952,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.findone(dashboardmodelentity",{"_index":966,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.findone(defaultgridreferencemodel",{"_index":942,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.flush",{"_index":6350,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":6324,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1868,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":6075,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":6361,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":5075,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5409,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1527,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":2409,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":625,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6092,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1672,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1668,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1679,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":4523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4909,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":1521,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":1484,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":4853,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":1291,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6370,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6376,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":3373,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3886,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2947,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":6064,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":5028,"title":{},"body":{"license.html":{}}}],["english",{"_index":1000,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["enough",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4739,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1973,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5319,"title":{},"body":{"license.html":{}}}],["entire",{"_index":5050,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5335,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":4500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getid",{"_index":967,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":1707,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":1726,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["entity/school.entity",{"_index":1708,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/task.entity",{"_index":1861,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["entity/team.entity",{"_index":1709,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entityid",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":2742,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":266,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2099,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":3204,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1945,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":541,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4692,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":651,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":3234,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":5439,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3915,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["eol",{"_index":1492,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":2012,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equal",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4983,"title":{},"body":{"license.html":{}}}],["err",{"_index":2985,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1764,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":1367,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":1574,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":1580,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1584,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1586,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1614,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":1425,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1650,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1641,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":384,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1640,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":43,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1624,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":354,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1610,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":68,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4600,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":4714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":576,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":581,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":1642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4950,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2734,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":4403,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6165,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6166,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4267,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":3245,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":3490,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4802,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3832,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1954,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4888,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4961,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":777,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["examples",{"_index":4717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exampleshorttitle",{"_index":776,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["exampletitle",{"_index":775,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["exceeds",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":3433,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":1364,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1607,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1602,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1604,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1636,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1688,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":1575,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1606,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1600,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":2051,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":2057,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":5116,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3682,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":4001,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":5279,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4986,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5328,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4944,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2319,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":2324,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4900,"title":{},"body":{"license.html":{}}}],["execution",{"_index":2963,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":1346,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5255,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":5024,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1532,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":951,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/JwtConstants.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingreference",{"_index":941,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["existinguser",{"_index":6124,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1273,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":1538,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":1546,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exit",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["exp",{"_index":1905,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6335,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6295,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6300,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6334,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":5133,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6294,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":4024,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":6067,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1923,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1917,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":1454,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4977,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1078,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1098,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1081,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1034,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1040,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1160,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1171,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1177,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1285,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1302,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":4030,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3233,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1451,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5359,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1644,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5205,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1669,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":307,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":5061,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4919,"title":{},"body":{"license.html":{}}}],["external",{"_index":3674,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1896,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":515,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1870,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":2997,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1687,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1931,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1939,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":5192,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":645,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":747,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":3901,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6193,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5341,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4987,"title":{},"body":{"license.html":{}}}],["factory",{"_index":6170,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3645,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6371,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":3680,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5380,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4982,"title":{},"body":{"license.html":{}}}],["fake",{"_index":742,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":1059,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILessonProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Options.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":5121,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4772,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4886,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6086,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4671,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":5130,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":150,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":1401,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":148,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":1460,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1471,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":145,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":1423,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1592,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1467,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4546,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4548,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":4549,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":1452,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4550,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4551,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":143,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1440,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":1446,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":1389,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1455,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":3218,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4771,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":5043,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6100,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":5597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":3062,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":426,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":5428,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1254,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":1796,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["fileids",{"_index":1807,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":1235,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1236,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1231,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filenames.map((filename",{"_index":1233,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1216,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":1070,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["filesystem",{"_index":1045,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1169,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":1558,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1060,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2924,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filter.query.ts",{"_index":2232,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":2238,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":2236,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":2241,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":2421,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":1366,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1199,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1246,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1249,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":621,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1198,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/TaskRepo.html":{}}}],["filters?.afterduedateornone",{"_index":2818,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":2816,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":2000,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["final",{"_index":6131,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5215,"title":{},"body":{"license.html":{}}}],["find",{"_index":833,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1445,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2180,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2189,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(targets",{"_index":2329,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbycourseids",{"_index":1992,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbycourseids(courseids",{"_index":1994,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":2793,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":2796,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbytaskids",{"_index":2696,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2700,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":593,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":597,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallforstudent",{"_index":594,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":599,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":595,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":601,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":2940,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2941,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":2423,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":2434,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":500,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":502,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":2572,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2576,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2573,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2578,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finddocumentsofcollection",{"_index":1113,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1127,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findforuser",{"_index":670,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1715,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":2327,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":2332,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":2181,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":2194,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":2328,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":2336,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":2424,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":2440,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2098,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":2794,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":2801,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":6150,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":2439,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstlogin",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":1728,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5361,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3093,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":3079,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3827,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixme",{"_index":2855,"title":{},"body":{"classes/TaskScope.html":{}}}],["fixtures",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":2240,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flags",{"_index":1056,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flow",{"_index":4968,"title":{},"body":{"license.html":{}}}],["flush",{"_index":256,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":6105,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":6303,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1069,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1217,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4335,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":3614,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":617,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":606,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":5022,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":6047,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1685,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":3898,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["forceserverobjectid",{"_index":1142,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["foreign",{"_index":6360,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":6297,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4361,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":449,"title":{},"body":{"classes/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":4077,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":5070,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":2040,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":2041,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2102,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4799,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4797,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4818,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4612,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":6056,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":6055,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromreferencegroup",{"_index":1691,"title":{},"body":{"classes/GridElement.html":{}}}],["fromreferencegroup(id",{"_index":765,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fromsinglereference",{"_index":1692,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(id",{"_index":763,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frontend",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":1539,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":1552,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":1537,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":5010,"title":{},"body":{"license.html":{}}}],["full",{"_index":1506,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":745,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1611,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":392,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":5144,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4697,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":5098,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":532,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":3315,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4713,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":3839,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4750,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generatehardcodedtestdashboard",{"_index":987,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateregistrationlink",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4709,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["german",{"_index":1001,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":2195,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2942,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":3008,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":1448,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getbasedir",{"_index":1206,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getcollectionnames",{"_index":1114,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":753,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getdashboardbyid",{"_index":976,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":979,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1115,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1130,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1133,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":2866,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":1840,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getdetails",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getentitypermissions",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":1534,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getgrid",{"_index":706,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":1314,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":707,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getinout",{"_index":2634,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2638,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getitems",{"_index":2923,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getmetadata",{"_index":738,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":2425,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":2442,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofstudents",{"_index":415,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getparentid",{"_index":486,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":2727,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":2730,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":1383,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":1391,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":1384,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":1393,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":2623,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":757,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getrequiredpermissions",{"_index":2426,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":2445,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getseedfolder",{"_index":1161,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":1472,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1459,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":2427,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":2448,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1162,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1180,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":453,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":2973,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":3066,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":1385,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":1395,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":1386,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":1397,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":977,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":1387,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":1399,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":3039,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(userid",{"_index":3042,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4729,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":4620,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":4643,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":4634,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3348,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":5040,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1242,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":1431,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":5046,"title":{},"body":{"license.html":{}}}],["global",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":1564,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":1365,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1659,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1880,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":1569,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1662,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4792,"title":{},"body":{"license.html":{}}}],["go",{"_index":3418,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5470,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4865,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":6082,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":2046,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4719,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":5167,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4866,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1788,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1789,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":1858,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradedstudentids",{"_index":2921,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradefileids",{"_index":1809,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":1790,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":5187,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4972,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5234,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5417,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":5097,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5394,"title":{},"body":{"license.html":{}}}],["greek",{"_index":1002,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":704,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["grid.push(element",{"_index":938,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridarray",{"_index":988,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridarray.push",{"_index":989,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":761,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridelement(id",{"_index":764,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridelement.fromreferencegroup(modelentity.id",{"_index":928,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.fromreferencegroup(new",{"_index":996,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement.fromsinglereference",{"_index":991,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelementcontent",{"_index":754,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelementreferencemetadata",{"_index":734,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":848,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["gridelementwithposition",{"_index":719,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":708,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":721,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridposition",{"_index":722,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":760,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["groupdata",{"_index":771,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["groupelements",{"_index":852,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["grouping",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["groupmetadata",{"_index":774,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["groups",{"_index":2735,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["gt",{"_index":2419,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2862,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":2224,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5546,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6336,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2158,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":2859,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":327,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":4074,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1627,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":395,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":6034,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["happy",{"_index":831,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["hard",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hardcodedtestdashboardid",{"_index":985,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["haspermission",{"_index":2907,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":2867,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":2878,"title":{},"body":{"injectables/TaskUC.html":{}}}],["having",{"_index":4985,"title":{},"body":{"license.html":{}}}],["header",{"_index":1912,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4852,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":456,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1596,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":3939,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":231,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5276,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1752,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6106,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":6050,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1265,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4633,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4636,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5212,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5174,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":3539,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1801,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":1832,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3836,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3976,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":457,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1582,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1656,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":5103,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5463,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":5122,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2661,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":522,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":103,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":105,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4801,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":5413,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":332,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6157,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6338,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5445,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6094,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3409,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6103,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":6037,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5432,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":58,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":348,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":6161,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":462,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1904,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1215,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{}}}],["icons",{"_index":6373,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":487,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":417,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1703,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":697,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":2531,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":2533,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":5492,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":1004,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["identical",{"_index":1969,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5300,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6167,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":817,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["identifier",{"_index":1373,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1968,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":6190,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6351,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":182,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{}}}],["ierrortype",{"_index":334,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6117,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6126,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6119,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":1477,"title":{"interfaces/IFileProperties.html":{}},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"coverage.html":{}}}],["ifindoptions",{"_index":1736,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["iframe",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":4139,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1940,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":752,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["igridelementreference",{"_index":737,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["ilessonproperties",{"_index":1750,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"coverage.html":{}}}],["ilogger",{"_index":1578,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":1450,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1468,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1439,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4740,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":2017,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":4949,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1901,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":740,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":6048,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6349,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5322,"title":{},"body":{"license.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1456,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1079,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1095,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1087,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1080,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1280,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1277,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importer",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":5267,"title":{},"body":{"license.html":{}}}],["imports",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":5197,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5325,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":2416,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":4846,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6172,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5375,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5377,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4800,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5372,"title":{},"body":{"license.html":{}}}],["include",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4945,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4904,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":1526,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":5069,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1674,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4851,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5342,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":5125,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3583,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5193,"title":{},"body":{"license.html":{}}}],["independant",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":6134,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":5059,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@manytomany('user",{"_index":430,"title":{},"body":{"classes/Course.html":{}}}],["index()@manytoone('school",{"_index":425,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":3001,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":5425,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":3465,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":5237,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5203,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3655,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4883,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":5136,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":548,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1716,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":6111,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":368,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":2261,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2605,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":2607,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":2400,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2613,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":2615,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3027,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2614,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":5109,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":1380,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infra",{"_index":2103,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infrastructure",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":5235,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5264,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4897,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":224,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":845,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["inheritances",{"_index":2364,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{}}}],["inital",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":6144,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":2022,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5258,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":1024,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":2073,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":2138,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":2140,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":1435,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":2019,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":96,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":95,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4743,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1882,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":2593,"title":{},"body":{"injectables/RoleUC.html":{}}}],["inputroles.map((role",{"_index":2595,"title":{},"body":{"injectables/RoleUC.html":{}}}],["insensitive",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["insertedcount",{"_index":1140,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":330,"title":{},"body":{"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6337,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4957,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":5140,"title":{},"body":{"license.html":{}}}],["installed",{"_index":5153,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1463,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1594,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4446,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":461,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instead",{"_index":1270,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4757,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":5035,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3541,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4821,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":5027,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5405,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4912,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4916,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":1344,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1345,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1332,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":407,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":385,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":5081,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5251,"title":{},"body":{"license.html":{}}}],["interface",{"_index":87,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1936,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":5145,"title":{},"body":{"license.html":{}}}],["internal",{"_index":537,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6109,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":379,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1587,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1617,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":5384,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4955,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4966,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":6080,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":1436,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":4332,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":4299,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5421,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1252,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["invalidate",{"_index":5056,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":6081,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1742,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1730,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2085,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1724,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1727,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1775,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4974,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2242,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1593,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1631,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":658,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":635,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdraft",{"_index":1838,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iserv",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1591,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1626,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":1810,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["isgroup",{"_index":755,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["ishidden",{"_index":2011,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":2243,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":2247,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":2514,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":2511,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":2505,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2244,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isnumber",{"_index":2155,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0",{"_index":2162,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":659,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":2239,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2993,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":2233,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2992,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":2237,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":2481,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1908,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":660,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":633,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":649,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":644,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":607,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubstitutionteacher",{"_index":609,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issue",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1915,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":608,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":1598,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1633,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":2032,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionproperties",{"_index":1785,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["iswhitelisted",{"_index":1960,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1963,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":3417,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":1825,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["itaskstatus",{"_index":1855,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["item",{"_index":4930,"title":{},"body":{"license.html":{}}}],["items",{"_index":1778,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":5156,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1713,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1866,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["javascript",{"_index":309,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":3345,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":4544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6292,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4765,"title":{},"body":{"index.html":{}}}],["job",{"_index":3178,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":4240,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":3726,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":1487,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":1509,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":4615,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":454,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":308,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1263,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1251,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1066,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":1648,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1299,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":321,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1139,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":4617,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1910,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6307,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1934,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":1888,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":133,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1942,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1938,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1894,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1920,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":119,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":120,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1971,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1279,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4951,"title":{},"body":{"license.html":{}}}],["key",{"_index":2487,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":5515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":1899,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4908,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4809,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4834,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":5290,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5297,"title":{},"body":{"license.html":{}}}],["known",{"_index":3702,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":464,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":3113,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["language",{"_index":3377,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":5063,"title":{},"body":{"license.html":{}}}],["last",{"_index":3026,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1729,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":2438,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5444,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4899,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4875,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5262,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5424,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":3095,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4619,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4622,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":4123,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4715,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":4638,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["learnroommodule",{"_index":1981,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["leave",{"_index":5480,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2962,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":1432,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5471,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4840,"title":{},"body":{"license.html":{}}}],["lern",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":4391,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1754,"title":{"classes/Lesson.html":{}},"body":{"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":1829,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":1835,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":2804,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":1990,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["lessons",{"_index":1753,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonscope",{"_index":1998,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"coverage.html":{}}}],["letter",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4856,"title":{},"body":{"license.html":{}}}],["level",{"_index":4257,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":5176,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4896,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4943,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":5117,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4791,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4879,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4880,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4882,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4815,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5238,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5184,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":5232,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1744,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":5369,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3344,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":3414,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":579,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":3353,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4964,"title":{},"body":{"license.html":{}}}],["links",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":5459,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["lists",{"_index":1513,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":1706,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/LessonRepo.html":{},"classes/School.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5259,"title":{},"body":{"license.html":{}}}],["living",{"_index":6078,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1238,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["load/perf",{"_index":5437,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1163,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1184,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1164,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1190,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1165,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1193,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":2888,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":1186,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":3542,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2679,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":6045,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1205,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1210,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":1759,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1767,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5460,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4755,"title":{},"body":{"index.html":{}}}],["logger",{"_index":1343,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":1579,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":1351,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":2459,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":1652,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1649,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1637,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":2015,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":2037,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggermodule",{"_index":386,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6152,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":397,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":1339,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":1352,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":1348,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":3120,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":3548,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":6020,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":5423,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4775,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":930,"title":{},"body":{"classes/DashboardModelMapper.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":5376,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5378,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2420,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6359,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":5072,"title":{},"body":{"license.html":{}}}],["made",{"_index":4847,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":106,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":2072,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":2049,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":2062,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":91,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":99,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":2038,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2673,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":2042,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":2048,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":2068,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":3246,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1464,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4088,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":4020,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":3288,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4947,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1967,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":5001,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2160,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3630,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":3122,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":2092,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1033,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["management.console.ts:11",{"_index":1038,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1049,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1046,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":2090,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1076,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:15",{"_index":1089,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:21",{"_index":1086,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:27",{"_index":1083,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1091,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1106,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1107,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1108,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"coverage.html":{}}}],["management.service.ts:13",{"_index":1131,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1132,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1128,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1120,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1129,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1122,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1124,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1118,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1126,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1134,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1053,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1158,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{}}}],["management.uc.ts:134",{"_index":1201,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1172,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1170,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1207,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1178,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1181,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1185,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1191,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1195,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1077,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":2077,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":4567,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5427,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":5277,"title":{},"body":{"license.html":{}}}],["manual",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3863,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":443,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany('file",{"_index":1806,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytomany('role",{"_index":1780,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany('user",{"_index":468,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":442,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('course",{"_index":489,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":1803,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('dashboardgridelementmodel",{"_index":838,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('dashboardmodelentity",{"_index":818,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('lesson",{"_index":1834,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["manytoone('school",{"_index":467,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('task",{"_index":1800,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('team",{"_index":590,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["manytoone('user",{"_index":523,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":714,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((elementwithposition",{"_index":970,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["map((ref",{"_index":960,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["map((submission",{"_index":2926,"title":{},"body":{"injectables/TaskUC.html":{}}}],["mapcreatenewstodomain",{"_index":2249,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":2252,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":899,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":905,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":900,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":908,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":2250,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":2254,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":969,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapper",{"_index":3044,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":689,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":2209,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2753,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":6306,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":5771,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":901,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":910,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":902,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":912,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maps",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoentity",{"_index":903,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoentity(modelentity",{"_index":914,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel",{"_index":904,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel(entity",{"_index":916,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoresponse",{"_index":872,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":873,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":2256,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2606,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2709,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":2763,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":2549,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":2251,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":2258,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":5320,"title":{},"body":{"license.html":{}}}],["marked",{"_index":5182,"title":{},"body":{"license.html":{}}}],["marker",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["marks",{"_index":5191,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4877,"title":{},"body":{"license.html":{}}}],["master",{"_index":3795,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1173,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":345,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":60,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4989,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5157,"title":{},"body":{"license.html":{}}}],["materials",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["math",{"_index":994,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["math.floor(index",{"_index":791,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["matrix",{"_index":3498,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":2515,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":2517,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":2508,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1859,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":2124,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5465,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":3014,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":3007,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5199,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4785,"title":{},"body":{"index.html":{}}}],["means",{"_index":4744,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":5009,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4747,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":5032,"title":{},"body":{"license.html":{}}}],["meet",{"_index":5044,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4931,"title":{},"body":{"license.html":{}}}],["member",{"_index":1404,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":2106,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4928,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5360,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4911,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4790,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":5248,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4976,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6344,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":770,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.displaycolor",{"_index":946,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["metadata.id",{"_index":943,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["metadata.title",{"_index":948,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["method",{"_index":1444,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3880,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4118,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4624,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":4356,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2320,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":2322,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":2113,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":5611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5458,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":2134,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":2136,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":2137,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":2082,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2093,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":2119,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":2132,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":2133,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":2135,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":2114,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":2129,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2977,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":94,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":2156,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":2161,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":2516,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":2507,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":6018,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6364,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4691,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":5181,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1462,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":2415,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4625,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":1542,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":1547,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":1543,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":1551,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mm",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3946,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6248,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":3365,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":652,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":907,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.color",{"_index":922,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements",{"_index":972,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements.init",{"_index":929,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.references.init",{"_index":923,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":921,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":926,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":927,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["models",{"_index":2492,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4873,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4934,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4377,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":5049,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4842,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4902,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":111,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6319,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6322,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6321,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5567,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":6026,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":6021,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":2115,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2664,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":6031,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":6029,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":6030,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/learnroom/learnroom.module",{"_index":2672,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2671,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/management/management.module",{"_index":2650,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/news/news.module",{"_index":2670,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2668,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2669,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4627,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":313,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":2122,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":2123,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":2141,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":2109,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1135,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1174,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1202,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":2104,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":2116,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":2121,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2677,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4645,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3575,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5221,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6174,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":3309,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4735,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5440,"title":{},"body":{"todo.html":{}}}],["move",{"_index":3119,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["moveelement",{"_index":671,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":673,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":725,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["moveelementondashboard",{"_index":1018,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1022,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":675,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"coverage.html":{}}}],["moveelementposition",{"_index":2150,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"coverage.html":{}}}],["ms",{"_index":1325,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1603,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":4211,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":837,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4783,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1148,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1176,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5479,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4647,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4664,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":5060,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2860,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":4112,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":4710,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3085,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needing",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":3761,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1629,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5469,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5555,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5557,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5556,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":4294,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1466,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1320,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":374,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1323,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4558,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4560,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":657,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1322,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestjs@7",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["nestjs@8",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["net",{"_index":4754,"title":{},"body":{"index.html":{}}}],["network",{"_index":4814,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":6073,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":510,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":2268,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":2316,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2939,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2943,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":2289,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":2465,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":2270,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":2264,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":629,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2995,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":654,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":634,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2994,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":643,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":653,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":648,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":2293,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":2272,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":2274,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":2276,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":2278,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":2266,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":2291,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":2285,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news:104",{"_index":520,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:110",{"_index":2937,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:31",{"_index":544,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:35",{"_index":521,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:39",{"_index":526,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:42",{"_index":534,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:45",{"_index":539,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:48",{"_index":540,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":542,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":536,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":525,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":546,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":535,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:79",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:98",{"_index":2616,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":2489,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":6042,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":6046,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":2321,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":2463,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":2457,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":2385,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":2401,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":2456,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":2178,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":2474,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":2360,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":2367,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":2356,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":2190,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":2188,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":2217,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":2479,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":2221,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":2476,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":2208,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":2215,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":2219,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":2216,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":2228,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":2303,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":2308,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":2207,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":2351,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":2330,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":575,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":584,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":2205,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":2483,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":2470,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":578,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2982,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":1359,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1554,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4732,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4642,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4644,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2857,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":5092,"title":{},"body":{"license.html":{}}}],["none",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":2497,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":3700,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":5120,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":4486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":729,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["notfoundexception('no",{"_index":804,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["notfoundexception(`the",{"_index":2100,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["nothing",{"_index":5233,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4922,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4918,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5222,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5218,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":5171,"title":{},"body":{"license.html":{}}}],["november",{"_index":4794,"title":{},"body":{"license.html":{}}}],["now",{"_index":641,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1223,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1224,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":1361,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3121,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":1422,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5352,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":5509,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":3480,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1068,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o.id",{"_index":2744,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["oauth",{"_index":3960,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":3754,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":2390,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":2488,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":86,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":662,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5600,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":992,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid.createfromhexstring(id",{"_index":830,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["objectid.isvalid(value",{"_index":2536,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":310,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5332,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":5105,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":5011,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1350,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":5091,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1605,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5230,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3806,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":2436,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5503,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4839,"title":{},"body":{"license.html":{}}}],["offered",{"_index":5111,"title":{},"body":{"license.html":{}}}],["offering",{"_index":5095,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4936,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2824,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":6102,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6182,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":3258,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4364,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":2054,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1250,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onepassword",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["onerror",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":6017,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":825,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":847,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('defaultgridreferencemodel",{"_index":821,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('submission",{"_index":1837,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["oneweekago",{"_index":2930,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2931,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onload",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":2111,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":3333,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3972,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5381,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":5099,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6173,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4952,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4432,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2733,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":2620,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5339,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6346,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":3301,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":6052,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6352,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":2131,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6162,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1197,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1041,"title":{"interfaces/Options.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1063,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":2058,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":2472,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":2063,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1738,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":2060,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1062,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1072,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":375,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":371,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["orchestration",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1739,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1209,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1293,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["ordering",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":5244,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4884,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":805,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{}}}],["original",{"_index":4380,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":2139,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6326,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":2350,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6095,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":2083,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orphaned",{"_index":931,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["os",{"_index":1508,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":1545,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":1684,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":2128,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6192,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5442,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2636,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":790,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":3427,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6305,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6155,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1054,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6310,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6318,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":1363,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5505,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3166,"title":{"overview.html":{}},"body":{"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3639,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":2381,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":2799,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":4072,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":5055,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5433,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4946,"title":{},"body":{"license.html":{}}}],["page",{"_index":2506,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":2512,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":1417,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1740,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":2826,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":2825,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":6044,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":2191,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":2204,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":2222,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2761,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4651,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5404,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5209,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5283,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3155,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":695,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2946,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":2464,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2223,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":674,"title":{},"body":{"controllers/DashboardController.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":2299,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":2300,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":699,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.target",{"_index":2461,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":2302,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":2301,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":2298,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.to",{"_index":700,"title":{},"body":{"controllers/DashboardController.html":{}}}],["param|query].ts",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["parentids",{"_index":2800,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":2811,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":2813,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.teacherid",{"_index":2809,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":2807,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":2812,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":2814,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byteacherid(parentids.teacherid",{"_index":2810,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2798,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":4009,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":6041,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":683,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4580,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":3277,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":4731,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":1714,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2157,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4940,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4910,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4969,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":5100,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5249,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":6009,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1681,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1933,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1935,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1937,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":2097,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":527,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":679,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":2201,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/moveelement",{"_index":676,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patching",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":5208,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5268,"title":{},"body":{"license.html":{}}}],["path",{"_index":1204,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":1557,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1188,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":663,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1930,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1922,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1949,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":5313,"title":{},"body":{"license.html":{}}}],["peer",{"_index":5107,"title":{},"body":{"license.html":{}}}],["peers",{"_index":5110,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3584,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4960,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5217,"title":{},"body":{"license.html":{}}}],["permission",{"_index":531,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":2502,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":2501,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":5037,"title":{},"body":{"license.html":{}}}],["permit",{"_index":5068,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4855,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4803,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":2738,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":2743,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":5148,"title":{},"body":{"license.html":{}}}],["persist",{"_index":257,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":270,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":6058,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":258,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":273,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":259,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":275,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistance",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["persistandflush",{"_index":260,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":277,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":6061,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":2076,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6153,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6185,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":3494,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":5330,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":6072,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":5076,"title":{},"body":{"license.html":{}}}],["physically",{"_index":5089,"title":{},"body":{"license.html":{}}}],["physics",{"_index":997,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4832,"title":{},"body":{"license.html":{}}}],["pin",{"_index":3513,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1665,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":3064,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":2534,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3206,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":311,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":104,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":102,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4602,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5253,"title":{},"body":{"license.html":{}}}],["point",{"_index":636,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5401,"title":{},"body":{"license.html":{}}}],["policy",{"_index":4309,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["polymorphic",{"_index":844,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["pool",{"_index":3859,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2363,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":5114,"title":{},"body":{"license.html":{}}}],["pos",{"_index":724,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["pos.x",{"_index":783,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["pos.y",{"_index":785,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["position",{"_index":789,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{}}}],["positionfromgridindex",{"_index":709,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":727,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["possesses",{"_index":5086,"title":{},"body":{"license.html":{}}}],["possession",{"_index":5053,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5383,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":3822,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1092,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1085,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1082,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed",{"_index":1090,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1088,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["potential",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":5452,"title":{},"body":{"todo.html":{}}}],["power",{"_index":5021,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4763,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4816,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5287,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6339,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5457,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4807,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4869,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4726,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5250,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6156,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4933,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":668,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":6363,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6362,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":2025,"title":{},"body":{"injectables/Logger.html":{}}}],["prepared",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["preparing",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":4751,"title":{},"body":{"index.html":{}}}],["present",{"_index":3940,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4926,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5178,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":4140,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3968,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":5252,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4828,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5315,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["primaryrolesearchoperation",{"_index":1777,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2566,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6104,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":5219,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":6348,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":366,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1977,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4370,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":3774,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":5141,"title":{},"body":{"license.html":{}}}],["process",{"_index":4114,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5305,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4954,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6149,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":5077,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":3366,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5316,"title":{},"body":{"license.html":{}}}],["program",{"_index":4823,"title":{},"body":{"license.html":{}}}],["program's",{"_index":5031,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5410,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4941,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4833,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4993,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":5018,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5310,"title":{},"body":{"license.html":{}}}],["project",{"_index":3071,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4655,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3879,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4929,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4921,"title":{},"body":{"license.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1326,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":932,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{}}}],["promise.resolve",{"_index":939,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve(currentuser.user",{"_index":3015,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":1536,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4601,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4892,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5236,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4903,"title":{},"body":{"license.html":{}}}],["proper",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3090,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":6345,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":2326,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2565,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({onupdate",{"_index":251,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":4721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":419,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.availabledate",{"_index":1847,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.color",{"_index":481,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":792,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.comment",{"_index":1820,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":496,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["props.creator",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":471,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1849,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":1878,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.externalid",{"_index":570,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1874,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.grade",{"_index":1823,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":1824,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid.foreach((element",{"_index":795,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":1755,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["props.lastname",{"_index":1876,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.lesson",{"_index":1853,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":469,"title":{},"body":{"classes/Course.html":{},"classes/File.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["props.permissions",{"_index":1781,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1850,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.roles",{"_index":1783,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.rows",{"_index":793,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.school",{"_index":474,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.source",{"_index":572,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.sourcedescription",{"_index":574,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.student",{"_index":1818,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.students",{"_index":475,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":479,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":1822,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacher",{"_index":1852,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.teachers",{"_index":477,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.updater",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4835,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":2967,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":5002,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5042,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":5161,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":5364,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1334,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":2029,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":2023,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":396,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":5172,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5214,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5354,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5355,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1318,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":5183,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4862,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3394,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":642,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":3942,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4706,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":5123,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5303,"title":{},"body":{"license.html":{}}}],["push",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":840,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":6060,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3925,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":5226,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5363,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":2410,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":2414,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":614,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":2295,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":2294,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":2297,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":6040,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2625,"title":{},"body":{"classes/Scope.html":{}}}],["queryordermap",{"_index":2349,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2681,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2047,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":2045,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":2056,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":2053,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["random",{"_index":1504,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4603,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1517,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":5073,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readdir",{"_index":1488,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":1511,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":1489,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":1515,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5292,"title":{},"body":{"license.html":{}}}],["reading",{"_index":5163,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":6088,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":450,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{}}}],["reason",{"_index":5301,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":5087,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5224,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4831,"title":{},"body":{"license.html":{}}}],["received",{"_index":5057,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5240,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5307,"title":{},"body":{"license.html":{}}}],["recent",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":5147,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5299,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":107,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4937,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6375,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6369,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6367,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["recursively",{"_index":1525,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["red",{"_index":5451,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1970,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1978,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5397,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":3253,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":3867,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4720,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1005,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["refactored",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3320,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":6070,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.getmetadata",{"_index":773,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referenced",{"_index":543,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":759,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["references",{"_index":744,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4827,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4874,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4661,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":6077,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5334,"title":{},"body":{"license.html":{}}}],["regard",{"_index":5168,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4748,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":5054,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4970,"title":{},"body":{"license.html":{}}}],["regex",{"_index":4002,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":6110,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5213,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6296,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":647,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6093,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6356,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":3180,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4995,"title":{},"body":{"license.html":{}}}],["relative",{"_index":1203,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":3508,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4867,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4857,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":5047,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4868,"title":{},"body":{"license.html":{}}}],["relies",{"_index":6051,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5464,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5291,"title":{},"body":{"license.html":{}}}],["remain",{"_index":5104,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4825,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5336,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5338,"title":{},"body":{"license.html":{}}}],["removal",{"_index":5169,"title":{},"body":{"license.html":{}}}],["remove",{"_index":261,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DashboardModelMapper.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":279,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":262,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":282,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":263,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":284,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":264,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":286,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":3078,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["removedirrecursive",{"_index":1490,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":1522,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removeing",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":1524,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removing",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4716,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":3756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["repeats",{"_index":2094,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":2886,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":3434,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":6140,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5454,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":110,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":2594,"title":{},"body":{"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":2455,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":2313,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":1065,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6169,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":3273,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3139,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":5138,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6312,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6314,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":1434,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6341,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6332,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1951,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1952,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2971,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2101,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1885,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2978,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":3701,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1972,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1897,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":1570,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":1541,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":5580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1058,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":2482,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":5048,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":5106,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1470,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4887,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3049,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":3052,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":3053,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1947,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":2547,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":3051,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyroles",{"_index":2588,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":2591,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2574,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2580,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":2334,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":3017,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(userid",{"_index":3020,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":5025,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5475,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":2193,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6333,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1661,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":6039,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5241,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":6057,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":3500,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5476,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":1341,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":2485,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":5019,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5200,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4303,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":798,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/NewsScope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.color",{"_index":945,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["result.gridelement",{"_index":949,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["result.query",{"_index":2626,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":4543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["result.title",{"_index":947,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["resulted",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["resultelement",{"_index":811,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["resulting",{"_index":4854,"title":{},"body":{"license.html":{}}}],["results",{"_index":59,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":5151,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":2197,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2829,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":3566,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":3666,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":4778,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5386,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5344,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":6076,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":4459,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4836,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":1540,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":1556,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5362,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":4037,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1723,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1869,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":2563,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":2562,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2598,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":3046,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1871,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":3002,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":4135,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2569,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1720,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2597,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":2561,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2586,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":5154,"title":{},"body":{"license.html":{}}}],["room",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":230,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":5551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1316,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":3295,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":2052,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["rows",{"_index":705,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["royalty",{"_index":5257,"title":{},"body":{"license.html":{}}}],["rss",{"_index":538,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6097,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":3672,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":3111,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2964,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3416,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":1353,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1355,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":5399,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4753,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5266,"title":{},"body":{"license.html":{}}}],["same",{"_index":3123,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":1405,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1465,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":6015,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6146,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3821,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["sanitize",{"_index":3705,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":5431,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":5102,"title":{},"body":{"license.html":{}}}],["sc",{"_index":3231,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["scans",{"_index":1196,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":460,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":3511,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":411,"title":{"classes/School.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["school._id",{"_index":5601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school._id.tohexstring",{"_index":5603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school.entity",{"_index":447,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["school.id",{"_index":5602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school_edit",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["schoolfactory",{"_index":4536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":5598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolid",{"_index":427,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":2608,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":2609,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2611,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":2260,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":2282,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":2380,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":588,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":586,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1710,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/School.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":638,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2662,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1329,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":603,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(parentidscope.query",{"_index":2815,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":2819,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":1999,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(filters.draft",{"_index":2817,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":2001,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":2352,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":2353,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":611,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":613,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{}}}],["scope.request",{"_index":1457,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":2494,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2948,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2949,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":2016,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":2004,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["scope.ts:10",{"_index":2010,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:12",{"_index":2849,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:19",{"_index":2853,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":2408,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:24",{"_index":2851,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:32",{"_index":2848,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":2008,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":2406,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:11",{"_index":620,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":626,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":622,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":2491,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":2469,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":1412,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":619,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopes",{"_index":2198,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4958,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4575,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2737,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1872,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":3004,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":6154,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4895,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4843,"title":{},"body":{"license.html":{}}}],["secret",{"_index":1895,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1941,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":5000,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":5071,"title":{},"body":{"license.html":{}}}],["secure",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":3080,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1048,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1035,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1047,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1166,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1200,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1259,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1281,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seeds",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":5467,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5449,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":4469,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5281,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5265,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4876,"title":{},"body":{"license.html":{}}}],["send",{"_index":2065,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":2070,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":6118,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":1376,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3823,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4562,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":5113,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2021,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4770,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3843,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6133,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4734,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4733,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":5429,"title":{},"body":{"todo.html":{}}}],["serialize",{"_index":302,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":315,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":3922,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["serializes",{"_index":317,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4670,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1330,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2651,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2665,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":5468,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5447,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2632,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["serverconsolemodule",{"_index":2644,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2652,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":4487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6139,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2655,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4389,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4948,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":377,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":1415,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":6033,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":1411,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":1402,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1442,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":1449,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":1447,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":1474,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":1475,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":1433,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5367,"title":{},"body":{"license.html":{}}}],["session",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1836,"title":{},"body":{"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradedstudentids)].length",{"_index":2927,"title":{},"body":{"injectables/TaskUC.html":{}}}],["set(permissions",{"_index":2599,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submittedstudentids)].length",{"_index":2920,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":2030,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":3871,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2975,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1327,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":4015,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1055,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":4501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1256,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setversion('3.0",{"_index":5587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":5005,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4819,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":3408,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":684,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":2246,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":6003,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/JwtPayload.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/entity/base.entity",{"_index":826,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["shared/domain/types",{"_index":2453,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/domain/types/news.types",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/TargetInfoMapper.html":{}}}],["shared/infra/console",{"_index":2087,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1051,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1213,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/file",{"_index":1211,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/pipes",{"_index":6027,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":604,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"modules/TaskModule.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["shared/repo/base.repo",{"_index":2348,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":6024,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":451,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":861,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4641,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":735,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2437,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":3730,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5411,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":5139,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4864,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":3106,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5482,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4749,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6327,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5329,"title":{},"body":{"license.html":{}}}],["single",{"_index":1061,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":1503,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["size",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["sizetype",{"_index":849,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["sjw",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":1743,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1686,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5473,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1268,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6372,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1620,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4673,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":4440,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4798,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":5124,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4984,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4997,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6342,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":835,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5408,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":6147,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6151,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1289,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["sorted",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["sortedbsondocuments",{"_index":1292,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":1997,"title":{},"body":{"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":5443,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1745,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":2902,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":2473,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":1741,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":516,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3407,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":2383,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":5084,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4826,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5554,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3089,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4810,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3882,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":6059,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4939,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5351,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2127,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["spin",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":367,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5345,"title":{},"body":{"license.html":{}}}],["split",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6355,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5561,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":2088,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core/error/dto/error.response",{"_index":343,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":344,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1356,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{}}}],["src/core/logger/logger.module",{"_index":2311,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":682,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization/authorization.module",{"_index":2312,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":2454,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/user",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/repositories",{"_index":2736,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":1025,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["stabilisation",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["stabilized",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1635,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4935,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4938,"title":{},"body":{"license.html":{}}}],["start",{"_index":4789,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":3067,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4226,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1622,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":4033,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3954,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4975,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5202,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":4470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":518,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":5036,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1863,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":2777,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.isdraft",{"_index":2778,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":2776,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":2775,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.vo.ts",{"_index":1857,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["status.vo.ts:11",{"_index":2934,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:13",{"_index":2933,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["stay",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6128,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4837,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6179,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":6065,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":2145,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":3185,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":3260,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":4493,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1932,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":2026,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":2245,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4677,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":1437,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6374,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":2028,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5441,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1791,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2884,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":1792,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":1802,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{}}}],["students",{"_index":412,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["studentsubmissions",{"_index":2909,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.filter((submission",{"_index":2913,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.length",{"_index":2912,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":4762,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4787,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1909,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5247,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["subelements",{"_index":858,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":100,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5278,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4999,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1799,"title":{"classes/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":1830,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["submission.isgraded",{"_index":2925,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.isgraded()).length",{"_index":2914,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.student.id",{"_index":2911,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionrepo",{"_index":2693,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["submissions",{"_index":1798,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["submitted",{"_index":1860,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["submittedstudentids",{"_index":2918,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subprograms",{"_index":4965,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":5093,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":5134,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5245,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":433,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":413,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["succeed",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":4215,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4858,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5289,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":5142,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5481,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5422,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":5164,"title":{},"body":{"license.html":{}}}],["support",{"_index":1902,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1911,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":746,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":4378,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1903,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4824,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":5324,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5201,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5379,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5415,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3750,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":3211,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":2486,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":1212,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":1563,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":1483,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":1493,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":1535,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":1495,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":1512,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":1529,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":1516,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":1499,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":1523,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":1510,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.module.ts",{"_index":1562,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":1482,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system/school",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":1500,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":271,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1298,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3621,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":465,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["tables",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4545,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":4746,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":3837,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3347,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":5119,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1354,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":511,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":1420,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2711,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2712,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":2413,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":2499,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":2411,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":2412,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":650,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":806,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["targetelement.addreferences(elementtomove.getreferences",{"_index":808,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["targetfolder",{"_index":1189,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":1418,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":2262,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":2280,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":2389,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetmodel",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":2449,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":2495,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":1410,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":1414,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":2498,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":1419,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":1793,"title":{"classes/Task.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":2881,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":2769,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":2928,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.course.getnumberofstudents",{"_index":2929,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createdat",{"_index":2772,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":2771,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1797,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.getdescriptions",{"_index":2780,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":2766,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.isdraft",{"_index":2915,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.name",{"_index":2767,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.submissions",{"_index":2922,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().filter((submission",{"_index":2910,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().map((submission",{"_index":2919,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":2773,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2883,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":2885,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":2725,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskcontroller",{"_index":2745,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdashboardpermission",{"_index":2879,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":2891,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":2893,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":2779,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":2784,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":2782,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":2822,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskids",{"_index":2702,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["taskmapper",{"_index":2752,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":2760,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2658,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentdescriptions",{"_index":1831,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":2731,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":2896,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":2739,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":2787,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2751,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2758,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2747,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":2904,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":2803,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["taskscope('$or",{"_index":2808,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskswithstatus",{"_index":2756,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":2759,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":2749,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":2765,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":1862,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["taskwithstatusvo(task",{"_index":2917,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":1808,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2882,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":1833,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["teacherids",{"_index":435,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":414,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":550,"title":{"classes/Team.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamid",{"_index":2944,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":1794,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":589,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":585,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":2310,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1711,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Team.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5453,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1599,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":5008,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4923,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1501,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":1643,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":741,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["term",{"_index":4973,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5207,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5225,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5216,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5204,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3841,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1317,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1333,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1313,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1315,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6087,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":2950,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{},"coverage.html":{}}}],["testcase",{"_index":6188,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":5571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelpers",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":1887,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":1321,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":227,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":370,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":6022,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":6023,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":228,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4861,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":842,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"license.html":{}}}],["think",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":5030,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._id",{"_index":829,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["this._operator",{"_index":2627,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":2629,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2628,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2631,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2630,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2988,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":610,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":2417,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":2418,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":2861,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":2074,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1907,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":2484,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6112,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":2462,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":2500,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":2895,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":2496,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.availabledate",{"_index":1846,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.basepath",{"_index":1219,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1264,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1288,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.byuseridquery(userid",{"_index":2705,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2584,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.code",{"_index":349,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":482,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":784,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.comment",{"_index":1819,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.computetaskstatusforstudent(task",{"_index":2905,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.computetaskstatusforteacher(task",{"_index":2906,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2642,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2643,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1067,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.content",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":495,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["this.course._id",{"_index":497,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":1845,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.course.name",{"_index":1842,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":2741,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":2740,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createerrorresponse(error",{"_index":1660,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creator",{"_index":1480,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1028,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":1027,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1030,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":692,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard(dashboardid",{"_index":698,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":2526,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1274,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1271,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1275,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1287,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1226,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1278,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1097,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1099,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1073,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1094,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1096,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1064,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1137,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1155,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1156,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1147,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.description",{"_index":472,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":353,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":749,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.duedate",{"_index":1848,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em",{"_index":1007,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.find(coursegroup",{"_index":2707,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lesson",{"_index":2002,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(course",{"_index":612,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":507,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":2361,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2704,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":2823,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1013,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1011,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":2357,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2583,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":3037,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1136,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":289,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1008,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1009,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":2370,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":2362,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":2358,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":2368,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":2827,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":2369,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1877,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.encoding",{"_index":1544,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.externalid",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":1421,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":1409,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":1413,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":6032,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1283,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1301,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1218,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1234,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1229,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1220,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1232,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1261,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1300,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":2892,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":2894,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2585,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":2355,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":2821,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":1873,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.getcollectionnames",{"_index":1153,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1138,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":2899,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getentitypermissions(userid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":2477,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":2471,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getseedfolder",{"_index":1221,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.gettargetfilters(userid",{"_index":2493,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1282,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":1403,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":1812,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":1813,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":1814,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":1815,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":1816,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":794,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.delete(this.gridindexfromposition(from",{"_index":810,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(key",{"_index":801,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(this.gridindexfromposition(from",{"_index":803,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(this.gridindexfromposition(to",{"_index":807,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.keys()].map((key",{"_index":799,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":796,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(to",{"_index":809,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":2890,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":1756,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["this.id",{"_index":748,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.isgroup",{"_index":767,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.joinpath(os.tmpdir",{"_index":1549,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1946,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1875,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.lesson",{"_index":1843,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.lesson.name",{"_index":1844,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.lessonrepo.findallbycourseids(courseids",{"_index":2898,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.limit",{"_index":2529,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1241,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1240,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1258,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":2458,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`create",{"_index":2460,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6148,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":2467,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":2478,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":2468,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6121,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6145,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":1357,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":1360,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":352,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":2148,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":470,"title":{},"body":{"classes/Course.html":{},"classes/File.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":2475,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":2480,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":2466,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":2490,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":2213,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":2230,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":2218,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":2226,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":2227,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.module",{"_index":2955,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":2075,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":2147,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.permissions",{"_index":1782,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.persistandflush(dashboard",{"_index":1014,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":800,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.private",{"_index":1839,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":2359,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.references",{"_index":762,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.references.concat(anotherreference",{"_index":766,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.references.length",{"_index":778,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.references.map((reference",{"_index":772,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.references[0].getmetadata",{"_index":769,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":1461,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(role.id",{"_index":2596,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles.set(props.roles",{"_index":1784,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.roleuc.resolvepermissionsbyroles(roles",{"_index":3050,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.rows",{"_index":786,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.school",{"_index":473,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.skip",{"_index":2528,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":571,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.sourcedescription",{"_index":573,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":380,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.status",{"_index":1865,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.student",{"_index":1817,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.students.length",{"_index":483,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":476,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.set(props.submissions",{"_index":1854,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":480,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":1821,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":2900,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":2757,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacher",{"_index":1851,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.teachers.set(props.teachers",{"_index":478,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5450,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":351,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":750,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":2527,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":350,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6120,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(userid",{"_index":1948,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6125,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(userid",{"_index":3047,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":6116,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6114,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(userid",{"_index":3023,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":4449,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":5166,"title":{},"body":{"license.html":{}}}],["thr",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":4205,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4913,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2979,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2987,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2986,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":4366,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4990,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4764,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":4766,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":637,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1884,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2990,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2983,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2980,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1886,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2989,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":3739,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":4206,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":2373,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4681,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["tmpdirpath",{"_index":1550,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1149,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":232,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":2235,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4727,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":6138,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toseedfolder",{"_index":1071,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":2519,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1765,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":5189,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5188,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5190,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3828,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4914,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":5146,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5243,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6090,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1675,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":2532,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1678,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4585,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1676,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":2018,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4742,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":5108,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":6053,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":5165,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":5014,"title":{},"body":{"license.html":{}}}],["tries",{"_index":4396,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":4415,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1625,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5438,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":4340,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1913,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1735,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":5484,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6343,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1811,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/Submission.html":{}}}],["typeorm",{"_index":6347,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":4485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/entity",{"_index":445,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["types/news.types",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["typesafety",{"_index":2225,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":580,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":5131,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1438,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":2790,"title":{},"body":{"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/dashboard.uc",{"_index":686,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1052,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":2206,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":2791,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":2750,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":3022,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4679,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":1372,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":6083,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":252,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3311,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6189,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1654,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":1375,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":3411,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["univention",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["universal",{"_index":4682,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":319,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1616,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":5137,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6302,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4979,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4891,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3402,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":5162,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1717,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1976,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":2317,"title":{},"body":{"modules/NewsModule.html":{}}}],["unstable",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":6135,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":743,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":2957,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":3127,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":2182,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":2451,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":2199,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":2398,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":2200,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":517,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":4426,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1712,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":2335,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upgraded",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":4674,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1805,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":6069,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":1374,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":2050,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1572,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3633,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4685,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":4045,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":1368,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1953,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":1571,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2120,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":841,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"license.html":{}}}],["useguards(jwtauthguard",{"_index":5537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":169,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":6115,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.${date.now()}@example.com",{"_index":5614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user._id",{"_index":5607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":2556,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":448,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["user.facade",{"_index":3033,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":2553,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":2551,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":2555,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.ldapdn",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":1408,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":6025,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.roles.getitems",{"_index":3048,"title":{},"body":{"injectables/UserUC.html":{}}}],["user.school.tostring",{"_index":2559,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":1406,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":6019,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":2557,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1955,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":6107,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6113,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":6127,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":3005,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfacade",{"_index":1926,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userfactory",{"_index":4538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6301,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":1416,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":431,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":2263,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":2284,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":2287,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":2375,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":118,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":4128,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":3031,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1722,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":6122,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["useruc",{"_index":3010,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":4271,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1335,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":378,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":1518,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":4046,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":4017,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4413,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5472,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5477,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1682,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1881,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1928,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1966,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":2154,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":2151,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validates",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1965,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1958,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1964,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1962,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":3065,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1664,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1671,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":406,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":3057,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":23,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":71,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":85,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":387,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1670,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":661,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":2535,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":248,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueobject",{"_index":2916,"title":{},"body":{"injectables/TaskUC.html":{}}}],["valueof",{"_index":5501,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":3560,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":4329,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":3133,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":2958,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":4805,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1760,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1769,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1774,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6330,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":6328,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":3580,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":3313,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4822,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1267,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":843,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":2447,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":529,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":5160,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5211,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4639,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5456,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":528,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":2897,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visiblelessons.map((o",{"_index":2901,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visual",{"_index":4761,"title":{},"body":{"index.html":{}}}],["void",{"_index":281,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":5064,"title":{},"body":{"license.html":{}}}],["vor",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":1900,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4728,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6368,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5478,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6366,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vulnerabilities",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":3160,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["waive",{"_index":5020,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5390,"title":{},"body":{"license.html":{}}}],["want",{"_index":2856,"title":{},"body":{"classes/TaskScope.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1761,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1771,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4925,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4924,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5461,"title":{},"body":{"todo.html":{}}}],["way",{"_index":2125,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":5074,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":5406,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3202,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6186,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2641,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":2020,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":5128,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1680,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1944,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3316,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":5115,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4942,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4849,"title":{},"body":{"license.html":{}}}],["wil",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":4061,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":4464,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3986,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":4774,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":5013,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4830,"title":{},"body":{"license.html":{}}}],["wishes",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":328,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3100,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5435,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":4769,"title":{},"body":{"index.html":{}}}],["work",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4959,"title":{},"body":{"license.html":{}}}],["workers",{"_index":3346,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflow",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":6136,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4371,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6181,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":2234,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5280,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":918,"title":{},"body":{"classes/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":965,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrap(element).toreference",{"_index":950,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrapped",{"_index":5548,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":819,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["wraps",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":1530,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1651,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1658,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":1491,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":1528,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writer",{"_index":376,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":2649,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":362,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":364,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":365,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"coverage.html":{}}}],["writer.service.ts:10",{"_index":373,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":369,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":361,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["writes",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1639,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1653,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5358,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":5082,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1645,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":780,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4689,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":814,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["xposition",{"_index":853,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":781,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":5083,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":336,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":5295,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6143,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":815,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["yposition",{"_index":854,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport * as ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumberOfStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroup.html":{"url":"classes/CourseGroup.html","title":"class - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body } from '@nestjs/common';\nimport { Authenticate } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { DashboardUc } from '../uc/dashboard.uc';\n\nimport { DashboardResponse, MoveElementParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t/* @CurrentUser() currentUser: ICurrentUser, */\n\t\t@Body() params: MoveElementParams\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(dashboardId, params.from, params.to);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:145\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:130\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPosition, to: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tprivate constructor(id: EntityId, references: IGridElementReference[]) {\n\t\tthis.id = id;\n\t\tthis.references = references;\n\t}\n\n\tstatic FromSingleReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement(id, [reference]);\n\t}\n\n\tstatic FromReferenceGroup(id: EntityId, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement(id, group);\n\t}\n\n\treferences: IGridElementReference[];\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\taddReferences(anotherReference: IGridElementReference[]): void {\n\t\tthis.references = this.references.concat(anotherReference);\n\t}\n\n\tgetContent(): GridElementContent {\n\t\tif (!this.isGroup()) {\n\t\t\tconst { id: referencedId, ...data } = this.references[0].getMetadata();\n\t\t\tconst metadata = {\n\t\t\t\treferencedId,\n\t\t\t\t...data,\n\t\t\t};\n\t\t\treturn metadata;\n\t\t}\n\t\tconst groupData = this.references.map((reference) => reference.getMetadata());\n\t\tconst groupMetadata = {\n\t\t\ttitle: 'exampleTitle',\n\t\t\tshortTitle: 'exampleShortTitle',\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (!elementToMove) {\n\t\t\tthrow new NotFoundException('no element at origin position');\n\t\t}\n\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(to));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(elementToMove.getReferences());\n\t\t} else {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t}\n\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\n\t\tconst resultElement = this.grid.get(this.gridIndexFromPosition(to)) as IGridElement;\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DefaultGridReferenceModel', 'gridelement')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                groupElements\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((elementWithPosition) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\telementDTO.id = elementWithPosition.gridElement.getId();\n\t\t\tconst data = elementWithPosition.gridElement.getContent();\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\t\t\tif (data.group) {\n\t\t\t\telementDTO.groupElements = data.group;\n\t\t\t}\n\n\t\t\tconst { pos } = elementWithPosition;\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelMapper.html":{"url":"classes/DashboardModelMapper.html","title":"class - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Static\n                                mapReferenceToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapReferenceToModel\n                            \n                            \n                                    Static\n                                    Async\n                                mapToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToEntity(modelEntity: DefaultGridReferenceModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DefaultGridReferenceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DefaultGridReference\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToModel(reference: IGridElementReference, element: DashboardGridElementModel, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToModel(entity: DashboardEntity, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, wrap, EntityManager } from '@mikro-orm/core';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tGridElementWithPosition,\n\tDefaultGridReference,\n\tIGridElementReference,\n} from '@shared/domain';\nimport { DashboardGridElementModel, DashboardModelEntity, DefaultGridReferenceModel } from './dashboard.model.entity';\n\nexport class DashboardModelMapper {\n\tstatic mapReferenceToEntity(modelEntity: DefaultGridReferenceModel): DefaultGridReference {\n\t\treturn new DefaultGridReference(modelEntity.id, modelEntity.title, modelEntity.color);\n\t}\n\n\tstatic async mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tawait modelEntity.references.init();\n\t\tconst references = Array.from(modelEntity.references).map((ref) => DashboardModelMapper.mapReferenceToEntity(ref));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromReferenceGroup(modelEntity.id, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tstatic async mapToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tawait modelEntity.gridElements.init();\n\t\tconst grid: GridElementWithPosition[] = [];\n\t\t// ----------------------\n\t\t// temporary solution, look at how remove orphaned elements on persist\n\t\tawait Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\tconst element = await DashboardModelMapper.mapElementToEntity(e);\n\t\t\t\tif (element.gridElement.getReferences().length > 0) {\n\t\t\t\t\tgrid.push(element);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t})\n\t\t);\n\t\t// ----------------------\n\t\treturn new DashboardEntity(modelEntity.id, { grid });\n\t}\n\n\tstatic async mapReferenceToModel(\n\t\treference: IGridElementReference,\n\t\telement: DashboardGridElementModel,\n\t\tem: EntityManager\n\t): Promise {\n\t\tconst metadata = reference.getMetadata();\n\t\tconst existingReference = await em.findOne(DefaultGridReferenceModel, metadata.id);\n\t\tconst result = existingReference || new DefaultGridReferenceModel(metadata.id);\n\t\tresult.color = metadata.displayColor;\n\t\tresult.title = metadata.title;\n\t\tresult.gridelement = wrap(element).toReference();\n\t\treturn result;\n\t}\n\n\tstatic async mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity,\n\t\tem: EntityManager\n\t): Promise {\n\t\tconst existing = await em.findOne(DashboardGridElementModel, elementWithPosition.gridElement.getId());\n\t\tconst elementModel = existing || new DashboardGridElementModel(elementWithPosition.gridElement.getId());\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\n\t\tconst references = await Promise.all(\n\t\t\telementWithPosition.gridElement\n\t\t\t\t.getReferences()\n\t\t\t\t.map((ref) => DashboardModelMapper.mapReferenceToModel(ref, elementModel, em))\n\t\t);\n\t\telementModel.references = new Collection(elementModel, references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tstatic async mapToModel(entity: DashboardEntity, em: EntityManager): Promise {\n\t\tconst existing = await em.findOne(DashboardModelEntity, entity.getId());\n\t\tconst modelEntity = existing || new DashboardModelEntity(entity.getId());\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity\n\t\t\t\t.getGrid()\n\t\t\t\t.map((elementWithPosition) => DashboardModelMapper.mapGridElementToModel(elementWithPosition, modelEntity, em))\n\t\t);\n\n\t\tmodelEntity.gridElements = new Collection(modelEntity, mappedElements);\n\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\nconst generateHardcodedTestDashboard = () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromReferenceGroup(new ObjectId().toString(), [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateHardcodedTestDashboard();\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPosition, to: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPosition } from '@shared/domain';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPosition,\n\t\tto: GridPosition\n\t\t/* currentUser: ICurrentUser */\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tdashboard.moveElement(from, to);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Post('seed')\n\tasync importCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t\treturn result;\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, displayColor: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tprivate constructor(id: EntityId, references: IGridElementReference[]) {\n\t\tthis.id = id;\n\t\tthis.references = references;\n\t}\n\n\tstatic FromSingleReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement(id, [reference]);\n\t}\n\n\tstatic FromReferenceGroup(id: EntityId, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement(id, group);\n\t}\n\n\treferences: IGridElementReference[];\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\taddReferences(anotherReference: IGridElementReference[]): void {\n\t\tthis.references = this.references.concat(anotherReference);\n\t}\n\n\tgetContent(): GridElementContent {\n\t\tif (!this.isGroup()) {\n\t\t\tconst { id: referencedId, ...data } = this.references[0].getMetadata();\n\t\t\tconst metadata = {\n\t\t\t\treferencedId,\n\t\t\t\t...data,\n\t\t\t};\n\t\t\treturn metadata;\n\t\t}\n\t\tconst groupData = this.references.map((reference) => reference.getMetadata());\n\t\tconst groupMetadata = {\n\t\t\ttitle: 'exampleTitle',\n\t\t\tshortTitle: 'exampleShortTitle',\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (!elementToMove) {\n\t\t\tthrow new NotFoundException('no element at origin position');\n\t\t}\n\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(to));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(elementToMove.getReferences());\n\t\t} else {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t}\n\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\n\t\tconst resultElement = this.grid.get(this.gridIndexFromPosition(to)) as IGridElement;\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReferenceModel.html":{"url":"classes/DefaultGridReferenceModel.html","title":"class - DefaultGridReferenceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReferenceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                gridelement\n                            \n                            \n                                title\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridelement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardGridElementModel', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IFileProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IFileProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tname: string;\n\tcreator: User;\n}\n\n@Entity({ tableName: 'files' })\nexport class File extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: User;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                references\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromReferenceGroup\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                isGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(id: EntityId, references: IGridElementReference[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        references\n                                                  \n                                                        \n                                                                        IGridElementReference[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromReferenceGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromReferenceGroup(id: EntityId, group: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(id: EntityId, reference: IGridElementReference)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElementReference[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tprivate constructor(id: EntityId, references: IGridElementReference[]) {\n\t\tthis.id = id;\n\t\tthis.references = references;\n\t}\n\n\tstatic FromSingleReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement(id, [reference]);\n\t}\n\n\tstatic FromReferenceGroup(id: EntityId, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement(id, group);\n\t}\n\n\treferences: IGridElementReference[];\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\taddReferences(anotherReference: IGridElementReference[]): void {\n\t\tthis.references = this.references.concat(anotherReference);\n\t}\n\n\tgetContent(): GridElementContent {\n\t\tif (!this.isGroup()) {\n\t\t\tconst { id: referencedId, ...data } = this.references[0].getMetadata();\n\t\t\tconst metadata = {\n\t\t\t\treferencedId,\n\t\t\t\t...data,\n\t\t\t};\n\t\t\treturn metadata;\n\t\t}\n\t\tconst groupData = this.references.map((reference) => reference.getMetadata());\n\t\tconst groupMetadata = {\n\t\t\ttitle: 'exampleTitle',\n\t\t\tshortTitle: 'exampleShortTitle',\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (!elementToMove) {\n\t\t\tthrow new NotFoundException('no element at origin position');\n\t\t}\n\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(to));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(elementToMove.getReferences());\n\t\t} else {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t}\n\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\n\t\tconst resultElement = this.grid.get(this.gridIndexFromPosition(to)) as IGridElement;\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\nconst generateHardcodedTestDashboard = () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromReferenceGroup(new ObjectId().toString(), [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateHardcodedTestDashboard();\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tname: string;\n\tcreator: User;\n}\n\n@Entity({ tableName: 'files' })\nexport class File extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: User;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElementReference[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tprivate constructor(id: EntityId, references: IGridElementReference[]) {\n\t\tthis.id = id;\n\t\tthis.references = references;\n\t}\n\n\tstatic FromSingleReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement(id, [reference]);\n\t}\n\n\tstatic FromReferenceGroup(id: EntityId, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement(id, group);\n\t}\n\n\treferences: IGridElementReference[];\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\taddReferences(anotherReference: IGridElementReference[]): void {\n\t\tthis.references = this.references.concat(anotherReference);\n\t}\n\n\tgetContent(): GridElementContent {\n\t\tif (!this.isGroup()) {\n\t\t\tconst { id: referencedId, ...data } = this.references[0].getMetadata();\n\t\t\tconst metadata = {\n\t\t\t\treferencedId,\n\t\t\t\t...data,\n\t\t\t};\n\t\t\treturn metadata;\n\t\t}\n\t\tconst groupData = this.references.map((reference) => reference.getMetadata());\n\t\tconst groupMetadata = {\n\t\t\ttitle: 'exampleTitle',\n\t\t\tshortTitle: 'exampleShortTitle',\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (!elementToMove) {\n\t\t\tthrow new NotFoundException('no element at origin position');\n\t\t}\n\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(to));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(elementToMove.getReferences());\n\t\t} else {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t}\n\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\n\t\tconst resultElement = this.grid.get(this.gridIndexFromPosition(to)) as IGridElement;\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tprivate constructor(id: EntityId, references: IGridElementReference[]) {\n\t\tthis.id = id;\n\t\tthis.references = references;\n\t}\n\n\tstatic FromSingleReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement(id, [reference]);\n\t}\n\n\tstatic FromReferenceGroup(id: EntityId, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement(id, group);\n\t}\n\n\treferences: IGridElementReference[];\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\taddReferences(anotherReference: IGridElementReference[]): void {\n\t\tthis.references = this.references.concat(anotherReference);\n\t}\n\n\tgetContent(): GridElementContent {\n\t\tif (!this.isGroup()) {\n\t\t\tconst { id: referencedId, ...data } = this.references[0].getMetadata();\n\t\t\tconst metadata = {\n\t\t\t\treferencedId,\n\t\t\t\t...data,\n\t\t\t};\n\t\t\treturn metadata;\n\t\t}\n\t\tconst groupData = this.references.map((reference) => reference.getMetadata());\n\t\tconst groupMetadata = {\n\t\t\ttitle: 'exampleTitle',\n\t\t\tshortTitle: 'exampleShortTitle',\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (!elementToMove) {\n\t\t\tthrow new NotFoundException('no element at origin position');\n\t\t}\n\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(to));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(elementToMove.getReferences());\n\t\t} else {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t}\n\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\n\t\tconst resultElement = this.grid.get(this.gridIndexFromPosition(to)) as IGridElement;\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacher\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacher:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\t\treturn descriptions;\n\t}\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserFacade } from '@src/modules/user';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(userId);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ILessonProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ILessonProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:15\n                \n            \n\n\n            \n                \n                    TODO add pagination and sorting\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/core';\n\nimport { EntityId, Lesson } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * TODO add pagination and sorting\n\t */\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst lessons = this.em.find(Lesson, scope.query);\n\t\treturn lessons;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\ty: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\ty: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/news.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News } from '@shared/domain';\nimport { ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain/types/news.types';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger/logger.module';\nimport { AuthorizationModule } from '@src/modules/authorization/authorization.module';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '@shared/domain';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:57\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, News, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '@shared/domain/types/news.types';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Role')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IPermissionsAndRoles, Role } from '@shared/domain';\n\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByRoles(inputRoles: Role[]): Promise {\n\t\tconst roles = await Promise.all(\n\t\t\tinputRoles.map((role) => this.roleRepo.resolvePermissionsFromSubRolesById(role.id))\n\t\t);\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/learnroom/learnroom.module';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain/types/news.types';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                    Optional\n                                teacher\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                isDraft\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskParentDescriptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\t\treturn descriptions;\n\t}\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// courseGroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tconst [permittedCourses] =\n\t\t\tpermission === TaskParentPermission.write\n\t\t\t\t? await this.courseRepo.findAllForTeacher(userId)\n\t\t\t\t: await this.courseRepo.findAllForStudent(userId);\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t\tisDraft: status.isDraft,\n\t\t};\n\n\t\tconst taskDesc = task.getDescriptions();\n\t\tdto.courseName = taskDesc.name;\n\t\tdto.displayColor = taskDesc.color;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions, Lesson, Task } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tteacherId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: { draft?: boolean; afterDueDateOrNone?: Date },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.teacherId) {\n\t\t\tparentIdScope.byTeacherId(parentIds.teacherId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tscope.byDraft(filters.draft);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiProperty()\n\tavailableDate?: Date;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t\tisDraft: boolean;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byDraft\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byTeacherId\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byTeacherId\n                        \n                    \n                \n            \n            \n                \nbyTeacherId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Task } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nexport class TaskScope extends Scope {\n\tbyTeacherId(userId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ teacher: userId }, { course: null }, { lesson: null }],\n\t\t});\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\t// FIXME - WE DON'T WANT THIS!!! NON-OPTIONAL BOOLEAN PROPERTIES HAVE TO BE DEFINED.\n\t\t// additionally handle undefined and null as false\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\t\tthis.addQuery(query);\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeTaskStatusForStudent\n                            \n                            \n                                    Private\n                                computeTaskStatusForTeacher\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, lessonRepo: LessonRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForStudent(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForTeacher(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder, Task, TaskWithStatusVo } from '@shared/domain';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskRepo } from '../repo';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService\n\t) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\t{ draft: false, afterDueDateOrNone: dueDate },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForStudent(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tteacherId: userId,\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForTeacher(task));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\tprivate computeTaskStatusForStudent(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst studentSubmissions = task.submissions.getItems().filter((submission) => submission.student.id === userId);\n\n\t\tconst submitted = studentSubmissions.length > 0 ? 1 : 0;\n\t\tconst graded = studentSubmissions.filter((submission) => submission.isGraded()).length;\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = task.isDraft();\n\n\t\tconst valueObject = new TaskWithStatusVo(task, { submitted, maxSubmissions, graded, isDraft });\n\n\t\treturn valueObject;\n\t}\n\n\tprivate computeTaskStatusForTeacher(task: Task): TaskWithStatusVo {\n\t\tconst submittedStudentIds = task.submissions.getItems().map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst submitted = [...new Set(submittedStudentIds)].length;\n\n\t\tconst gradedStudentIds = task.submissions\n\t\t\t.getItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst graded = [...new Set(gradedStudentIds)].length;\n\t\tconst maxSubmissions = task.course ? task.course.getNumberOfStudents() : 0;\n\t\tconst isDraft = task.isDraft();\n\n\t\tconst valueObject = new TaskWithStatusVo(task, { submitted, maxSubmissions, graded, isDraft });\n\n\t\treturn valueObject;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(userId: EntityId): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(userId);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName;\n\t\tdto.lastName = user.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId);\n\t\tconst roles = user.roles.getItems();\n\t\tconst resolved = await this.roleUC.resolvePermissionsByRoles(roles);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nAdded\n\nBC-394 - send email wishes to additionally needed addresses\nBC-391 - display special characters properly\nBC-339 - creation of groups in the courses dashboard\nBC-339 - add elements to groups in the courses dashboard\n\nFixed\n\nBC-436 - Fix univention LDAP strategy\n\nChanged\n\nBC-487 - update mongodb-memory-server from 6.9.6 to 7.4.4\nBC-490 - setup entities for tests without needing a database\n\n[26.12.0] - 2021-10-12\nAdded\n\nBC-388 - add simple script for end sjw\nBC-319 - add route to change the position of a course dashboard element\nBC-343 - run unstable e2e tests on label run unstable tests\nBC-6   - Show prepared tasks (drafts) for teachers\n\nChanged\n\nBC-25 - sort database seeds ascending by date of creation (_id, createdAt)\nBC-25 - move logic of npm run setup into console application and add management application with same behavior\nBC-237 - Clean up global entity registration\nBC-331 - BC-354 - rename ansible variables for OnePassword\nBC-269 - check in firstLogin that students can only pass with existing birthdate\nBC-154 - remove lesson entity from task repository\nBC-231 - upgraded nestjs@7 to nestjs@8\n\nFixed\nSecurity\n\nBC-386 - added CREATE tests for consentVersionService\nBC-297 - fixed set-value dependency vulnerabilities\nBC-377 - fixed axios dependency vulnerabilities\n\n[26.11.3] - 2021-10-05\nFixed\n\nBC-121 - run add bucket to files migration in parallel\n\n[26.11.2] - 2021-09-29\nFixed\n\nBC-111 wait for mongodb to spin up in deployment\n\nBC-370 - fixed file directory creation\n\n\n[26.11.1] - 2021-09-29\nFixed\n\nBC-365 - fixed task overview pagination\n\n[26.11.0] - 2021-09-22\nChanged\n\nBC-274 Change Course Colors\nBC-213 - rewrite file deletion with deletion marker\nBC-68 - e2e run dependent on build image job\nBC-179 - refactor task and entity and relations\nBC-315 - stabilized resolve user roles workflow by use roles from requested user and not from jwt\n\nAdded\n\nBC-121 add bucket and storage provider to file documents\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\nBC-318 implement persistance for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\nBC-247 - remove timestamp from LDAP search Query for sync\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.3] - 2021-09-10\nFixed\n\nBC-239 - fix date parsing for students birth date\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\nBC-106 - exit maintenance & change school year for LDAP schools on Boss and NBC\n\n[26.9.1] - 2021-08-18\nChanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nChanged\n\nOPS-2491 - Change the hydra service url\nSC-9231 - add permissions to SuperHero to edit admin role\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/console.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/server.console.ts\n            \n            class\n            ServerConsole\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/server/src/console/test/bootstrap.console.ts\n            \n            class\n            TestBootstrapConsole\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/console/test/bootstrap.console.ts\n            \n            variable\n            execute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/management.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/setup-entities.ts\n            \n            variable\n            setupEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridElementResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridSubElementResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n            \n            class\n            MoveElementParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n            \n            class\n            MoveElementPosition\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n            \n            class\n            DashboardMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n            \n            injectable\n            DashboardUc\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/console/database-management.console.ts\n            \n            class\n            DatabaseManagementConsole\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/console/database-management.console.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/controller/database-management.controller.ts\n            \n            controller\n            DatabaseManagementController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/converter/bson.converter.ts\n            \n            injectable\n            BsonConverter\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/uc/database-management.uc.ts\n            \n            injectable\n            DatabaseManagementUc\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/uc/database-management.uc.ts\n            \n            interface\n            ICollectionFilePath\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task-scope.ts\n            \n            class\n            TaskScope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.authorization.service.ts\n            \n            injectable\n            TaskAuthorizationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            injectable\n            CourseGroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardGridElementModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardModelEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DefaultGridReferenceModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n            \n            class\n            DashboardModelMapper\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            injectable\n            DashboardRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            interface\n            IDashboardRepo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            variable\n            generateHardcodedTestDashboard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            variable\n            hardcodedTestDashboardId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n            \n            function\n            DecodeHtmlEntities\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/all-entities.ts\n            \n            variable\n            ALL_ENTITIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/coursegroup.entity.ts\n            \n            class\n            CourseGroup\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/coursegroup.entity.ts\n            \n            interface\n            ICourseGroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            DashboardEntity\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            DefaultGridReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            GridElement\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            interface\n            IGridElement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            interface\n            IGridElementReference\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            variable\n            defaultColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            variable\n            defaultRows\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/file.entity.ts\n            \n            interface\n            IFileProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/lesson.entity.ts\n            \n            interface\n            ILessonProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/submission.entity.ts\n            \n            interface\n            ISubmissionProperties\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            interface\n            ITaskProperties\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/team.entity.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/course.factory.ts\n            \n            variable\n            courseFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/school.factory.ts\n            \n            variable\n            schoolFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/user.factory.ts\n            \n            variable\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/vo/task-with-status.vo.ts\n            \n            class\n            TaskWithStatusVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/vo/task-with-status.vo.ts\n            \n            interface\n            ITaskStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n            \n            injectable\n            ConsoleWriterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/database/management/database-management.service.ts\n            \n            injectable\n            DatabaseManagementService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/file-system/file-system.adapter.ts\n            \n            injectable\n            FileSystemAdapter\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/file-system/file-system.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/lesson/lesson-scope.ts\n            \n            class\n            LessonScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/lesson/lesson.repo.ts\n            \n            injectable\n            LessonRepo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.0\n        \n            @nestjs/common : ^8.0.9\n        \n            @nestjs/core : ^8.0.9\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.0.9\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.9\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.22.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.5.1\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        20 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    33 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    63 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                        School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultRows   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            generateHardcodedTestDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            hardcodedTestDashboardId   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tDefaultGridReferenceModel,\n\tFile,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: {\n\t\tname?: string;\n\t\tdescription?: string;\n\t\tcolor?: string;\n\t\tschool?: School;\n\t\tstudents?: User[];\n\t\tteachers?: User[];\n\t\tsubstitutionTeachers?: User[];\n\t}): Course => {\n\t\tconst course = new Course({\n\t\t\tname: 'course #1',\n\t\t\tdescription: 'course #1 description',\n\t\t\tcolor: '#FFFFFF',\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...(props || {}),\n\t\t});\n\t\treturn course;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst school = schoolFactory.build();\n\tschool._id = new ObjectId();\n\tschool.id = school._id.toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId: school.id, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/repositories/learnroom/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateHardcodedTestDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromReferenceGroup(new ObjectId().toString(), [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromSingleReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hardcodedTestDashboardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0000d213816abba584714c0a'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { name?: string }): School => {\n\t\tconst school = new School({\n\t\t\tname: 'school #1',\n\t\t\t...props,\n\t\t});\n\t\treturn school;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { firstName?: string; lastName?: string; email?: string }): User => {\n\t\tconst user = new User({\n\t\t\tfirstName: 'John',\n\t\t\tlastName: 'Doe',\n\t\t\temail: `user.${Date.now()}@example.com`,\n\t\t\troles: [],\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...props,\n\t\t});\n\t\treturn user;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
