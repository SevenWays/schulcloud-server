var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.137,1,2.778]],["body/classes/Account.html",[0,0.151,1,4.011,2,0.933,3,0.218,4,0.18,5,0.131,6,4.315,7,1.846,8,3.523,9,0.431,10,1.046,11,7.193,12,2.334,13,5.765,14,2.873,15,2.733,16,1.531,17,2.821,18,1.3,19,3.823,20,3.85,21,0.899,22,4.901,23,0.862,24,0.01,25,0.655,26,0.593,27,0.694,28,2.595,29,2.094,30,2.868,31,4.901,32,1.813,33,2.29,34,1.417,35,4.782,36,3.64,37,5.669,38,4.901,39,1.091,40,4.901,41,2.422,42,2.569,43,3.25,44,2.466,45,2.466,46,2.569,47,2.466,48,2.378,49,2.08,50,2.466,51,2.288,52,2.016,53,2.016,54,0.398,55,1.075,56,4.782,57,2.562,58,1.3,59,1.519,60,1.267,61,4.901,62,2.378,63,4.315,64,0.205,65,1.791,66,2.378,67,3.64,68,4.315,69,3.409,70,3.053,71,2.08,72,2.562,73,4.901,74,4.901,75,3.64,76,0.005,77,0.007,78,0.005]],["title/classes/ApiValidationError.html",[0,0.137,79,2.778]],["body/classes/ApiValidationError.html",[0,0.172,2,1.063,3,0.248,4,0.205,5,0.149,7,2.007,9,0.492,10,1.138,18,1.481,21,0.881,23,0.983,24,0.01,25,0.746,26,0.602,27,0.79,39,1.052,43,3.296,54,0.387,64,0.234,65,2.041,76,0.006,77,0.008,78,0.006,79,4.362,80,6.165,81,4.916,82,5.679,83,3.79,84,2.712,85,3.81,86,2.963,87,1.765,88,6.735,89,5.585,90,6.43,91,5.585,92,6.735,93,2.228,94,5.585,95,5.585,96,5.585,97,5.585,98,5.585,99,1.372,100,3.169,101,4.476,102,1.272,103,5.585,104,4.916,105,4.476,106,3.171,107,3.661,108,2.37,109,4.147,110,3.885,111,2.919,112,3.479,113,5.585]],["title/classes/ApiValidationErrorResponse.html",[0,0.137,114,3.574]],["body/classes/ApiValidationErrorResponse.html",[0,0.172,2,1.061,3,0.248,4,0.204,5,0.149,7,2.005,9,0.491,10,1.136,18,1.479,21,0.731,23,0.981,24,0.01,25,0.745,26,0.532,27,0.789,34,1.297,54,0.423,64,0.233,76,0.006,77,0.008,78,0.006,79,5.249,84,2.709,85,3.806,86,2.709,92,6.73,100,4.338,106,3.167,107,4.47,108,2.366,110,3.878,114,5.607,115,6.73,116,4.908,117,1.98,118,4.357,119,3.97,120,4.592,121,4.034,122,6.996,123,5.575,124,5.677,125,5.575,126,4.14,127,5.575,128,5.575,129,1.878,130,5.575,131,5.575,132,5.575,133,6.996,134,6.996,135,5.575,136,1.476,137,6.996,138,5.575]],["title/modules/AuthModule.html",[139,1.245,140,3.102]],["body/modules/AuthModule.html",[0,0.185,3,0.267,4,0.22,5,0.16,24,0.01,54,0.48,64,0.251,76,0.007,77,0.008,78,0.007,102,1.364,139,2.205,140,5.966,141,2.32,142,2.713,143,3.4,144,3.4,145,3.132,146,3.35,147,3.426,148,5.275,149,5.275,150,5.966,151,4.151,152,3.26,153,2.713,154,5.992,155,7.315,156,4.45,157,5.992,158,5.275,159,5.992,160,3.933,161,4.803,162,7.315,163,5.992,164,5.992,165,5.992,166,3.132,167,5.992,168,3.015]],["title/modules/AuthorizationModule.html",[139,1.245,169,2.927]],["body/modules/AuthorizationModule.html",[0,0.184,3,0.265,4,0.219,5,0.159,24,0.01,54,0.454,64,0.249,76,0.007,77,0.008,78,0.007,102,1.357,139,2.2,141,2.307,142,2.698,143,3.381,144,3.381,145,3.115,146,3.342,147,3.689,151,4.137,152,3.242,153,2.698,166,3.811,169,5.856,170,5.246,171,5.246,172,5.246,173,5.246,174,5.623,175,5.317,176,5.336,177,5.959,178,5.959,179,5.959,180,2.791,181,5.246]],["title/injectables/AuthorizationService.html",[175,2.647,182,1.124]],["body/injectables/AuthorizationService.html",[0,0.127,3,0.183,4,0.151,5,0.11,9,0.362,12,2.385,18,1.091,21,0.743,23,1.251,24,0.01,25,0.95,26,0.495,27,1.006,34,0.763,39,1.064,54,0.393,55,1.291,60,1.064,64,0.172,76,0.005,77,0.006,78,0.005,87,1.442,99,1.836,102,0.937,129,1.747,136,1.207,175,3.396,176,4.818,180,1.927,181,3.622,182,1.442,183,1.803,184,3.622,185,3.003,186,5.79,187,5.79,188,6.578,189,4.115,190,4.115,191,4.115,192,3.087,193,3.704,194,4.037,195,4.771,196,3.657,197,4.115,198,3.113,199,5.722,200,3.502,201,4.471,202,2.909,203,3.756,204,4.115,205,4.115,206,5.28,207,3.622,208,4.115,209,3.868,210,4.249,211,5.037,212,3.564,213,4.585,214,1.927,215,3.622,216,1.996,217,4.722,218,3.756,219,2.981,220,4.115,221,4.115,222,3.298,223,4.115,224,4.115,225,4.115,226,5.722,227,4.115,228,4.115,229,2.442,230,4.115,231,5.722,232,4.115,233,4.115]],["title/classes/BaseEntity.html",[0,0.137,51,1.584]],["body/classes/BaseEntity.html",[0,0.237,2,1.076,3,0.252,4,0.207,5,0.151,7,1.62,8,2.995,9,0.498,10,1.25,14,3.03,15,2.399,16,1.615,17,2.477,21,0.738,24,0.01,26,0.491,28,2.516,29,1.89,30,2.658,34,1.427,39,1.058,41,3.03,42,3.215,46,3.215,51,2.862,54,0.39,55,1.344,58,1.872,59,1.753,64,0.295,76,0.006,77,0.008,78,0.006,84,2.189,234,4.531,235,5.654,236,5.654,237,2.955,238,4.531,239,4.198,240,4.531,241,4.531,242,4.977,243,3.522,244,2.743,245,4.977,246,2.56,247,4.531,248,3.356,249,2.126,250,3.076,251,1.953,252,4.977,253,4.531,254,4.977,255,3.933,256,3.711,257,4.198,258,4.531,259,4.977]],["title/classes/BaseEntityWithTimestamps.html",[0,0.137,8,1.892]],["body/classes/BaseEntityWithTimestamps.html",[0,0.228,2,0.987,3,0.231,4,0.19,5,0.138,7,1.915,8,3.137,9,0.456,10,1.201,14,3.111,15,3.137,16,1.658,17,3.239,21,0.864,24,0.01,26,0.544,28,2.642,29,2.067,30,2.697,32,1.684,33,2.127,34,1.498,39,1.074,41,3.038,42,3.223,43,2.666,46,3.223,48,2.516,49,2.201,51,2.938,52,2.133,53,2.133,54,0.37,55,1.303,58,1.772,59,1.608,64,0.28,76,0.006,77,0.007,78,0.006,84,2.009,234,4.157,237,2.711,238,4.157,239,3.852,240,4.157,241,4.157,242,4.566,243,3.231,244,2.516,245,4.566,246,2.348,247,4.157,248,3.079,249,1.951,250,2.822,251,1.792,252,4.566,253,4.157,254,4.566,255,3.608,256,3.405,257,3.852,258,4.157,259,4.566,260,5.187,261,5.187,262,5.187,263,5.187]],["title/classes/BusinessError.html",[0,0.137,82,2.927]],["body/classes/BusinessError.html",[0,0.226,2,0.973,3,0.227,4,0.187,5,0.136,7,1.897,9,0.45,10,1.075,18,1.756,21,0.861,23,0.9,24,0.01,25,0.683,26,0.607,27,0.723,34,0.948,39,1.133,54,0.406,64,0.214,65,1.868,70,4.123,71,2.809,76,0.006,77,0.007,78,0.006,82,4.345,83,3.845,84,3.326,85,4.224,86,3.191,87,1.668,88,6.835,93,2.641,99,1.256,100,4.166,101,6.223,102,1.164,109,5.452,117,1.816,121,3.907,136,1.078,264,4.501,265,4.166,266,4.604,267,3.601,268,4.604,269,3.757,270,3.929,271,5.884,272,5.113,273,5.401,274,6.62,275,5.113,276,5.113,277,5.113,278,5.113,279,5.113,280,5.113,281,4.501,282,6.62,283,5.113,284,4.345,285,6.62,286,5.113]],["title/modules/CoreModule.html",[139,1.245,287,3.102]],["body/modules/CoreModule.html",[0,0.171,3,0.247,4,0.204,5,0.148,24,0.01,54,0.456,64,0.233,71,2.962,76,0.006,77,0.008,78,0.006,102,1.265,108,2.962,117,1.974,139,2.304,141,2.151,142,2.515,143,3.153,144,3.153,145,2.904,146,2.357,147,2.602,151,3.961,152,3.022,153,2.515,166,3.649,287,6.175,288,4.891,289,4.891,290,5.857,291,5.857,292,4.998,293,5.857,294,5.556,295,4.348,296,6.981,297,4.348,298,5.595,299,5.595,300,6.981,301,4.582,302,5.184,303,4.582,304,6.981,305,3.961,306,4.855,307,6.145,308,6.981,309,5.184,310,5.556,311,5.556,312,5.556,313,5.556]],["title/classes/CourseInfo.html",[0,0.137,314,2.531]],["body/classes/CourseInfo.html",[0,0.18,2,1.111,3,0.26,4,0.214,5,0.156,7,2.063,9,0.514,10,1.17,14,2.708,16,1.443,18,1.549,21,0.852,23,1.027,24,0.01,25,1.118,26,0.593,27,0.826,29,1.918,30,2.697,39,1.121,41,2.196,42,2.33,43,2.872,46,2.33,51,2.973,52,2.402,53,2.402,54,0.398,55,1.201,58,1.549,59,1.81,60,1.51,62,2.833,64,0.244,65,2.134,76,0.006,77,0.008,78,0.006,314,4.086,315,6.872,316,3.177,317,4.086,318,4.274,319,5.008,320,3.052,321,3.637,322,3.833,323,4.68]],["title/classes/CourseNews.html",[0,0.137,324,2.531]],["body/classes/CourseNews.html",[0,0.184,2,0.541,3,0.126,4,0.236,5,0.076,7,1.842,8,2.878,9,0.25,10,0.709,12,0.814,14,2.741,15,2.527,16,1.529,17,2.609,21,0.901,23,0.5,24,0.01,25,0.709,26,0.592,27,1.058,28,2.31,29,2.105,30,2.856,32,1.62,33,2.046,34,1.31,39,1.145,41,2.24,42,2.376,43,3.429,44,1.429,45,1.429,46,2.376,47,1.429,48,2.116,49,1.851,50,1.429,51,2.283,52,1.168,53,1.168,54,0.391,55,1.072,57,3.113,58,0.754,59,0.881,60,0.735,64,0.269,65,1.038,66,1.378,72,2.775,76,0.003,77,0.005,78,0.003,86,2.627,87,1.099,99,0.698,136,0.599,192,2.283,193,2.997,194,3.29,196,2.184,214,1.331,218,1.865,246,2.404,251,1.834,265,2.475,284,1.865,314,3.013,317,1.612,320,2.775,324,2.475,325,1.865,326,3.066,327,3.239,328,2.972,329,3.233,330,2.89,331,4.143,332,2.627,333,3.91,334,3.71,335,2.487,336,3.239,337,4.33,338,2.841,339,2.277,340,2.863,341,3.496,342,3.307,343,2.863,344,2.277,345,2.277,346,3.034,347,3.91,348,3.034,349,2.863,350,2.195,351,2.717,352,3.034,353,2.277,354,2.277,355,3.24,356,2.116,357,2.277,358,2.888,359,3.151,360,2.277,361,2.277,362,2.277,363,2.717,364,2.277,365,2.717,366,2.277,367,3.034,368,2.277,369,2.277,370,2.277,371,2.277,372,2.277,373,2.277,374,2.277,375,3.034,376,4.003,377,2.277,378,1.286,379,3.24,380,1.976,381,2.475,382,1.546,383,0.569,384,1.976,385,1.378,386,1.976,387,1.976,388,1.976,389,1.976,390,1.976,391,1.976,392,1.976,393,1.976,394,3.034,395,2.404,396,2.487,397,2.404,398,2.326,399,2.404,400,3.151,401,2.775,402,1.976,403,3.034,404,1.976,405,1.976,406,3.693,407,1.686,408,1.686]],["title/classes/CourseTaskInfo.html",[0,0.137,409,2.778]],["body/classes/CourseTaskInfo.html",[0,0.136,2,0.843,3,0.197,4,0.162,5,0.118,7,1.724,8,3.434,9,0.39,10,0.977,12,1.269,14,2.758,15,2.553,16,1.47,17,2.636,18,1.174,19,3.571,20,3.721,21,0.897,23,0.779,24,0.01,25,0.98,26,0.602,27,0.626,28,1.968,29,2.093,30,2.796,32,1.994,33,2.519,34,1.527,35,5.874,36,5.075,37,5.297,39,1.088,41,2.263,42,2.4,43,3.156,44,2.228,45,2.228,46,2.4,47,2.228,48,2.148,49,1.878,50,2.228,51,2.137,52,1.821,53,1.821,54,0.378,55,1.004,56,5.446,57,2.314,58,1.174,59,1.372,60,1.145,62,2.148,64,0.252,65,1.618,66,2.148,72,3.573,76,0.005,77,0.007,78,0.005,129,1.088,249,2.263,316,2.408,321,2.758,379,2.408,409,3.748,410,6.486,411,3.285,412,6.835,413,4.754,414,6.456,415,5.878,416,3.897,417,5.075,418,4.427,419,4.427,420,5.041,421,4.427,422,6.017,423,4.427,424,6.017,425,4.427,426,3.897,427,3.548]],["title/classes/CreateNewsParams.html",[0,0.137,428,2.927]],["body/classes/CreateNewsParams.html",[0,0.201,2,0.949,3,0.222,4,0.183,5,0.133,9,0.439,10,1.058,16,1.305,21,0.834,24,0.01,26,0.555,28,2.13,29,1.96,39,1.163,54,0.401,55,1.45,64,0.209,76,0.005,77,0.007,78,0.005,86,3.09,117,3.003,129,1.225,193,3.077,195,4.116,200,2.948,214,3.397,326,3.021,327,3.163,328,3.495,330,3.518,428,4.275,429,6.559,430,3.702,431,3.159,432,4.836,433,3.543,434,6.512,435,4.389,436,4.985,437,5.219,438,3.695,439,5.219,440,4.836,441,4.985,442,4.985,443,4.53,444,4.53,445,4.79,446,4.985,447,4.985,448,5.045,449,5.219,450,3.695,451,4.985,452,4.985,453,4.857,454,2.508,455,5.733,456,6.395,457,3.105,458,3.467,459,3.702,460,3.105]],["title/controllers/DelayController.html",[461,2.089,462,3.312]],["body/controllers/DelayController.html",[0,0.179,3,0.258,4,0.213,5,0.155,9,0.511,21,0.607,24,0.01,29,1.427,32,1.809,34,1.077,54,0.431,64,0.243,76,0.006,77,0.008,78,0.006,87,1.809,99,1.427,102,1.322,106,2.629,129,1.763,136,1.514,146,2.464,168,3.611,185,2.846,202,2.929,219,2.317,306,4.991,461,3.361,462,5.783,463,5.751,464,4.655,465,7.161,466,5.808,467,4.991,468,3.778,469,4.991,470,3.751,471,5.329,472,5.113,473,5.808,474,3.447,475,4.655,476,5.751,477,5.113,478,5.113,479,5.808,480,4.313,481,2.72,482,4.655,483,4.71,484,4.655,485,3.036,486,4.655,487,4.313]],["title/injectables/DurationLoggingInterceptor.html",[182,1.124,488,3.574]],["body/injectables/DurationLoggingInterceptor.html",[0,0.175,3,0.252,4,0.208,5,0.151,9,0.498,10,1.148,21,0.738,23,0.997,24,0.01,25,0.757,26,0.394,27,0.801,32,1.428,33,1.803,34,1.31,54,0.446,64,0.237,76,0.006,77,0.008,78,0.006,83,3.373,87,1.781,99,1.392,102,1.289,117,2.012,129,1.392,136,1.195,182,1.781,183,2.481,303,4.638,397,3.486,471,5.246,483,4.638,488,5.663,489,6.779,490,4.986,491,7.065,492,5.246,493,4.638,494,3.486,495,4.214,496,6.22,497,6.22,498,5.987,499,7.098,500,5.664,501,2.85,502,6.779,503,7.065,504,5.664,505,4.539,506,5.664,507,4.986,508,4.986,509,3.718,510,5.664,511,3.939,512,7.065,513,5.664,514,5.664,515,5.664]],["title/modules/ErrorModule.html",[139,1.245,290,3.102]],["body/modules/ErrorModule.html",[0,0.195,3,0.281,4,0.232,5,0.168,24,0.01,32,1.905,54,0.447,64,0.265,76,0.007,77,0.008,78,0.007,102,1.44,117,2.246,139,2.11,141,2.449,146,2.683,212,4.707,290,5.256,305,4.288,309,6.218,474,3.753,485,3.305,516,6.324,517,6.652,518,4.485,519,4.288,520,3.666,521,5.256,522,6.324,523,6.324,524,5.068]],["title/classes/ErrorResponse.html",[0,0.137,100,2.531]],["body/classes/ErrorResponse.html",[0,0.179,2,1.107,3,0.259,4,0.213,5,0.155,18,1.906,21,0.608,23,1.024,24,0.01,25,0.777,26,0.582,27,0.823,39,1.209,54,0.322,64,0.243,76,0.006,77,0.008,78,0.006,83,3.566,84,3.152,85,4.24,86,3.018,93,3.109,100,4.077,101,4.663,102,1.325,108,3.307,117,2.552,118,4.855,119,4.077,120,4.716,121,3.615,281,5.122,525,5.122,526,5.818,527,5.818,528,5.818,529,4.663,530,4.997,531,5.818,532,4.663,533,5.122,534,3.453,535,2.469,536,3.302,537,3.819,538,4.663]],["title/injectables/FeathersAuthProvider.html",[176,2.778,182,1.124]],["body/injectables/FeathersAuthProvider.html",[0,0.125,3,0.181,4,0.149,5,0.108,9,0.358,12,2.312,14,1.53,18,1.079,21,0.806,23,1.356,24,0.01,25,1.03,26,0.537,27,1.091,34,0.754,39,1.023,41,2.459,51,2.016,54,0.412,58,1.079,60,1.052,64,0.17,76,0.004,77,0.006,78,0.004,87,1.431,99,1.828,102,0.926,129,2.04,136,1.626,176,3.535,182,1.431,183,1.782,185,3.155,192,3.155,193,3.27,194,3.837,195,4.015,196,3.06,201,4.303,202,3.122,203,3.726,215,3.581,216,1.973,219,2.969,229,2.414,237,2.126,332,1.575,356,3.61,383,0.815,467,3.948,468,1.973,494,2.96,539,6.963,540,3.26,541,5.676,542,5.755,543,5.676,544,5.676,545,5.755,546,4.068,547,4.575,548,4.068,549,5.676,550,4.068,551,3.581,552,4.068,553,5.676,554,4.068,555,5.676,556,4.068,557,4.068,558,4.068,559,4.996,560,4.068,561,3.581,562,5.676,563,3.581,564,5.676,565,5.676,566,4.068,567,4.068,568,2.96,569,4.068,570,5.676,571,5.676,572,5.676,573,4.068,574,2.829,575,4.068,576,4.068,577,1.973,578,4.068,579,2.308,580,4.549,581,3.581,582,4.068,583,4.068,584,3.26]],["title/interfaces/FeathersError.html",[383,0.894,585,3.102]],["body/interfaces/FeathersError.html",[3,0.288,4,0.237,5,0.172,7,2.194,9,0.569,10,1.244,24,0.01,26,0.614,39,1.201,64,0.271,76,0.007,77,0.008,78,0.007,84,3.266,93,3.255,108,3.249,383,1.295,585,5.325,586,2.503,587,5.69,588,5.69,589,7.425]],["title/modules/FeathersModule.html",[139,1.245,174,2.927]],["body/modules/FeathersModule.html",[0,0.181,3,0.261,4,0.215,5,0.156,24,0.01,54,0.4,64,0.246,76,0.006,77,0.008,78,0.006,102,1.337,117,2.086,139,2.341,141,3.03,142,2.658,143,3.332,144,3.332,145,3.069,146,3.32,147,3.665,151,4.1,152,3.194,153,2.658,174,5.677,180,3.665,470,3.776,547,5.307,561,5.169,568,3.271,590,5.169,591,5.169,592,5.169,593,5.872,594,4.5,595,4.1,596,3.776,597,3.505,598,4.288,599,4.742,600,4.742,601,4.742,602,4.742,603,5.79,604,3.384]],["title/interfaces/FeathersService.html",[383,0.894,605,3.312]],["body/interfaces/FeathersService.html",[0,0.154,3,0.222,4,0.183,5,0.133,9,0.439,16,1.305,21,0.681,23,1.146,24,0.01,25,0.87,26,0.535,27,0.921,39,0.686,54,0.441,60,1.289,64,0.322,71,2.115,76,0.005,77,0.007,78,0.005,87,1.641,99,1.6,102,1.135,129,1.225,136,1.051,141,1.93,180,2.335,182,1.641,192,2.732,202,2.892,217,4.116,383,0.999,395,2.948,396,3.05,397,2.948,398,2.853,399,2.948,400,3.865,470,3.791,474,2.959,494,2.257,547,2.959,568,3.705,586,1.93,594,3.105,595,4.116,596,2.606,597,3.871,598,2.959,599,3.272,600,3.272,601,3.272,602,3.272,603,3.995,604,2.335,605,5.71,606,5.386,607,3.467,608,3.177,609,5.733,610,6.681,611,4.985,612,4.857,613,4.056,614,5.733,615,4.985,616,3.404,617,3.272,618,3.105,619,3.995,620,5.219,621,5.733,622,4.056,623,5.219,624,5.219,625,3.995,626,3.467,627,4.389,628,4.389,629,4.389,630,4.389,631,4.389]],["title/injectables/FeathersServiceProvider.html",[182,1.124,547,2.647]],["body/injectables/FeathersServiceProvider.html",[0,0.151,3,0.218,4,0.18,5,0.131,9,0.432,16,0.984,18,1.302,21,0.674,23,1.134,24,0.01,25,0.861,26,0.532,27,0.912,39,0.99,54,0.439,60,1.269,64,0.32,71,2.083,76,0.005,77,0.007,78,0.005,87,1.625,99,1.206,102,1.118,117,1.744,129,1.206,136,1.035,141,2.496,180,3.019,182,1.625,183,2.151,192,2.29,202,2.424,217,4.085,383,0.984,395,2.919,396,3.019,397,2.919,398,2.824,399,2.919,400,3.826,470,3.996,474,2.914,494,2.222,547,3.826,568,3.815,594,4.015,595,4.338,596,3.37,597,4.135,598,3.826,599,4.232,600,4.232,601,4.232,602,4.232,603,5.167,604,3.019,605,5.676,606,5.345,607,3.414,608,2.151,609,4.321,610,5.769,612,4.273,614,4.321,616,3.37,617,3.222,618,3.058,619,3.934,620,5.167,621,5.675,622,4.015,623,5.167,624,5.167,625,3.934,626,4.484,627,4.321,628,4.321,629,5.675,630,4.321,631,4.321,632,6.447,633,4.909,634,4.909,635,4.909,636,3.414]],["title/classes/FileTaskInfo.html",[0,0.137,637,3.102]],["body/classes/FileTaskInfo.html",[0,0.159,2,0.982,3,0.23,4,0.189,5,0.138,7,1.909,8,3.566,9,0.454,10,1.082,12,1.479,14,2.931,15,2.826,16,1.562,17,2.918,18,1.369,19,3.954,20,3.914,21,0.899,23,0.908,24,0.01,25,1.041,26,0.585,27,0.73,28,2.179,29,2.093,30,2.854,32,1.679,33,2.121,34,1.235,39,1.072,41,2.505,42,2.657,43,3.296,44,2.597,45,2.597,46,2.657,47,2.597,48,2.504,49,2.19,50,2.597,51,2.366,52,2.123,53,2.123,54,0.408,55,1.111,58,1.369,59,1.6,60,1.335,62,2.504,64,0.216,65,1.886,66,2.504,76,0.006,77,0.007,78,0.006,316,2.808,329,3.711,379,2.808,411,3.218,420,4.594,637,4.633,638,6.86,639,5.162,640,5.162,641,5.162,642,3.064]],["title/interfaces/GlobalConstants.html",[383,0.894,643,3.312]],["body/interfaces/GlobalConstants.html",[3,0.276,4,0.228,5,0.166,9,0.547,10,1.215,24,0.01,26,0.558,27,1.178,39,1.222,54,0.344,64,0.26,76,0.007,77,0.008,78,0.007,129,1.837,383,1.245,586,2.406,643,5.957,644,4.98,645,7.498,646,7.498,647,7.498,648,5.993,649,6.213,650,5.993,651,3.526,652,4.078]],["title/classes/GlobalErrorFilter.html",[0,0.137,521,3.102]],["body/classes/GlobalErrorFilter.html",[0,0.151,2,0.632,3,0.148,4,0.122,5,0.088,9,0.292,10,0.797,21,0.61,23,0.863,24,0.01,25,0.78,26,0.479,27,0.694,30,1.147,32,0.837,33,1.057,34,1.275,49,1.409,54,0.412,64,0.139,76,0.004,77,0.005,78,0.004,79,3.634,82,4.23,83,2.556,84,2.496,85,2.669,86,2.259,87,1.471,99,1.583,100,4.569,102,0.756,106,1.504,107,1.736,108,3.805,118,2.069,119,4.505,121,1.671,126,2.466,129,2.137,136,1.752,180,2.733,217,2.784,251,1.147,267,2.669,271,5.165,335,2.733,383,0.666,395,2.221,396,2.298,397,2.221,398,2.149,399,1.504,494,2.642,495,4.208,509,3.221,518,4.081,520,2.38,521,3.413,579,1.885,585,4.483,589,2.924,596,1.736,604,1.556,618,2.069,653,4.786,654,2.31,655,5.835,656,5.511,657,4.676,658,4.907,659,3.321,660,4.907,661,5.768,662,5.835,663,6.445,664,3.321,665,3.83,666,5.835,667,3.321,668,3.321,669,2.924,670,2.924,671,3.321,672,3.321,673,2.662,674,2.924,675,2.662,676,5.768,677,2.662,678,2.466,679,2.924,680,3.221,681,2.662,682,2.31,683,3.634,684,2.069,685,2.662,686,2.924,687,4.319,688,2.924,689,2.662,690,2.924,691,2.924,692,2.924,693,2.924,694,2.924,695,4.058,696,3.932,697,3.321,698,3.932,699,5.511,700,3.321,701,3.321,702,3.321,703,3.932,704,3.321,705,3.321,706,4.907,707,3.321,708,3.321,709,2.18,710,4.319,711,2.31,712,2.924,713,2.069,714,2.18,715,4.319,716,3.174,717,2.662,718,4.319,719,2.924,720,3.932,721,2.924,722,2.924,723,2.466,724,2.662,725,2.924,726,2.924,727,2.662,728,2.662,729,2.662,730,2.466,731,2.466,732,2.924,733,2.924,734,2.924,735,2.924,736,6.053,737,2.662,738,6.053,739,2.924,740,2.662,741,2.924,742,3.321,743,3.321,744,3.321,745,4.907,746,3.321,747,3.321]],["title/classes/GlobalValidationPipe.html",[0,0.137,748,3.312]],["body/classes/GlobalValidationPipe.html",[0,0.234,2,1.048,3,0.245,4,0.202,5,0.147,7,1.99,10,0.895,18,2.017,21,0.576,24,0.01,26,0.529,29,1.706,32,1.75,34,1.021,54,0.384,64,0.231,65,2.013,76,0.006,77,0.008,78,0.006,79,3.431,90,5.564,102,1.254,107,4.172,117,1.957,121,2.771,126,4.09,136,1.162,251,2.398,266,4.829,305,3.94,385,3.688,431,3.688,453,3.269,457,4.324,535,2.337,577,2.672,579,3.126,612,3.269,748,5.155,749,6.112,750,4.849,751,5.564,752,4.121,753,5.564,754,5.564,755,5.564,756,4.557,757,7.603,758,5.508,759,4.557,760,3.831,761,4.415,762,5.508,763,2.672,764,3.615,765,5.508,766,5.508,767,4.09,768,5.508,769,5.508,770,5.508,771,4.09,772,4.415,773,5.508,774,3.126,775,3.831,776,5.508,777,4.415,778,3.431,779,5.508,780,4.09,781,3.126,782,5.508,783,5.508]],["title/interfaces/ICreateNews.html",[383,0.894,784,2.927]],["body/interfaces/ICreateNews.html",[3,0.24,4,0.198,5,0.144,9,0.475,10,1.113,20,2.618,24,0.01,26,0.598,28,2.463,39,1.149,54,0.299,55,0.9,60,1.395,64,0.355,76,0.006,77,0.008,78,0.006,86,3.068,117,1.917,129,1.684,192,2.675,193,2.908,194,3.654,195,3.889,200,2.443,214,2.528,246,3.103,321,3.361,326,3.02,327,3.492,328,3.471,330,3.844,332,2.09,378,2.443,382,2.936,383,1.675,586,2.09,608,2.364,784,4.499,785,3.754,786,6.033,787,6.35,788,5.493,789,3.542,790,3.754,791,5.493,792,3.754,793,3.754,794,4.751,795,3.542,796,3.361,797,2.715]],["title/interfaces/ICurrentUser.html",[383,0.894,798,2.531]],["body/interfaces/ICurrentUser.html",[1,4.377,3,0.25,4,0.206,5,0.15,7,1.609,9,0.494,10,1.141,16,1.611,24,0.01,26,0.56,39,1.253,64,0.294,76,0.006,77,0.008,78,0.006,93,2.803,201,4.372,210,5.218,249,2.642,356,4.095,383,1.408,586,2.174,798,4.352,799,4.5,800,4.5,801,5.968,802,4.201,803,4.791,804,3.673,805,4.887,806,3.905,807,4.169,808,4.5,809,4.942,810,4.5,811,4.5,812,4.5,813,4.5,814,4.5,815,3.685]],["title/interfaces/IErrorType.html",[273,3.102,383,0.894]],["body/interfaces/IErrorType.html",[3,0.288,4,0.238,5,0.173,9,0.57,10,1.245,24,0.01,26,0.614,39,1.23,64,0.271,76,0.007,77,0.008,78,0.007,83,3.577,86,3.268,109,6.267,273,5.332,383,1.298,586,2.508,816,5.702,817,5.702]],["title/interfaces/ILogger.html",[383,0.894,818,3.312]],["body/interfaces/ILogger.html",[3,0.246,4,0.203,5,0.147,9,0.486,21,0.861,23,1.449,24,0.01,25,1.101,26,0.573,27,1.233,39,1.243,64,0.231,76,0.006,77,0.008,78,0.006,85,4.481,87,1.754,99,2.024,108,2.952,383,1.108,501,4.513,586,2.14,613,5.238,818,5.167,819,4.866,820,6.125,821,4.567,822,6.958,823,6.958,824,5.527,825,5.527,826,6.125,827,6.103,828,5.527,829,6.125,830,5.527,831,5.527,832,5.527,833,6.125,834,5.527,835,4.866,836,4.866]],["title/interfaces/INewsProperties.html",[376,2.778,383,0.894]],["body/interfaces/INewsProperties.html",[0,0.212,3,0.17,4,0.277,5,0.102,7,1.973,8,2.306,9,0.337,10,0.883,12,1.096,16,0.766,24,0.01,25,0.511,26,0.571,27,1.124,28,2.252,30,2.744,34,1.172,39,1.189,51,1.931,54,0.43,55,1.213,57,2.841,58,1.014,59,1.186,60,0.989,64,0.304,65,1.398,66,1.855,72,3.305,76,0.004,77,0.006,78,0.004,86,2.926,136,0.807,192,2.999,193,2.921,194,3.067,196,1.573,214,1.791,218,2.51,246,2.862,251,2.184,265,3.084,284,2.51,314,3.084,317,2.17,320,1.999,324,2.17,325,2.51,326,2.956,327,3.371,328,3.31,329,3.802,330,3.528,331,5.058,332,3.01,333,4.774,334,4.53,335,1.791,337,4.508,340,2.51,341,3.439,343,2.51,346,2.66,347,3.568,348,2.66,349,2.51,350,1.924,351,2.382,352,2.66,355,3.439,356,1.855,358,3.745,359,4.086,363,2.382,365,2.382,367,2.66,375,2.66,376,4.288,378,1.732,379,3.745,380,2.66,381,3.084,382,2.081,383,0.766,384,2.66,385,1.855,386,2.66,387,2.66,388,2.66,389,2.66,390,2.66,391,2.66,392,2.66,393,2.66,394,3.78,395,2.862,396,2.961,397,2.862,398,2.77,399,2.862,400,3.753,401,3.305,402,2.66,403,3.78,404,2.66,405,2.66,406,4.398,407,2.27,408,2.27,586,1.481]],["title/interfaces/INewsScope.html",[383,0.894,795,2.927]],["body/interfaces/INewsScope.html",[3,0.244,4,0.201,5,0.146,9,0.483,10,1.125,20,2.663,24,0.01,26,0.584,27,1.128,28,1.795,39,0.953,54,0.304,55,0.916,60,1.419,64,0.357,76,0.006,77,0.008,78,0.006,86,2.126,117,1.95,129,1.702,192,2.696,193,2.939,194,3.682,195,3.931,200,2.485,214,2.571,246,3.136,321,3.419,326,3.028,327,3.505,328,2.405,330,2.663,332,2.126,378,2.485,382,2.986,383,1.682,586,2.126,608,2.405,784,3.603,785,3.818,786,4.832,787,5.552,788,5.552,789,3.603,790,3.818,791,6.39,792,3.818,793,3.818,794,6.099,795,4.547,796,4.966,797,3.819]],["title/interfaces/IPagination.html",[383,0.894,837,2.426]],["body/interfaces/IPagination.html",[3,0.293,4,0.242,5,0.176,9,0.581,10,1.259,24,0.01,26,0.539,27,1.201,64,0.276,76,0.007,77,0.009,78,0.007,93,3.499,383,1.322,586,2.555,837,4.215,838,5.807,839,5.573,840,5.573]],["title/modules/InterceptorModule.html",[139,1.245,291,3.102]],["body/modules/InterceptorModule.html",[0,0.183,3,0.265,4,0.218,5,0.158,24,0.01,54,0.435,64,0.249,76,0.007,77,0.008,78,0.007,102,1.354,117,2.113,126,4.417,139,2.033,141,2.303,146,2.524,248,4.322,249,2.237,291,5.065,305,4.132,306,5.474,474,3.53,483,4.78,485,3.806,524,5.836,604,3.842,752,4.322,763,3.533,774,3.375,841,5.948,842,5.836,843,5.065,844,5.407,845,4.536,846,8.202,847,3.664,848,5.407,849,5.836,850,6.091,851,3.705]],["title/injectables/JwtAuthGuard.html",[182,1.124,852,3.312]],["body/injectables/JwtAuthGuard.html",[0,0.208,3,0.301,4,0.248,5,0.18,7,1.938,24,0.01,54,0.435,64,0.283,76,0.007,77,0.009,78,0.007,102,1.54,156,5.023,182,1.982,183,2.963,852,5.839,853,5.955,854,5.955,855,6.764,856,6.764]],["title/interfaces/JwtConstants.html",[160,2.927,383,0.894]],["body/interfaces/JwtConstants.html",[3,0.262,4,0.216,5,0.157,9,0.519,10,1.176,24,0.01,26,0.569,39,1.211,54,0.326,64,0.303,69,5.837,75,5.377,76,0.006,77,0.008,78,0.006,129,1.779,160,5.367,180,2.76,201,3.206,249,2.216,318,4.298,383,1.181,385,2.859,586,2.282,801,5.377,807,4.376,808,4.723,810,4.723,811,4.723,812,4.723,813,4.723,814,4.723,815,3.868,857,4.723,858,7.388,859,6.374,860,5.893,861,5.893,862,4.723,863,3.868,864,4.723,865,4.099,866,3.671,867,5.893,868,5.893,869,5.893,870,4.723,871,5.893,872,5.893,873,5.893,874,5.188,875,5.188]],["title/interfaces/JwtPayload.html",[383,0.894,806,3.102]],["body/interfaces/JwtPayload.html",[1,3.437,3,0.245,4,0.202,5,0.147,7,1.992,9,0.486,10,1.129,16,1.393,24,0.01,26,0.585,39,1.245,64,0.291,76,0.006,77,0.008,78,0.006,93,3.353,201,3.002,210,4.097,249,3.004,356,3.372,383,1.393,586,2.137,798,4.318,799,4.422,800,4.422,801,4.097,802,2.884,803,4.318,804,2.884,805,3.838,806,4.834,807,5.161,808,6.402,809,6.118,810,6.402,811,6.402,812,5.57,813,6.402,814,6.402,815,5.243]],["title/injectables/JwtStrategy.html",[150,3.102,182,1.124]],["body/injectables/JwtStrategy.html",[0,0.178,3,0.256,4,0.211,5,0.154,7,1.652,9,0.507,12,2.047,18,2.059,21,0.747,23,1.015,24,0.01,25,0.77,26,0.401,27,0.816,54,0.461,64,0.241,65,2.107,76,0.006,77,0.008,78,0.006,87,1.801,99,1.417,102,1.313,136,1.216,139,1.61,150,4.969,156,4.282,160,3.785,161,4.621,182,1.801,183,2.526,249,3.051,250,3.886,251,1.992,579,3.272,806,5.911,844,5.305,876,5.076,877,5.766,878,7.144,879,5.766,880,5.399,881,5.766,882,4.621,883,5.076,884,4.969,885,5.766,886,5.766,887,5.766,888,5.766,889,5.766,890,5.766,891,5.766,892,5.766,893,5.766,894,5.766,895,5.766,896,5.766,897,4.282,898,5.766]],["title/classes/LessonTaskInfo.html",[0,0.137,899,2.927]],["body/classes/LessonTaskInfo.html",[0,0.163,2,1.008,3,0.236,4,0.194,5,0.141,7,1.941,8,3.588,9,0.466,10,1.1,14,2.959,15,2.874,16,1.577,17,2.968,21,0.895,24,0.01,26,0.579,28,2.216,29,2.104,30,2.719,32,1.707,33,2.157,34,1.256,39,0.932,41,2.547,42,2.702,43,3.318,44,2.666,45,2.666,46,2.702,47,2.666,48,2.57,49,2.248,50,2.666,51,2.406,52,2.179,53,2.179,54,0.413,55,1.13,58,1.405,59,1.643,60,1.37,62,2.57,64,0.222,72,2.77,76,0.006,77,0.007,78,0.006,316,2.882,337,3.844,342,3.3,378,3.563,379,2.882,409,4.651,411,3.14,416,4.664,797,3.408,899,4.446,900,6.573,901,5.545,902,5.963,903,5.299,904,4.664]],["title/injectables/Logger.html",[182,1.124,495,2.331]],["body/injectables/Logger.html",[0,0.182,3,0.262,4,0.216,5,0.157,7,2.075,24,0.01,32,1.485,54,0.401,64,0.247,71,2.5,76,0.006,77,0.008,78,0.006,87,1.485,102,1.342,182,1.825,183,2.582,212,3.671,217,4.109,251,2.036,481,2.76,495,4.466,501,3.944,509,4.753,536,3.344,568,2.668,599,3.868,616,3.785,756,3.868,760,4.099,763,3.513,818,6.071,821,5.145,905,5.188,906,8.176,907,5.893,908,5.893,909,4.099,910,4.099,911,5.188,912,4.376,913,5.188,914,3.671,915,3.671,916,6.374,917,3.344,918,4.376,919,5.893,920,5.893,921,5.188,922,4.099,923,5.188,924,3.498,925,5.893,926,5.893,927,5.893]],["title/modules/LoggerModule.html",[139,1.245,292,2.647]],["body/modules/LoggerModule.html",[0,0.195,3,0.281,4,0.231,5,0.168,24,0.01,54,0.418,64,0.264,76,0.007,77,0.008,78,0.007,102,1.437,139,2.255,141,2.444,142,2.857,143,3.581,144,3.581,145,3.299,146,3.427,147,3.782,151,4.283,152,3.433,153,2.857,292,5.209,495,4.715,928,5.556,929,5.556,930,5.556,931,6.311,932,6.311]],["title/modules/MongoMemoryDatabaseModule.html",[139,1.245,933,3.312]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.146,3,0.211,4,0.174,5,0.126,18,1.256,21,0.658,23,0.833,24,0.01,25,0.633,26,0.438,27,0.67,34,0.878,54,0.434,58,1.67,59,1.468,64,0.315,76,0.005,77,0.007,78,0.005,83,2.074,87,1.193,99,1.547,102,1.078,129,1.852,136,1.59,139,2.104,141,1.833,146,2.009,147,2.218,166,2.475,185,2.584,202,2.367,219,2.821,238,3.795,249,1.781,335,2.948,474,2.81,481,2.948,485,3.29,493,4.132,494,3.202,509,3.108,608,2.074,613,2.949,617,4.132,713,2.949,924,2.81,933,5.251,934,5.667,935,5.726,936,5.667,937,3.795,938,4.735,939,6.295,940,7.101,941,4.735,942,4.642,943,6.907,944,7.846,945,4.735,946,5.541,947,6.04,948,3.795,949,6.225,950,7.247,951,2.949,952,3.795,953,4.168,954,5.541,955,5.045,956,5.045,957,4.168,958,4.132,959,3.795,960,3.108,961,3.293,962,3.516,963,3.795,964,3.293,965,4.168,966,3.516,967,5.541,968,4.168,969,2.297,970,4.168,971,4.168,972,4.735,973,3.108,974,4.735,975,4.735,976,5.045,977,3.293,978,3.516,979,3.293,980,3.516,981,4.735,982,4.735,983,4.735]],["title/classes/News.html",[0,0.137,326,1.541]],["body/classes/News.html",[0,0.193,2,0.594,3,0.139,4,0.246,5,0.083,7,1.919,8,3.095,9,0.275,10,0.761,12,0.894,14,2.35,15,1.987,16,1.409,17,2.052,18,0.828,21,0.892,23,0.824,24,0.01,25,0.835,26,0.588,27,1.106,28,2.191,29,2.063,30,2.881,32,1.417,33,1.79,34,1.242,39,1.147,41,1.762,42,1.869,43,2.806,44,1.57,45,1.57,46,1.869,47,1.57,48,1.514,49,1.324,50,1.57,51,2.379,52,1.283,53,1.283,54,0.404,55,1.118,57,3.267,58,0.828,59,0.967,60,0.807,64,0.28,65,1.14,66,1.514,72,2.939,76,0.003,77,0.005,78,0.003,86,2.724,87,1.181,99,0.767,136,0.658,192,2.379,193,3.095,194,3.412,196,2.313,214,1.462,218,2.048,246,2.546,251,1.943,265,2.658,284,2.048,314,2.658,317,2.658,320,3.267,324,1.771,325,2.048,326,2.96,327,3.215,328,3.081,329,3.37,330,3.032,331,4.347,332,2.724,333,4.102,334,3.893,335,2.634,336,3.478,337,4.355,340,3.075,341,3.644,342,3.503,343,3.075,346,3.258,347,4.102,348,3.258,349,3.075,350,2.357,351,2.918,352,3.258,355,3.4,356,2.272,358,3.059,359,3.338,363,2.918,365,2.918,367,3.258,375,3.258,376,4.544,378,1.413,379,3.4,380,2.17,381,2.658,382,1.698,383,0.625,384,2.17,385,1.514,386,2.17,387,2.17,388,2.17,389,2.17,390,2.17,391,2.17,392,2.17,393,2.17,394,3.258,395,2.546,396,2.634,397,2.546,398,2.464,399,2.546,400,3.338,401,2.939,402,2.17,403,3.258,404,2.17,405,2.17,406,3.911,407,1.852,408,1.852,984,4.684,985,3.121,986,3.121,987,3.121,988,3.121,989,3.121,990,3.121,991,3.121,992,3.121,993,3.121,994,3.121,995,3.121,996,3.121]],["title/controllers/NewsController.html",[461,2.089,997,3.312]],["body/controllers/NewsController.html",[0,0.116,3,0.168,4,0.138,5,0.1,9,0.332,12,1.96,16,1.078,21,0.756,23,1.273,24,0.01,25,0.966,26,0.504,27,1.023,29,1.777,34,0.699,39,1.108,54,0.452,55,0.898,64,0.158,76,0.004,77,0.006,78,0.004,83,1.652,87,1.356,99,1.777,102,0.858,129,1.979,136,1.526,168,1.897,185,3.121,200,2.436,202,3.073,216,1.829,217,3.053,219,2.886,326,2.823,332,2.083,350,2.707,428,4.49,431,3.755,454,1.897,461,1.766,577,3.043,594,2.349,612,4.464,616,3.279,716,2.927,751,3.022,798,4.874,880,2.623,997,3.995,998,3.319,999,3.319,1000,4.758,1001,4.658,1002,6.273,1003,4.363,1004,3.771,1005,4.658,1006,3.771,1007,5.691,1008,3.771,1009,5.38,1010,3.771,1011,7.521,1012,3.319,1013,4.758,1014,4.06,1015,4.49,1016,3.771,1017,3.771,1018,5.38,1019,3.771,1020,4.736,1021,5.38,1022,4.06,1023,5.38,1024,3.351,1025,4.736,1026,3.771,1027,4.758,1028,5.38,1029,3.771,1030,4.658,1031,3.319,1032,3.319,1033,5.031,1034,3.771,1035,3.771,1036,2.475,1037,3.319,1038,3.907,1039,3.319,1040,2.8,1041,3.319,1042,3.022,1043,2.623,1044,2.8,1045,3.771,1046,3.771,1047,3.319,1048,3.771,1049,3.319,1050,3.319,1051,6.367,1052,3.319,1053,3.319,1054,6.022,1055,3.022,1056,3.995,1057,3.771,1058,3.771,1059,3.771,1060,3.771,1061,3.771,1062,2.8,1063,3.022,1064,3.771,1065,6.273,1066,3.771,1067,3.771,1068,3.771,1069,5.38,1070,3.771]],["title/classes/NewsFilterQuery.html",[0,0.137,1013,3.102]],["body/classes/NewsFilterQuery.html",[0,0.209,2,1.013,3,0.237,4,0.195,5,0.142,9,0.469,10,1.104,16,1.362,21,0.782,24,0.01,26,0.521,27,1.178,29,1.839,39,1.084,54,0.436,55,0.888,64,0.223,76,0.006,77,0.007,78,0.006,117,2.893,129,1.308,193,3.456,195,4.247,200,3.077,214,3.506,326,2.877,327,3.243,443,4.727,444,4.727,445,4.911,448,5.206,449,5.446,450,3.856,454,2.679,456,5.446,457,3.317,458,3.704,459,3.954,460,3.317,796,4.662,797,3.419,1013,4.727,1071,6.319,1072,4.268,1073,5.325,1074,5.446,1075,5.982,1076,5.325,1077,5.325,1078,5.325,1079,5.325,1080,5.982,1081,6.796,1082,4.727,1083,5.325,1084,5.854,1085,6.796,1086,5.325,1087,6.796,1088,6.94,1089,5.446,1090,5.325,1091,5.325]],["title/classes/NewsMapper.html",[0,0.137,1044,3.312]],["body/classes/NewsMapper.html",[0,0.141,2,0.87,3,0.203,4,0.168,5,0.122,9,0.402,12,1.31,21,0.777,23,1.308,24,0.01,25,0.993,26,0.517,27,1.052,34,0.848,54,0.411,55,0.763,64,0.191,76,0.005,77,0.007,78,0.005,86,2.381,87,1.55,99,1.826,129,1.826,136,1.567,193,2.609,194,3.371,195,3.49,326,2.679,327,1.881,328,2.694,330,2.983,332,1.771,335,4.042,428,4.878,431,4.025,577,2.983,612,3.65,784,4.561,793,4.833,795,4.878,796,2.848,1013,5.169,1027,5.169,1043,5.169,1044,4.567,1092,4.025,1093,6.15,1094,6.15,1095,4.567,1096,6.15,1097,6.15,1098,4.573,1099,6.15,1100,4.573,1101,6.15,1102,4.573,1103,6.15,1104,4.573,1105,3.18,1106,3.395,1107,6.15,1108,3.395,1109,3.395,1110,4.025,1111,4.573,1112,4.573,1113,4.573,1114,4.573,1115,4.573,1116,4.025,1117,4.573,1118,4.573,1119,4.573,1120,4.573,1121,4.573,1122,4.573,1123,4.573,1124,4.025,1125,4.573,1126,4.573,1127,4.573,1128,4.573,1129,4.573,1130,4.573,1131,4.573,1132,4.025,1133,4.573,1134,4.025,1135,4.573,1136,4.573,1137,4.025,1138,6.15,1139,4.573,1140,4.573,1141,4.573,1142,4.573,1143,6.15,1144,6.15,1145,6.15,1146,4.573,1147,4.573]],["title/modules/NewsModule.html",[139,1.245,1148,3.312]],["body/modules/NewsModule.html",[0,0.171,3,0.246,4,0.203,5,0.148,24,0.01,54,0.465,64,0.232,76,0.006,77,0.008,78,0.006,102,1.261,139,2.128,141,2.144,142,2.507,143,3.142,144,3.142,145,2.894,146,3.234,147,3.569,151,3.953,152,3.012,153,2.507,166,3.641,168,3.505,169,5.522,244,2.686,292,4.993,759,3.634,977,3.851,997,5.939,1003,3.851,1038,5.527,1039,4.874,1148,6.617,1149,4.874,1150,4.874,1151,5.537,1152,4.874,1153,5.24,1154,5.537,1155,4.874,1156,5.537,1157,5.537,1158,4.874,1159,5.537,1160,3.851,1161,3.634,1162,6.132,1163,5.537,1164,5.537,1165,5.537,1166,3.634]],["title/injectables/NewsRepo.html",[182,1.124,1153,2.778]],["body/injectables/NewsRepo.html",[0,0.13,3,0.187,4,0.154,5,0.112,9,0.37,16,1.164,18,1.116,21,0.814,23,1.37,24,0.01,25,1.041,26,0.542,27,1.102,32,1.06,33,1.339,34,0.78,54,0.442,55,0.702,58,1.116,60,1.088,64,0.176,76,0.005,77,0.006,78,0.005,83,1.843,87,1.464,99,1.851,102,0.958,129,1.851,136,1.514,182,1.464,183,1.843,185,3.17,192,2.55,202,3.143,216,2.041,217,3.777,219,3.107,237,2.199,249,1.582,326,3.035,327,1.73,329,2.923,332,2.779,334,3.619,433,3.16,494,3.013,519,2.387,574,4.629,577,2.818,608,2.545,616,3.037,796,4.471,797,3.349,837,4.343,1000,4.041,1001,4.942,1014,4.901,1024,3.619,1025,5.114,1055,4.656,1056,4.314,1153,3.619,1167,3.703,1168,5.81,1169,5.81,1170,4.656,1171,3.123,1172,4.471,1173,4.206,1174,3.448,1175,5.81,1176,4.206,1177,4.206,1178,4.711,1179,4.206,1180,5.81,1181,4.206,1182,5.81,1183,4.206,1184,5.81,1185,5.114,1186,5.81,1187,4.041,1188,5.81,1189,4.206,1190,2.387,1191,2.62,1192,4.041,1193,4.206,1194,4.206,1195,4.206,1196,4.206,1197,4.206,1198,4.206,1199,5.81,1200,4.206,1201,4.206,1202,4.206,1203,4.206,1204,4.206,1205,4.206]],["title/classes/NewsResponse.html",[0,0.137,1043,3.102]],["body/classes/NewsResponse.html",[0,0.115,2,0.711,3,0.166,4,0.29,5,0.1,9,0.329,10,0.868,12,2.212,15,2.648,16,1.547,17,2.734,21,0.885,24,0.01,26,0.603,27,1.061,28,2.452,29,2.082,39,1.18,54,0.377,55,1.47,64,0.156,76,0.004,77,0.006,78,0.004,86,2.791,117,3.089,129,1.533,193,2.648,195,3.541,196,2.964,200,2.42,206,3.969,214,2.923,326,3.034,327,2.801,328,3.157,329,3.14,330,3.027,332,2.903,333,4.096,334,3.887,358,2.032,359,2.217,363,4.242,437,4.283,438,3.033,439,4.283,440,3.969,443,4.738,444,4.738,445,4.242,448,4.34,449,4.283,450,3.033,453,4.948,454,1.879,458,2.598,459,4.634,460,3.887,761,4.283,915,3.329,1003,3.717,1043,3.717,1084,5.058,1206,2.774,1207,6.441,1208,3.736,1209,5.996,1210,3.736,1211,5.013,1212,3.736,1213,3.736,1214,3.736,1215,3.969,1216,3.736,1217,4.34,1218,4.705,1219,3.736,1220,5.493,1221,3.736,1222,5.001,1223,3.736,1224,5.344,1225,3.736,1226,2.994,1227,3.736,1228,3.736,1229,3.736,1230,3.736,1231,3.736,1232,3.969,1233,3.736,1234,5.344,1235,3.736,1236,3.736]],["title/classes/NewsScope.html",[0,0.137,1192,3.102]],["body/classes/NewsScope.html",[0,0.146,2,0.902,3,0.211,4,0.174,5,0.126,9,0.417,10,1.023,21,0.82,23,1.245,24,0.01,25,0.946,26,0.525,27,1.001,28,1.551,32,1.195,33,1.51,34,0.879,54,0.417,55,0.791,58,1.258,59,1.47,64,0.198,76,0.007,77,0.007,78,0.005,87,1.588,99,1.739,129,1.739,136,1.656,193,2.012,198,2.58,326,2.177,327,1.95,330,2.3,494,3.654,511,4.922,519,2.691,574,3.298,577,4.057,581,4.174,665,3.112,796,3.925,797,3.561,969,3.057,1178,4.95,1192,5.613,1237,6.468,1238,4.174,1239,7.077,1240,6.301,1241,6.301,1242,6.301,1243,5.547,1244,8.364,1245,4.742,1246,6.301,1247,4.742,1248,6.301,1249,4.742,1250,6.301,1251,4.742,1252,4.742,1253,4.742,1254,5.05,1255,4.742,1256,6.301,1257,3.925,1258,4.742,1259,4.742,1260,4.136,1261,4.742,1262,4.742,1263,4.742,1264,6.301,1265,4.742,1266,4.742,1267,3.112,1268,4.742,1269,4.742,1270,6.301,1271,4.742,1272,4.742,1273,4.742]],["title/interfaces/NewsTargetFilter.html",[383,0.894,1178,2.927]],["body/interfaces/NewsTargetFilter.html",[3,0.289,4,0.238,5,0.173,9,0.571,10,1.247,24,0.01,26,0.534,54,0.425,55,1.083,60,1.678,64,0.272,76,0.007,77,0.008,78,0.007,192,3,193,3.583,194,4.097,327,2.669,383,1.301,580,6.769,586,2.513,1178,5.038,1237,5.202,1274,5.713]],["title/injectables/NewsUc.html",[182,1.124,1038,2.778]],["body/injectables/NewsUc.html",[0,0.079,3,0.114,4,0.094,5,0.068,9,0.225,12,1.615,16,1.485,18,0.679,21,0.775,23,1.304,24,0.01,25,0.99,26,0.526,27,1.049,28,1.626,32,0.646,33,1.583,34,0.475,39,0.684,49,2.109,54,0.39,55,0.427,60,0.662,64,0.107,76,0.003,77,0.004,78,0.003,87,1.014,99,1.938,102,0.583,117,0.91,129,1.994,136,1.563,175,4.036,182,1.014,183,1.122,185,3.088,192,3.111,193,3.145,194,2.733,195,3.858,196,3.204,200,1.16,201,4.632,202,2.966,214,1.2,216,1.243,217,4.475,219,3.324,320,2.104,326,2.961,327,2.674,329,1.289,330,1.953,332,0.992,335,2.329,350,3.543,351,2.507,356,2.971,395,1.16,396,1.2,397,1.16,398,1.122,450,1.454,458,1.782,494,3.571,495,3.554,508,2.255,519,1.454,542,3.543,551,3.543,574,4.729,580,3.226,584,2.053,608,1.763,612,4.299,613,2.507,616,3.681,716,2.19,774,1.454,781,1.454,784,3.698,793,3.919,795,4.463,796,3.814,797,2.502,803,2.284,837,3.065,847,2.025,915,1.596,969,1.243,1000,2.8,1003,3.458,1014,3.635,1038,2.507,1055,3.226,1082,3.458,1110,2.255,1116,2.255,1124,4.96,1137,3.543,1153,4.049,1155,2.255,1178,2.642,1190,1.454,1191,1.596,1275,2.053,1276,4.025,1277,4.025,1278,4.025,1279,4.025,1280,4.972,1281,2.562,1282,2.562,1283,4.025,1284,2.562,1285,4.025,1286,2.562,1287,4.025,1288,2.562,1289,4.025,1290,2.562,1291,4.025,1292,2.562,1293,2.562,1294,4.025,1295,2.562,1296,2.8,1297,2.562,1298,4.972,1299,2.562,1300,4.025,1301,2.562,1302,2.562,1303,2.562,1304,3.226,1305,4.516,1306,2.562,1307,2.255,1308,2.562,1309,5.634,1310,2.562,1311,2.562,1312,4.025,1313,2.562,1314,4.96,1315,2.562,1316,2.562,1317,2.562,1318,4.025,1319,2.562,1320,3.543,1321,2.562,1322,4.025,1323,2.562,1324,2.562,1325,1.394,1326,4.972,1327,2.562,1328,4.025,1329,2.562,1330,2.562,1331,5.634,1332,2.562,1333,2.255,1334,2.053,1335,2.562,1336,2.562,1337,2.562,1338,2.562,1339,2.255,1340,4.025,1341,2.562,1342,2.562,1343,2.562,1344,4.025,1345,2.562,1346,2.562,1347,2.562,1348,2.562,1349,2.562]],["title/classes/PaginationQuery.html",[0,0.137,1015,2.927]],["body/classes/PaginationQuery.html",[0,0.221,2,1.105,3,0.258,4,0.213,5,0.155,9,0.511,10,1.166,21,0.75,24,0.01,26,0.5,27,1.151,29,1.763,32,1.809,33,2.285,54,0.397,64,0.243,76,0.006,77,0.008,78,0.006,93,3.396,117,2.549,454,2.922,457,3.617,777,5.751,839,5.486,840,5.112,969,3.481,1015,4.71,1084,5.783,1185,6.317,1257,4.47,1350,5.113,1351,6.04,1352,5.808,1353,3.481,1354,6.317,1355,7.176,1356,7.176,1357,7.176,1358,5.808,1359,5.808,1360,6.317,1361,5.808,1362,7.788,1363,5.113,1364,5.808,1365,5.808,1366,5.808,1367,5.808]],["title/classes/PaginationResponse.html",[0,0.137,1036,2.927]],["body/classes/PaginationResponse.html",[0,0.172,2,1.065,3,0.249,4,0.205,5,0.149,9,0.492,10,1.139,18,1.484,21,0.864,23,0.984,24,0.01,25,0.748,26,0.576,27,1.17,29,1.972,54,0.31,64,0.234,76,0.006,77,0.008,78,0.006,93,3.583,453,5.182,454,2.815,613,4.367,661,6.626,763,4.01,839,5.618,840,5.618,1036,4.602,1368,4.925,1369,5.618,1370,7.011,1371,5.595,1372,5.595,1373,5.595,1374,5.595,1375,5.595,1376,5.595,1377,5.595,1378,5.595,1379,5.595]],["title/injectables/ParseObjectIdPipe.html",[182,1.124,1033,3.102]],["body/injectables/ParseObjectIdPipe.html",[0,0.189,3,0.273,4,0.225,5,0.163,9,0.539,21,0.641,23,1.079,24,0.01,25,0.819,26,0.427,27,0.867,33,2.361,34,1.137,39,1.167,41,2.789,54,0.441,58,1.626,60,1.585,64,0.257,76,0.007,77,0.008,78,0.007,87,1.869,99,1.506,102,1.396,129,1.506,136,1.293,182,1.869,183,2.685,192,2.177,229,3.638,237,3.204,509,4.024,764,4.868,1033,5.159,1380,6.529,1381,4.035,1382,4.913,1383,7.417,1384,6.13,1385,7.417,1386,6.13,1387,7.417,1388,6.13,1389,6.13]],["title/classes/Role.html",[0,0.137,804,2.331]],["body/classes/Role.html",[0,0.158,2,0.975,3,0.228,4,0.188,5,0.136,7,1.899,8,3.56,9,0.451,10,1.076,14,2.922,15,2.812,16,1.557,17,2.903,18,1.358,19,3.933,20,3.904,21,0.906,23,0.901,24,0.01,25,1.038,26,0.592,27,0.725,28,2.167,29,2.111,30,2.937,32,1.67,33,2.11,34,1.229,39,1.134,41,2.492,42,2.644,43,3.289,44,2.576,45,2.576,46,2.644,47,2.576,48,2.484,49,2.173,50,2.576,51,2.354,52,2.106,53,2.106,54,0.367,55,1.106,58,1.358,59,1.587,60,1.324,62,2.484,64,0.214,65,1.871,66,2.484,76,0.006,77,0.007,78,0.006,192,2.61,196,3.022,249,2.492,459,4.921,802,4.061,804,3.464,1390,4.508,1391,5.121,1392,5.121,1393,5.121,1394,5.121]],["title/classes/RoleCache.html",[0,0.137,1395,3.102]],["body/classes/RoleCache.html",[0,0.182,2,0.822,3,0.192,4,0.158,5,0.115,9,0.38,10,0.961,16,0.866,18,1.146,21,0.84,23,1.277,24,0.01,25,1.134,26,0.547,27,1.027,34,1.097,39,1.203,54,0.434,55,0.721,58,1.569,59,1.339,60,1.117,64,0.181,76,0.005,77,0.006,78,0.005,83,1.892,87,1.491,99,1.784,102,0.983,129,1.454,136,1.604,182,1.491,185,2.466,192,2.102,196,1.777,202,2.538,216,2.096,219,2.692,237,2.258,322,2.835,383,0.866,665,3.884,797,2.977,802,2.258,804,4.695,837,2.35,969,2.096,1172,3.685,1174,2.564,1190,2.451,1191,2.691,1395,5.049,1396,3.208,1397,5.409,1398,3.093,1399,4.765,1400,4.742,1401,5.917,1402,4.694,1403,4.32,1404,4.742,1405,4.32,1406,5.818,1407,4.32,1408,4.742,1409,4.32,1410,4.742,1411,4.32,1412,3.208,1413,4.742,1414,4.742,1415,3.462,1416,3.005,1417,3.005,1418,3.462,1419,3.462,1420,3.462,1421,3.462,1422,3.462,1423,3.462,1424,3.462,1425,3.462,1426,3.462,1427,4.742,1428,3.462,1429,3.462,1430,3.462,1431,3.462,1432,3.462,1433,3.462,1434,3.462,1435,3.462,1436,3.462]],["title/interfaces/RoleMap.html",[383,0.894,1402,3.102]],["body/interfaces/RoleMap.html",[0,0.197,3,0.216,4,0.178,5,0.129,16,0.972,21,0.507,24,0.01,25,1.057,34,1.186,39,1.156,54,0.449,55,0.809,58,1.696,59,1.503,60,1.254,64,0.203,76,0.005,77,0.007,78,0.005,83,2.124,102,1.104,129,1.571,136,1.668,182,1.612,185,2.615,192,2.272,196,1.994,202,2.691,216,2.353,219,2.855,237,2.535,322,3.183,383,0.972,586,1.878,797,2.44,802,2.535,804,4.707,837,2.638,969,2.353,1172,3.983,1174,2.878,1190,2.752,1191,3.02,1395,4.977,1396,3.601,1397,3.887,1399,3.183,1400,3.887,1402,4.977,1404,3.887,1406,3.887,1408,3.887,1410,3.887,1412,3.601,1413,5.126,1414,5.126,1415,3.887,1416,3.373,1417,3.373,1418,3.887,1419,3.887,1420,3.887,1421,3.887,1422,3.887,1423,3.887,1424,3.887,1425,3.887,1426,3.887,1427,5.126,1428,3.887,1429,3.887,1430,3.887,1431,3.887,1432,3.887,1433,3.887,1434,3.887,1435,3.887,1436,3.887,1437,4.849,1438,4.849]],["title/injectables/RoleRepo.html",[182,1.124,1417,3.102]],["body/injectables/RoleRepo.html",[0,0.183,3,0.193,4,0.159,5,0.115,9,0.381,10,0.963,16,1.188,18,1.149,21,0.821,23,1.279,24,0.01,25,1.123,26,0.547,27,1.028,34,1.099,39,1.167,54,0.435,55,0.723,58,1.572,59,1.343,60,1.12,64,0.181,76,0.005,77,0.007,78,0.005,83,1.898,87,1.494,99,1.66,102,0.986,129,1.456,136,1.605,182,1.494,183,1.898,185,3.037,192,2.581,196,1.781,202,2.955,216,2.101,219,2.696,237,2.264,322,2.843,383,0.868,797,2.179,802,2.264,804,4.649,837,2.356,969,2.101,1171,3.216,1172,4.526,1174,3.518,1190,2.458,1191,2.698,1395,5.294,1396,3.216,1397,3.471,1399,2.843,1400,3.471,1402,4.123,1404,3.471,1406,3.471,1408,3.471,1410,3.471,1412,3.216,1413,4.751,1414,4.751,1415,3.471,1416,3.013,1417,4.123,1418,5.416,1419,5.416,1420,3.471,1421,3.471,1422,3.471,1423,3.471,1424,4.751,1425,3.471,1426,3.471,1427,4.751,1428,3.471,1429,4.751,1430,3.471,1431,3.471,1432,3.471,1433,4.751,1434,3.471,1435,3.471,1436,3.471,1439,5.928,1440,5.928,1441,5.928,1442,5.928,1443,4.331,1444,4.331,1445,4.331,1446,4.331]],["title/classes/SchoolInfo.html",[0,0.137,355,2.426]],["body/classes/SchoolInfo.html",[0,0.18,2,1.111,3,0.26,4,0.214,5,0.156,7,2.063,9,0.514,10,1.17,14,2.708,16,1.443,18,1.549,21,0.852,23,1.027,24,0.01,25,1.118,26,0.593,27,0.826,29,1.918,30,2.697,39,1.121,41,2.196,42,2.33,43,2.872,46,2.33,51,2.973,52,2.402,53,2.402,54,0.398,55,1.201,58,1.549,59,1.81,60,1.51,62,2.833,64,0.244,65,2.134,76,0.006,77,0.008,78,0.006,316,3.177,317,4.086,318,4.274,319,5.008,320,3.052,322,3.833,323,4.68,355,3.917,789,3.833,1447,6.872]],["title/classes/SchoolInfoMapper.html",[0,0.137,1106,3.312]],["body/classes/SchoolInfoMapper.html",[0,0.193,2,1.189,3,0.278,4,0.229,5,0.167,9,0.55,21,0.653,23,1.1,24,0.01,25,0.835,26,0.435,27,0.884,34,1.159,54,0.415,55,1.043,64,0.262,76,0.007,77,0.008,78,0.007,87,1.891,99,1.536,129,1.536,136,1.318,335,3.767,355,4.641,431,3.64,1095,5.572,1105,4.347,1106,5.572,1109,4.641,1217,5.801,1448,6.606,1449,5.009,1450,7.504,1451,5.501,1452,6.25,1453,5.501,1454,6.25]],["title/classes/SchoolInfoResponse.html",[0,0.137,1217,3.102]],["body/classes/SchoolInfoResponse.html",[0,0.19,2,1.173,3,0.274,4,0.226,5,0.164,9,0.543,10,1.209,16,1.703,21,0.778,24,0.01,25,1.136,26,0.518,29,1.829,39,1.142,54,0.341,55,1.385,64,0.258,76,0.007,77,0.008,78,0.007,117,2.84,332,3.215,443,5.177,444,5.177,453,4.745,454,3.102,460,3.84,1207,4.941,1217,5.177,1226,4.941,1455,7.038,1456,4.941,1457,5.427,1458,5.427]],["title/classes/SchoolNews.html",[0,0.137,407,2.647]],["body/classes/SchoolNews.html",[0,0.184,2,0.541,3,0.126,4,0.236,5,0.076,7,1.842,8,2.878,9,0.25,10,0.709,12,0.814,14,2.741,15,2.527,16,1.529,17,2.609,21,0.901,23,0.5,24,0.01,25,0.709,26,0.592,27,1.058,28,2.31,29,2.105,30,2.856,32,1.62,33,2.046,34,1.31,39,1.145,41,2.24,42,2.376,43,3.429,44,1.429,45,1.429,46,2.376,47,1.429,48,2.116,49,1.851,50,1.429,51,2.283,52,1.168,53,1.168,54,0.391,55,1.072,57,3.113,58,0.754,59,0.881,60,0.735,64,0.269,65,1.038,66,1.378,72,2.775,76,0.003,77,0.005,78,0.003,86,2.627,87,1.099,99,0.698,136,0.599,192,2.283,193,2.997,194,3.29,196,2.184,214,1.331,218,1.865,246,2.404,251,1.834,265,2.475,284,1.865,314,2.475,317,1.612,320,2.775,324,1.612,325,1.865,326,3.066,327,3.239,328,2.972,329,3.233,330,2.89,331,4.143,332,2.627,333,3.91,334,3.71,335,2.487,336,3.239,337,4.33,339,2.277,340,2.863,341,3.496,342,3.307,343,2.863,344,2.277,345,2.277,346,3.034,347,3.91,348,3.034,349,2.863,350,2.195,351,2.717,352,3.034,353,2.277,354,2.277,355,3.496,356,2.116,357,2.277,358,2.888,359,3.151,360,2.277,361,2.277,362,2.277,363,2.717,364,2.277,365,2.717,366,2.277,367,3.034,368,2.277,369,2.277,370,2.277,371,2.277,372,2.277,373,2.277,374,2.277,375,3.034,376,4.003,377,2.277,378,1.286,379,3.24,380,1.976,381,2.475,382,1.546,383,0.569,384,1.976,385,1.378,386,1.976,387,1.976,388,1.976,389,1.976,390,1.976,391,1.976,392,1.976,393,1.976,394,3.034,395,2.404,396,2.487,397,2.404,398,2.326,399,2.404,400,3.151,401,2.775,402,1.976,403,3.034,404,1.976,405,1.976,406,3.693,407,2.589,408,1.686,1459,2.841]],["title/controllers/ServerController.html",[461,2.089,1460,3.312]],["body/controllers/ServerController.html",[0,0.198,3,0.285,4,0.235,5,0.171,9,0.564,21,0.67,24,0.01,29,1.575,32,1.92,39,1.048,54,0.355,64,0.268,76,0.007,77,0.008,78,0.007,87,1.92,99,1.575,102,1.46,106,2.903,136,1.352,168,3.226,461,3.569,465,7.405,467,5.3,468,3.697,469,5.3,470,3.983,480,4.761,481,3.003,1460,5.658,1461,5.645,1462,6.412]],["title/modules/ServerModule.html",[139,1.245,1463,3.102]],["body/modules/ServerModule.html",[0,0.155,3,0.224,4,0.185,5,0.134,12,1.442,24,0.01,26,0.35,34,0.933,39,0.692,54,0.478,58,1.738,59,1.56,64,0.211,67,3.737,76,0.006,77,0.007,78,0.006,102,1.146,111,2.63,136,1.061,139,2.034,140,5.707,141,1.949,142,2.278,143,2.856,144,2.856,145,2.63,146,2.135,147,2.357,151,3.718,152,2.738,153,2.278,166,3.425,168,3.297,209,2.738,249,1.892,287,5.707,314,3.718,324,3.718,326,2.264,341,3.565,355,3.565,381,3.718,395,2.278,396,2.357,397,2.278,398,2.205,399,2.278,407,3.889,408,3.889,409,4.081,411,2.614,420,4.081,559,4.43,637,4.557,645,5.768,646,5.768,647,5.768,727,4.033,728,4.033,729,4.033,899,4.301,942,4.301,947,4.033,948,4.033,956,4.033,958,4.301,1398,2.63,1460,5.41,1463,6.01,1464,4.43,1465,4.43,1466,5.707,1467,5.032,1468,6.552,1469,6.552,1470,5.032,1471,5.032,1472,3.303,1473,5.032,1474,5.032,1475,5.032,1476,3.889,1477,5.032,1478,4.43,1479,3.303,1480,5.032,1481,5.032,1482,6.552,1483,5.032,1484,4.033,1485,3.5]],["title/classes/Submission.html",[0,0.137,1476,2.647]],["body/classes/Submission.html",[0,0.134,2,0.828,3,0.193,4,0.159,5,0.158,7,1.703,8,3.418,9,0.383,10,0.966,12,1.246,14,2.738,15,2.522,16,1.459,17,2.604,18,1.154,19,3.528,20,3.697,21,0.906,23,0.765,24,0.01,25,0.581,26,0.604,27,0.615,28,1.944,29,2.118,30,2.833,32,1.835,33,2.318,34,1.459,35,5.405,36,4.414,39,1.082,41,2.235,42,2.371,43,3.139,44,2.188,45,2.188,46,2.371,47,2.188,48,2.11,49,1.845,50,2.188,51,2.112,52,1.789,53,1.789,54,0.422,55,0.992,56,5.029,57,2.273,58,1.154,59,1.348,60,1.124,62,2.11,64,0.182,65,1.589,66,2.11,72,3.805,76,0.005,77,0.007,78,0.005,93,2.371,337,3.843,342,3.703,379,3.234,411,3.271,420,4.218,637,5.301,1476,3.528,1486,3.829,1487,6.773,1488,5.962,1489,6.773,1490,7.622,1491,5.063,1492,6.773,1493,4.349,1494,4.349,1495,4.349,1496,4.349,1497,4.349,1498,5.944,1499,4.349,1500,5.944,1501,4.349,1502,5.944,1503,4.349,1504,4.349,1505,3.229,1506,5.233,1507,3.486]],["title/injectables/SubmissionRepo.html",[182,1.124,1508,2.927]],["body/injectables/SubmissionRepo.html",[0,0.171,3,0.246,4,0.203,5,0.148,9,0.487,18,1.469,21,0.797,23,1.341,24,0.01,25,1.018,26,0.531,27,1.078,54,0.442,55,0.924,58,1.469,60,1.431,64,0.232,76,0.006,77,0.008,78,0.006,83,2.426,87,1.756,99,1.711,102,1.261,129,1.711,136,1.469,182,1.756,183,2.426,185,3.074,202,3.007,216,2.686,219,2.779,237,2.894,411,3.502,1056,5.939,1171,4.111,1172,4.981,1174,4.134,1190,3.142,1476,3.286,1505,5.939,1508,4.572,1509,4.874,1510,6.966,1511,6.966,1512,5.537,1513,6.966,1514,5.537,1515,6.966,1516,5.537,1517,4.338,1518,6.966]],["title/classes/Task.html",[0,0.137,411,1.779]],["body/classes/Task.html",[0,0.147,2,0.905,3,0.212,4,0.174,5,0.127,7,1.809,8,3.497,9,0.419,10,1.025,14,2.839,15,2.679,16,1.513,17,2.766,18,1.261,19,3.747,20,3.812,21,0.908,23,0.837,24,0.01,25,1.009,26,0.596,27,1.166,28,2.469,29,2.119,30,2.891,32,1.591,33,2.01,34,1.171,39,1.038,41,2.374,42,2.519,43,3.222,44,2.393,45,2.393,46,2.519,47,2.393,48,2.307,49,2.018,50,2.393,51,2.243,52,1.956,53,1.956,54,0.418,55,1.053,58,1.261,59,1.474,60,1.23,62,2.307,64,0.199,65,1.738,66,2.307,72,3.3,76,0.005,77,0.007,78,0.005,337,4.022,342,3.932,378,3.418,379,3.435,409,4.414,411,3.012,494,3.209,797,3.177,899,4.652,902,5.558,1519,4.187,1520,5.68,1521,6.051,1522,4.756,1523,4.756,1524,4.756,1525,6.313,1526,4.756,1527,4.756,1528,4.756,1529,4.187]],["title/controllers/TaskController.html",[461,2.089,1530,3.312]],["body/controllers/TaskController.html",[0,0.161,3,0.232,4,0.191,5,0.139,9,0.459,21,0.545,23,0.917,24,0.01,25,0.696,26,0.363,27,0.948,29,1.281,34,0.967,54,0.477,64,0.218,76,0.008,77,0.007,78,0.006,83,2.283,87,1.689,99,1.281,102,1.187,129,1.988,136,1.099,168,2.623,185,2.707,202,2.521,216,2.529,219,2.674,249,1.96,411,2.079,431,2.529,454,2.623,461,2.441,577,3.794,778,3.247,781,2.958,798,4.438,839,4.4,840,4.4,880,3.625,999,4.588,1001,5.502,1007,5.134,1012,4.588,1015,5.705,1022,3.094,1032,4.588,1036,3.421,1037,4.588,1040,3.871,1041,4.588,1042,4.177,1047,4.588,1062,3.871,1369,4.864,1381,2.836,1517,4.175,1530,4.977,1531,4.588,1532,6.703,1533,5.212,1534,5.212,1535,4.864,1536,4.588,1537,3.625,1538,4.588,1539,3.421,1540,3.871,1541,5.212,1542,4.588,1543,4.588,1544,3.247,1545,6.703,1546,5.212,1547,5.212,1548,5.212,1549,5.212,1550,5.212,1551,4.588,1552,4.588,1553,5.212]],["title/classes/TaskMapper.html",[0,0.137,1537,3.102]],["body/classes/TaskMapper.html",[0,0.182,2,1.126,3,0.263,4,0.217,5,0.158,9,0.521,21,0.618,23,1.041,24,0.01,25,0.79,26,0.412,27,0.837,34,1.097,54,0.401,55,0.987,64,0.248,76,0.006,77,0.008,78,0.006,87,1.829,99,1.453,129,1.453,136,1.248,335,3.677,411,3.352,417,5.389,431,3.521,613,3.684,1095,5.389,1105,4.114,1109,4.392,1132,5.207,1134,5.207,1453,5.207,1537,5.048,1539,5.373,1554,5.207,1555,7.257,1556,5.694,1557,6.561,1558,5.915,1559,5.915,1560,5.915,1561,5.915,1562,5.915,1563,5.915,1564,5.915,1565,5.915,1566,5.915,1567,5.915,1568,5.915,1569,5.915]],["title/modules/TaskModule.html",[139,1.245,1466,3.102]],["body/modules/TaskModule.html",[0,0.186,3,0.268,4,0.221,5,0.161,24,0.01,54,0.467,64,0.252,76,0.007,77,0.008,78,0.007,102,1.372,139,2.21,141,2.333,142,2.728,143,3.42,144,3.42,145,3.15,146,3.359,147,2.822,151,4.165,152,3.278,153,2.728,168,3.693,1466,6.185,1508,5.638,1530,5.878,1535,5.638,1536,5.305,1570,5.305,1571,5.305,1572,5.638,1573,6.026,1574,6.026,1575,5.305,1576,5.305]],["title/injectables/TaskRepo.html",[182,1.124,1572,2.927]],["body/injectables/TaskRepo.html",[0,0.109,3,0.157,4,0.129,5,0.094,9,0.31,12,1.01,15,1.496,16,0.707,18,0.935,21,0.693,23,1.167,24,0.01,25,0.886,26,0.462,27,0.938,28,1.153,32,1.292,33,1.632,34,0.654,49,2.175,54,0.407,55,0.588,58,1.36,59,1.093,60,0.912,64,0.148,76,0.004,77,0.006,78,0.004,83,1.545,87,1.292,99,1.484,102,0.803,111,1.843,129,1.947,136,1.399,182,1.292,183,1.545,185,2.896,192,2.859,201,4.127,202,2.764,216,1.71,219,3.026,237,1.843,249,3.027,251,1.218,326,1.218,378,3.328,385,2.487,409,2.196,411,2.646,413,2.452,414,3.104,415,2.826,468,1.71,494,2.321,519,3.428,577,2.93,579,2.909,584,5.315,837,4.127,839,4.353,840,4.353,897,4.485,899,2.314,901,3.807,910,2.452,914,2.196,973,2.314,1014,3.043,1022,2.093,1056,3.807,1171,2.618,1172,4.131,1174,3.043,1190,2.001,1191,2.196,1192,2.452,1215,2.618,1320,3.104,1369,3.365,1398,1.843,1412,2.618,1476,2.093,1491,2.452,1517,2.196,1520,5.315,1521,5.315,1572,3.365,1577,3.104,1578,5.126,1579,6.04,1580,5.126,1581,3.526,1582,5.126,1583,3.526,1584,5.126,1585,3.526,1586,5.126,1587,3.526,1588,4.485,1589,2.826,1590,2.314,1591,7.773,1592,3.526,1593,3.104,1594,1.918,1595,3.526,1596,3.104,1597,2.618,1598,3.526,1599,2.452,1600,3.104,1601,3.104,1602,2.452,1603,2.314,1604,2.826,1605,3.526,1606,2.452,1607,2.452,1608,3.526,1609,5.126,1610,3.526,1611,5.126,1612,5.126,1613,2.001,1614,4.513,1615,5.126,1616,3.526,1617,3.526,1618,5.126,1619,3.526,1620,2.826,1621,6.632,1622,5.126,1623,5.126,1624,2.314,1625,3.104,1626,3.526,1627,3.526,1628,5.126,1629,3.526,1630,3.104,1631,3.104,1632,3.526,1633,5.126,1634,5.126,1635,3.526,1636,2.826,1637,3.526,1638,5.126,1639,3.526]],["title/classes/TaskResponse.html",[0,0.137,1539,2.927]],["body/classes/TaskResponse.html",[0,0.163,2,1.008,3,0.236,4,0.194,5,0.141,9,0.466,10,1.1,15,3.168,16,1.496,17,3.271,21,0.895,24,0.01,25,0.998,26,0.602,27,1.211,28,2.721,29,2.104,39,1.177,54,0.293,64,0.222,76,0.006,77,0.007,78,0.006,93,2.979,106,3.067,117,1.882,318,3.145,411,2.702,431,3.286,433,3.685,453,5.33,454,2.666,1520,5.985,1539,4.446,1556,5.194,1613,3.844,1640,4.664,1641,5.963,1642,7.467,1643,7.467,1644,5.299,1645,5.299,1646,5.299,1647,5.299,1648,5.299,1649,5.299,1650,5.299,1651,5.299,1652,4.664,1653,4.664,1654,4.664]],["title/injectables/TaskUC.html",[182,1.124,1535,2.927]],["body/injectables/TaskUC.html",[0,0.116,3,0.168,4,0.138,5,0.1,9,0.331,10,0.873,12,1.079,18,0.999,21,0.756,23,1.203,24,0.01,25,0.914,26,0.476,27,0.967,32,0.949,33,1.199,34,1.162,39,0.518,54,0.445,55,0.628,60,0.974,64,0.158,76,0.004,77,0.006,78,0.004,87,1.355,99,1.54,102,0.857,119,3.88,129,2.084,136,1.669,182,1.355,183,1.65,185,2.942,192,2.749,196,2.578,201,3.41,202,2.827,213,4.308,216,1.827,219,2.884,229,2.235,248,2.235,249,2.975,411,2.884,413,2.62,438,2.137,494,1.705,519,3.051,798,3.88,802,1.969,837,4.444,847,2.705,880,2.62,969,1.827,1007,4.115,1014,4.998,1042,3.018,1105,2.62,1190,3.051,1191,2.346,1257,3.348,1369,4.935,1398,1.969,1476,4.058,1505,2.797,1508,5.079,1517,4.503,1535,3.529,1537,2.62,1538,3.315,1539,2.472,1551,4.732,1552,4.732,1557,4.308,1572,4.935,1575,3.315,1576,3.315,1588,2.797,1589,3.018,1590,2.472,1600,3.315,1601,3.315,1602,3.739,1652,3.315,1653,3.315,1654,3.315,1655,3.315,1656,6.269,1657,5.376,1658,5.376,1659,5.376,1660,3.766,1661,3.766,1662,5.376,1663,3.766,1664,5.376,1665,3.766,1666,5.376,1667,3.766,1668,3.766,1669,5.376,1670,3.766,1671,3.766,1672,3.766,1673,3.766,1674,3.018,1675,3.766,1676,3.766,1677,3.766,1678,3.766,1679,3.766,1680,3.766,1681,3.766,1682,3.766,1683,3.766,1684,3.766,1685,5.376,1686,3.766,1687,3.766,1688,3.766,1689,2.797,1690,2.797,1691,3.315,1692,3.766,1693,3.766,1694,3.766,1695,6.837,1696,3.766,1697,3.766,1698,3.766,1699,5.376,1700,3.766,1701,3.766,1702,3.766]],["title/classes/TeamInfo.html",[0,0.137,381,2.531]],["body/classes/TeamInfo.html",[0,0.18,2,1.111,3,0.26,4,0.214,5,0.156,7,2.063,9,0.514,10,1.17,14,2.708,16,1.443,18,1.549,21,0.852,23,1.027,24,0.01,25,1.118,26,0.593,27,0.826,29,1.918,30,2.697,39,1.121,41,2.196,42,2.33,43,2.872,46,2.33,51,2.973,52,2.402,53,2.402,54,0.398,55,1.201,58,1.549,59,1.81,60,1.51,62,2.833,64,0.244,65,2.134,76,0.006,77,0.008,78,0.006,316,3.177,317,4.086,318,4.274,319,5.008,320,3.052,322,3.833,323,4.68,381,4.086,790,4.062,1703,6.872]],["title/classes/TeamNews.html",[0,0.137,408,2.647]],["body/classes/TeamNews.html",[0,0.184,2,0.541,3,0.126,4,0.236,5,0.076,7,1.842,8,2.878,9,0.25,10,0.709,12,0.814,14,2.741,15,2.527,16,1.529,17,2.609,21,0.901,23,0.5,24,0.01,25,0.709,26,0.592,27,1.058,28,2.31,29,2.105,30,2.856,32,1.62,33,2.046,34,1.31,39,1.145,41,2.24,42,2.376,43,3.429,44,1.429,45,1.429,46,2.376,47,1.429,48,2.116,49,1.851,50,1.429,51,2.283,52,1.168,53,1.168,54,0.391,55,1.072,57,3.113,58,0.754,59,0.881,60,0.735,64,0.269,65,1.038,66,1.378,72,2.775,76,0.003,77,0.005,78,0.003,86,2.627,87,1.099,99,0.698,136,0.599,192,2.283,193,2.997,194,3.29,196,2.184,214,1.331,218,1.865,246,2.404,251,1.834,265,2.475,284,1.865,314,2.475,317,1.612,320,2.775,324,1.612,325,1.865,326,3.066,327,3.239,328,2.972,329,3.233,330,2.89,331,4.143,332,2.627,333,3.91,334,3.71,335,2.487,336,3.239,337,4.33,339,2.277,340,2.863,341,3.496,342,3.307,343,2.863,344,2.277,345,2.277,346,3.034,347,3.91,348,3.034,349,2.863,350,2.195,351,2.717,352,3.034,353,2.277,354,2.277,355,3.24,356,2.116,357,2.277,358,2.888,359,3.151,360,2.277,361,2.277,362,2.277,363,2.717,364,2.277,365,2.717,366,2.277,367,3.034,368,2.277,369,2.277,370,2.277,371,2.277,372,2.277,373,2.277,374,2.277,375,3.034,376,4.003,377,2.277,378,1.286,379,3.24,380,1.976,381,3.013,382,1.546,383,0.569,384,1.976,385,1.378,386,1.976,387,1.976,388,1.976,389,1.976,390,1.976,391,1.976,392,1.976,393,1.976,394,3.034,395,2.404,396,2.487,397,2.404,398,2.326,399,2.404,400,3.151,401,2.775,402,1.976,403,3.034,404,1.976,405,1.976,406,3.693,407,1.686,408,2.589,1704,2.841]],["title/injectables/TimeoutInterceptor.html",[182,1.124,850,3.312]],["body/injectables/TimeoutInterceptor.html",[0,0.153,3,0.221,4,0.182,5,0.132,9,0.437,10,1.055,21,0.833,23,1.142,24,0.01,25,0.868,26,0.504,27,1.086,32,1.251,33,1.58,54,0.425,64,0.208,76,0.005,77,0.007,78,0.005,87,1.636,93,3.261,99,1.595,102,1.13,117,1.763,136,1.619,161,3.977,182,1.636,183,2.174,335,3.389,395,2.247,396,2.324,397,3.475,398,2.174,399,2.247,400,2.945,461,3.041,471,4.821,476,5.203,483,4.262,494,3.276,496,5.715,497,5.715,498,5.7,499,6.758,501,2.497,502,6.37,505,3.977,507,4.368,509,3.257,596,3.394,597,3.15,623,3.977,665,3.257,676,3.977,847,2.497,848,6.069,850,4.821,979,4.516,1243,5.715,1705,4.368,1706,6.493,1707,4.516,1708,4.516,1709,4.262,1710,5.203,1711,7.237,1712,7.237,1713,7.237,1714,4.962,1715,4.962,1716,5.374,1717,4.962,1718,4.962,1719,4.962,1720,4.962,1721,4.962,1722,6.493,1723,6.493,1724,4.962,1725,6.493,1726,4.962,1727,4.962,1728,4.962,1729,4.962,1730,4.962,1731,4.962,1732,4.962,1733,6.493,1734,4.962,1735,4.962]],["title/classes/UpdateNewsParams.html",[0,0.137,1027,3.102]],["body/classes/UpdateNewsParams.html",[0,0.245,2,1.039,3,0.243,4,0.2,5,0.146,9,0.481,10,1.293,21,0.791,24,0.01,26,0.527,27,0.977,28,2.259,29,1.861,39,1.094,54,0.382,55,1.399,64,0.229,76,0.006,77,0.008,78,0.006,86,3.178,117,2.827,326,2.976,328,3.596,330,3.674,430,4.055,431,3.35,433,3.757,435,4.807,437,5.534,438,3.919,439,5.534,440,5.128,454,2.748,455,6.079,456,6.069,457,3.402,756,4.533,792,4.803,863,4.533,1027,4.803,1084,5.909,1088,7.005,1736,7.005,1737,6.905,1738,6.905,1739,5.128,1740,6.079,1741,6.905,1742,5.461,1743,5.461,1744,5.461]],["title/classes/User.html",[0,0.137,12,1.278]],["body/classes/User.html",[0,0.149,2,0.923,3,0.216,4,0.178,5,0.129,7,1.833,8,3.514,9,0.427,10,1.039,12,1.833,14,2.861,15,2.714,16,1.525,17,2.802,18,1.286,19,3.796,20,3.836,21,0.904,23,0.853,24,0.01,25,0.648,26,0.598,27,0.686,28,2.092,29,2.109,30,2.903,32,1.803,33,2.278,34,1.411,35,4.749,36,3.601,39,1.156,41,2.405,42,2.551,43,3.24,44,2.44,45,2.44,46,2.551,47,2.44,48,2.353,49,2.058,50,2.44,51,2.272,52,1.994,53,1.994,54,0.396,55,1.067,56,4.749,57,2.535,58,1.286,59,1.503,60,1.254,62,2.353,64,0.203,65,1.772,66,2.353,72,3.343,76,0.005,77,0.007,78,0.005,332,1.878,337,2.752,356,2.353,802,4.133,803,2.752,804,3.74,1745,4.269,1746,5.314,1747,5.314,1748,5.314,1749,4.849,1750,4.849,1751,4.849,1752,4.849,1753,4.849,1754,4.849,1755,4.849,1756,4.849]],["title/classes/UserInfo.html",[0,0.137,341,2.426]],["body/classes/UserInfo.html",[0,0.174,2,1.074,3,0.251,4,0.207,5,0.15,7,2.02,9,0.497,10,1.145,14,2.651,16,1.413,18,1.497,21,0.866,23,0.993,24,0.01,25,0.754,26,0.597,27,0.799,29,1.979,30,2.863,39,1.179,41,2.122,42,2.252,43,2.812,46,2.252,51,2.944,52,2.321,53,2.321,54,0.39,55,1.176,58,1.497,59,1.75,60,1.459,62,2.738,64,0.236,65,2.062,76,0.006,77,0.008,78,0.006,316,3.07,317,4,318,4.184,319,3.926,320,2.95,341,3.835,803,3.203,1747,5.98,1748,5.98,1757,7.089,1758,6.206,1759,5.644,1760,5.644,1761,5.644,1762,5.644]],["title/classes/UserInfoMapper.html",[0,0.137,1108,3.312]],["body/classes/UserInfoMapper.html",[0,0.191,2,1.182,3,0.276,4,0.228,5,0.166,9,0.547,21,0.649,23,1.093,24,0.01,25,0.83,26,0.433,27,0.879,34,1.152,54,0.414,55,1.037,64,0.26,76,0.007,77,0.008,78,0.007,87,1.885,99,1.527,129,1.527,136,1.31,335,3.757,341,4.634,431,3.627,1095,5.553,1105,4.322,1108,5.553,1109,4.614,1211,5.79,1449,4.98,1451,5.469,1763,6.583,1764,7.478,1765,6.213,1766,6.213,1767,6.213,1768,6.213,1769,6.213]],["title/classes/UserInfoResponse.html",[0,0.137,1211,3.102]],["body/classes/UserInfoResponse.html",[0,0.182,2,1.126,3,0.263,4,0.217,5,0.158,9,0.521,10,1.179,12,2.45,16,1.684,21,0.821,24,0.01,25,1.094,26,0.547,29,1.929,39,1.176,54,0.327,55,1.211,64,0.248,76,0.006,77,0.008,78,0.006,117,2.908,443,5.048,444,5.048,453,4.859,454,2.976,460,3.684,1207,5.816,1211,5.048,1226,4.741,1456,4.741,1457,5.207,1458,5.207,1747,5.83,1748,5.83,1770,7.206,1771,4.764,1772,6.389,1773,5.915]],["title/classes/UserTaskInfo.html",[0,0.137,420,2.778]],["body/classes/UserTaskInfo.html",[0,0.176,2,1.087,3,0.254,4,0.21,5,0.152,7,2.036,9,0.503,10,1.154,14,2.672,16,1.424,18,1.516,19,4.217,20,4.035,21,0.869,23,1.005,24,0.01,25,0.764,26,0.579,27,0.809,29,1.987,30,2.874,39,1.144,41,2.149,42,2.28,43,2.834,46,2.28,51,2.955,52,2.35,53,2.35,54,0.393,55,1.185,58,1.516,59,1.772,60,1.477,62,2.772,64,0.239,65,2.088,66,2.772,76,0.006,77,0.008,78,0.006,316,3.109,319,3.975,411,3.227,420,4.425,803,3.243,1747,5.741,1748,5.741,1758,6.254,1774,7.12]],["title/classes/ValidationErrorDetailResponse.html",[0,0.137,124,3.312]],["body/classes/ValidationErrorDetailResponse.html",[0,0.202,2,1.25,3,0.292,4,0.241,5,0.175,18,1.743,21,0.687,23,1.156,24,0.01,25,0.878,26,0.457,27,0.93,39,1.205,64,0.275,76,0.007,77,0.008,78,0.007,83,2.878,104,5.784,108,3.28,121,4.133,124,5.74,1775,6.805,1776,5.784,1777,6.57,1778,6.57,1779,6.195]],["title/modules/ValidationModule.html",[139,1.245,293,3.102]],["body/modules/ValidationModule.html",[0,0.203,3,0.293,4,0.241,5,0.175,24,0.01,54,0.455,64,0.276,76,0.007,77,0.008,78,0.007,102,1.499,139,2.161,141,2.549,146,2.793,293,5.383,307,6.813,474,3.907,485,3.441,524,5.276,748,5.747,1780,6.584,1781,6.584,1782,6.584]],["title/changelog.html",[1783,2.78,1784,2.604,1785,3.296]],["body/changelog.html",[0,0.07,1,2.285,2,0.795,3,0.031,4,0.026,5,0.123,9,0.061,12,2.012,13,1.04,16,0.457,20,0.338,21,0.238,24,0.003,25,0.243,27,0.258,28,0.879,32,0.575,33,0.413,34,1.051,54,0.101,57,1.192,63,2.007,67,0.964,68,0.614,69,0.485,70,0.808,71,0.296,76,0.001,77,0.003,78,0.002,84,1.181,85,0.379,93,0.518,99,0.447,106,2.511,107,1.764,108,2.405,110,1.266,111,0.364,112,0.808,121,2.102,136,0.147,139,0.508,142,0.587,147,0.326,152,0.706,153,0.587,180,0.853,185,0.255,196,1.254,198,0.379,200,0.316,201,0.706,202,0.488,203,0.457,206,0.518,209,1.24,210,1.352,217,0.395,219,0.278,229,0.414,239,0.518,243,0.434,244,2.233,247,0.559,250,2.141,251,1.59,253,2.94,255,0.902,256,0.852,267,0.379,268,0.485,269,0.736,270,1.595,295,0.434,299,0.559,301,2.742,303,2.408,321,1.42,328,0.568,329,0.916,332,2.592,349,0.457,350,1.98,356,0.338,358,0.99,365,0.434,378,1.381,382,1.462,383,0.14,385,0.338,395,0.824,396,0.608,399,0.587,401,0.364,411,0.518,413,2.552,415,3.348,432,1.352,433,0.706,438,1.731,445,0.808,450,1.294,467,3.454,468,2.134,469,0.902,470,1.594,480,0.518,481,1.957,485,0.678,493,0.457,501,0.351,511,4.699,519,1.033,520,0.338,530,0.902,532,0.559,534,1.353,535,0.551,536,0.736,537,0.457,563,1.142,568,3.312,577,1.303,579,0.736,595,0.395,596,0.364,597,1.78,598,2.003,600,2.002,604,1.428,608,0.999,612,0.414,616,0.364,618,0.434,620,0.559,622,2.285,636,0.485,642,2.003,648,0.559,651,1.294,652,0.457,656,0.559,677,0.559,678,0.964,680,0.457,682,0.485,684,0.808,695,0.485,699,1.04,709,1.497,711,0.902,716,2.141,730,0.518,731,1.352,740,0.559,752,1.81,754,0.559,755,1.827,756,1.764,759,2.215,760,1.266,761,2.94,763,2.027,772,2.444,774,2.233,777,0.559,778,1.134,780,1.995,781,0.395,789,3.259,790,1.586,792,0.485,802,1.404,803,4.011,804,0.678,805,0.902,807,0.518,815,1.195,821,1.195,845,0.434,847,1.534,849,3.154,851,0.434,862,0.559,863,1.195,865,0.485,866,1.674,870,0.559,880,1.266,882,2.705,884,1.586,897,0.518,904,1.603,910,5.341,912,0.518,915,1.134,917,4.568,921,0.614,924,2.003,935,0.902,942,0.457,951,0.808,958,0.457,964,0.485,966,0.518,969,0.629,976,1.04,977,1.586,978,2.506,979,0.485,980,0.964,1000,1.869,1003,2.121,1014,0.77,1022,1.081,1024,1.134,1031,2.685,1062,0.518,1074,0.559,1080,2.685,1161,0.457,1162,4.218,1166,0.852,1187,0.485,1215,1.352,1232,2.506,1257,1.134,1260,0.852,1267,1.195,1296,0.485,1325,0.99,1333,0.614,1334,2.153,1351,4.374,1353,1.106,1354,0.614,1363,0.614,1381,1.24,1398,3.842,1399,0.852,1416,0.485,1472,2.002,1476,0.77,1479,1.764,1484,1.459,1485,0.485,1488,1.142,1491,0.485,1505,1.352,1506,0.614,1507,0.559,1517,0.808,1521,1.04,1529,1.603,1540,0.964,1544,0.808,1556,0.902,1588,2.265,1590,0.852,1593,0.614,1594,1.462,1597,0.518,1599,0.902,1603,1.195,1607,0.902,1613,1.294,1620,1.04,1624,0.852,1625,1.142,1641,0.614,1707,0.902,1708,0.902,1716,0.518,1739,2.265,1746,1.352,1771,0.852,1772,1.603,1779,1.04,1785,2.685,1786,0.697,1787,1.266,1788,1.04,1789,0.614,1790,1.586,1791,0.697,1792,0.697,1793,1.821,1794,1.04,1795,3.454,1796,5.668,1797,7.43,1798,4.228,1799,0.697,1800,7.948,1801,0.697,1802,0.697,1803,0.697,1804,1.142,1805,0.697,1806,0.697,1807,1.821,1808,1.142,1809,4.965,1810,0.697,1811,3.669,1812,3.348,1813,1.821,1814,0.697,1815,0.614,1816,1.195,1817,0.614,1818,0.808,1819,0.614,1820,0.697,1821,7.278,1822,5.783,1823,2.265,1824,1.821,1825,0.697,1826,0.697,1827,0.697,1828,0.697,1829,0.457,1830,1.674,1831,0.697,1832,2.28,1833,0.697,1834,2.94,1835,0.697,1836,0.614,1837,0.614,1838,1.821,1839,0.697,1840,3.526,1841,0.697,1842,6.922,1843,1.142,1844,2.121,1845,0.902,1846,1.142,1847,0.614,1848,0.697,1849,1.603,1850,0.697,1851,2.365,1852,3.873,1853,6.802,1854,0.697,1855,4.792,1856,0.697,1857,0.697,1858,0.697,1859,4.178,1860,3.669,1861,0.697,1862,4.965,1863,0.697,1864,0.697,1865,3.05,1866,0.697,1867,2.687,1868,0.697,1869,2.007,1870,0.697,1871,0.697,1872,1.821,1873,0.697,1874,2.007,1875,0.697,1876,1.995,1877,2.007,1878,0.697,1879,1.821,1880,1.142,1881,1.142,1882,1.298,1883,1.298,1884,2.007,1885,1.298,1886,0.697,1887,0.614,1888,0.697,1889,2.971,1890,0.697,1891,3.558,1892,0.697,1893,1.298,1894,0.697,1895,0.697,1896,1.142,1897,2.007,1898,0.697,1899,1.142,1900,0.697,1901,0.697,1902,0.614,1903,0.697,1904,5.126,1905,2.971,1906,3.05,1907,1.298,1908,1.298,1909,0.697,1910,0.559,1911,0.614,1912,0.697,1913,0.697,1914,0.697,1915,0.614,1916,0.697,1917,1.821,1918,0.697,1919,0.614,1920,2.687,1921,2.365,1922,0.614,1923,0.697,1924,0.697,1925,0.697,1926,0.697,1927,1.821,1928,0.697,1929,0.697,1930,1.142,1931,0.697,1932,1.298,1933,0.697,1934,1.298,1935,3.464,1936,0.697,1937,1.603,1938,1.04,1939,0.697,1940,0.697,1941,1.298,1942,1.298,1943,0.697,1944,5.206,1945,2.506,1946,0.697,1947,1.195,1948,0.697,1949,0.697,1950,2.444,1951,0.697,1952,0.697,1953,2.28,1954,3.935,1955,0.697,1956,3.348,1957,0.697,1958,0.697,1959,1.603,1960,1.142,1961,0.559,1962,0.697,1963,0.697,1964,0.697,1965,2.94,1966,1.298,1967,1.298,1968,1.298,1969,1.142,1970,1.298,1971,0.697,1972,1.603,1973,0.697,1974,0.697,1975,0.697,1976,2.178,1977,0.697,1978,1.298,1979,0.697,1980,0.697,1981,1.142,1982,0.697,1983,0.697,1984,1.603,1985,2.007,1986,0.697,1987,0.697,1988,1.142,1989,0.697,1990,4.792,1991,0.697,1992,0.697,1993,0.697,1994,0.697,1995,5.126,1996,3.05,1997,1.298,1998,0.697,1999,0.697,2000,0.697,2001,0.697,2002,0.697,2003,0.697,2004,1.142,2005,0.697,2006,0.697,2007,1.821,2008,2.685,2009,0.697,2010,1.603,2011,0.697,2012,0.697,2013,1.142,2014,0.697,2015,0.697,2016,2.687,2017,1.142,2018,0.697,2019,1.821,2020,0.697,2021,0.614,2022,0.697,2023,0.697,2024,1.298,2025,1.827,2026,0.697,2027,0.697,2028,1.142,2029,0.697,2030,0.697,2031,0.614,2032,0.964,2033,1.298,2034,1.995,2035,3.05,2036,0.697,2037,0.697,2038,0.697,2039,0.559,2040,1.298,2041,0.697,2042,1.298,2043,1.827,2044,1.298,2045,0.697,2046,0.697,2047,0.697,2048,0.697,2049,2.687,2050,0.614,2051,0.697,2052,1.298,2053,0.697,2054,0.614,2055,2.28,2056,1.04,2057,0.697,2058,1.298,2059,1.821,2060,2.002,2061,0.697,2062,0.697,2063,0.485,2064,0.697,2065,0.697,2066,1.298,2067,0.697,2068,1.674,2069,0.559,2070,0.697,2071,1.603,2072,0.697,2073,0.697,2074,1.821,2075,0.697,2076,0.697,2077,1.298,2078,1.821,2079,0.697,2080,0.697,2081,0.697,2082,0.697,2083,1.298,2084,0.697,2085,1.821,2086,0.518,2087,1.142,2088,2.007,2089,0.697,2090,0.559,2091,0.697,2092,1.266,2093,1.298,2094,1.693,2095,0.697,2096,0.697,2097,0.697,2098,0.697,2099,1.821,2100,1.827,2101,0.697,2102,0.614,2103,0.697,2104,1.821,2105,2.685,2106,0.697,2107,0.697,2108,0.697,2109,1.821,2110,0.697,2111,0.697,2112,0.697,2113,1.298,2114,0.697,2115,1.603,2116,1.298,2117,0.697,2118,0.697,2119,0.697,2120,0.697,2121,0.697,2122,0.964,2123,0.518,2124,0.964,2125,0.518,2126,0.697,2127,0.697,2128,0.614,2129,1.142,2130,0.697,2131,0.697,2132,0.697,2133,4.965,2134,0.697,2135,1.821,2136,0.697,2137,0.697,2138,0.697,2139,2.28,2140,0.697,2141,1.298,2142,1.298,2143,0.697,2144,0.697,2145,0.697,2146,1.298,2147,0.697,2148,0.697,2149,0.697,2150,0.614,2151,0.614,2152,0.697,2153,0.697,2154,0.614,2155,0.697,2156,1.298,2157,0.614,2158,0.697,2159,0.697,2160,0.697,2161,0.697,2162,0.697,2163,0.697,2164,0.697,2165,0.697,2166,2.685,2167,0.697,2168,0.697,2169,0.697,2170,0.697,2171,0.697,2172,0.697,2173,0.697,2174,1.298,2175,0.697,2176,0.697,2177,1.821,2178,0.614,2179,1.298,2180,0.697,2181,1.497,2182,0.697,2183,1.298,2184,0.614,2185,0.697,2186,0.614,2187,0.697,2188,1.298,2189,0.697,2190,0.697,2191,0.697,2192,2.687,2193,0.697,2194,0.697,2195,0.559,2196,0.697,2197,0.697,2198,0.614,2199,0.697,2200,0.697,2201,0.697,2202,0.697,2203,0.697,2204,0.518,2205,0.697,2206,1.821,2207,0.697,2208,0.518,2209,0.697,2210,0.697,2211,0.697,2212,0.697,2213,1.033,2214,0.808,2215,1.821,2216,1.298,2217,0.697,2218,1.821,2219,0.697,2220,2.007,2221,0.697,2222,0.697,2223,2.687,2224,3.05,2225,0.697,2226,0.697,2227,0.697,2228,3.05,2229,0.697,2230,1.298,2231,0.697,2232,0.697,2233,1.298,2234,0.559,2235,1.298,2236,0.614,2237,1.459,2238,0.697,2239,0.697,2240,0.559,2241,0.697,2242,7.857,2243,2.971,2244,0.697,2245,0.697,2246,0.559,2247,0.697,2248,0.697,2249,0.697,2250,0.697,2251,0.697,2252,3.05,2253,0.697,2254,1.352,2255,0.697,2256,0.697,2257,0.697,2258,0.697,2259,0.697,2260,2.28,2261,2.28,2262,2.365,2263,1.586,2264,1.603,2265,2.687,2266,1.298,2267,1.298,2268,3.23,2269,1.693,2270,3.375,2271,1.142,2272,1.298,2273,1.266,2274,1.298,2275,1.04,2276,1.04,2277,1.298,2278,0.697,2279,0.697,2280,2.971,2281,0.559,2282,0.457,2283,2.687,2284,1.04,2285,0.697,2286,0.559,2287,0.485,2288,0.518,2289,0.697,2290,0.697,2291,0.614,2292,1.142,2293,0.697,2294,1.298,2295,0.697,2296,0.697,2297,1.142,2298,0.697,2299,0.697,2300,1.298,2301,0.697,2302,0.697,2303,1.298,2304,0.697,2305,0.697,2306,0.697,2307,0.614,2308,1.586,2309,0.697,2310,0.697,2311,1.142,2312,0.518,2313,0.697,2314,1.821,2315,2.153,2316,0.697,2317,0.614,2318,1.298,2319,0.697,2320,0.697,2321,0.614,2322,0.697,2323,3.464,2324,1.298,2325,0.697,2326,0.697,2327,0.697,2328,0.697,2329,0.697,2330,1.142,2331,1.142,2332,2.28,2333,1.827,2334,0.697,2335,1.821,2336,0.697,2337,0.697,2338,1.459,2339,0.697,2340,0.697,2341,0.697,2342,1.298,2343,1.821,2344,0.559,2345,0.697,2346,0.697,2347,0.697,2348,0.697,2349,1.298,2350,0.697,2351,1.04,2352,0.614,2353,1.298,2354,0.697,2355,0.614,2356,0.697,2357,0.697,2358,0.697,2359,1.298,2360,0.697,2361,1.298,2362,0.697,2363,0.697,2364,0.697,2365,0.697,2366,1.821,2367,1.821,2368,1.693,2369,0.485,2370,2.153,2371,0.697,2372,1.821,2373,1.298,2374,0.457,2375,0.614,2376,0.697,2377,0.697,2378,0.614,2379,1.298,2380,1.266,2381,1.821,2382,1.142,2383,0.697,2384,0.697,2385,0.614,2386,0.697,2387,0.697,2388,0.697,2389,1.869,2390,0.697,2391,0.697,2392,0.697,2393,0.697,2394,0.964,2395,0.697,2396,0.697,2397,0.697,2398,0.697,2399,0.697,2400,0.697,2401,1.298,2402,0.614,2403,0.559,2404,0.614,2405,0.697,2406,0.614,2407,0.697,2408,0.559,2409,1.142,2410,0.697,2411,1.459,2412,0.697,2413,0.697,2414,0.697,2415,1.298,2416,0.697,2417,0.697,2418,0.697,2419,0.697,2420,0.697,2421,1.04,2422,0.697,2423,0.697,2424,0.697,2425,0.697,2426,0.697,2427,2.28,2428,0.614,2429,0.697,2430,1.298,2431,0.697,2432,0.697,2433,1.298,2434,1.298,2435,1.298,2436,1.821,2437,1.821,2438,2.007,2439,1.298,2440,1.459,2441,1.04,2442,0.614,2443,0.485,2444,0.697,2445,0.559,2446,0.614,2447,0.697,2448,0.902,2449,0.697,2450,1.603,2451,0.697,2452,0.697,2453,0.697,2454,0.697,2455,1.869,2456,0.614,2457,1.459,2458,0.697,2459,1.298,2460,1.821,2461,1.142,2462,0.697,2463,0.697,2464,0.697,2465,1.298,2466,1.142,2467,1.298,2468,0.697,2469,0.697,2470,0.697,2471,0.697,2472,0.697,2473,0.697,2474,0.697,2475,0.697,2476,0.697,2477,0.614,2478,0.614,2479,0.697,2480,0.697,2481,1.821,2482,0.697,2483,1.298,2484,0.697,2485,1.142,2486,0.697,2487,1.298,2488,0.697,2489,1.298,2490,0.697,2491,1.04,2492,0.614,2493,0.697,2494,0.614,2495,0.697,2496,0.697,2497,0.614,2498,1.821,2499,1.298,2500,0.852,2501,1.142,2502,1.298,2503,1.142,2504,1.298,2505,0.902,2506,0.697,2507,1.298,2508,0.614,2509,0.697,2510,1.298,2511,1.142,2512,0.697,2513,0.697,2514,0.697,2515,0.614,2516,0.697,2517,0.697,2518,1.298,2519,0.697,2520,0.697,2521,2.685,2522,1.04,2523,0.697,2524,3.669,2525,0.697,2526,0.614,2527,0.614,2528,0.697,2529,0.697,2530,0.697,2531,0.697,2532,2.28,2533,0.697,2534,0.697,2535,1.459,2536,0.697,2537,0.697,2538,0.697,2539,0.697,2540,0.614,2541,1.142,2542,0.697,2543,0.697,2544,0.697,2545,0.697,2546,1.04,2547,0.697,2548,0.697,2549,0.697,2550,0.697,2551,0.697,2552,0.697,2553,0.697,2554,0.697,2555,2.007,2556,0.697,2557,0.697,2558,0.559,2559,0.697,2560,0.559,2561,0.697,2562,0.697,2563,0.614,2564,0.697,2565,0.518,2566,0.697,2567,0.697,2568,0.614,2569,0.697,2570,0.697,2571,0.697,2572,0.697,2573,0.697,2574,0.697,2575,0.697,2576,1.821,2577,0.559,2578,0.697,2579,0.559,2580,0.697,2581,0.697,2582,0.697,2583,0.697,2584,1.821,2585,0.697,2586,1.298,2587,1.821,2588,1.298,2589,1.298,2590,1.298,2591,1.298,2592,0.697,2593,1.298,2594,1.298,2595,0.697,2596,0.697,2597,0.697,2598,0.697,2599,0.697,2600,0.697,2601,1.298,2602,0.697,2603,0.697,2604,0.518,2605,0.697,2606,0.559,2607,0.697,2608,1.298,2609,0.697,2610,0.614,2611,0.697,2612,0.697,2613,0.697,2614,0.697,2615,0.559,2616,0.697,2617,0.697,2618,1.821,2619,1.821,2620,0.697,2621,0.697,2622,0.697,2623,1.142,2624,0.697,2625,0.697,2626,0.697,2627,0.697,2628,0.697,2629,0.697,2630,0.697,2631,1.298,2632,0.614,2633,0.697,2634,0.614,2635,0.697,2636,0.697,2637,0.697,2638,0.697,2639,0.697,2640,0.697,2641,0.697,2642,0.697,2643,0.697,2644,1.298,2645,1.298,2646,0.697,2647,0.614,2648,0.697,2649,0.697,2650,0.697,2651,1.298,2652,0.697,2653,0.697,2654,1.298,2655,0.697,2656,1.603,2657,1.298,2658,0.697,2659,0.697,2660,1.298,2661,0.434,2662,2.28,2663,0.697,2664,0.697,2665,0.697,2666,0.697,2667,0.559,2668,0.697,2669,0.964,2670,0.614,2671,1.298,2672,0.697,2673,0.697,2674,1.298,2675,0.697,2676,0.697,2677,0.697,2678,0.697,2679,0.697,2680,1.298,2681,0.697,2682,0.697,2683,0.697,2684,0.697,2685,0.697,2686,0.697,2687,0.697,2688,1.821,2689,0.697,2690,0.697,2691,0.697,2692,0.697,2693,0.697,2694,0.697,2695,0.697,2696,0.697,2697,1.298,2698,1.298,2699,0.697,2700,0.697,2701,0.697,2702,2.28,2703,4.604,2704,1.298,2705,1.04,2706,1.142,2707,1.298,2708,2.28,2709,1.142,2710,1.298,2711,0.697,2712,1.298,2713,1.142,2714,1.298,2715,1.298,2716,1.298,2717,1.142,2718,1.298,2719,2.28,2720,1.298,2721,2.28,2722,1.298,2723,1.298,2724,1.142,2725,1.142,2726,1.821,2727,1.298,2728,0.697,2729,0.697,2730,1.298,2731,0.964,2732,0.485,2733,1.298,2734,0.697,2735,2.687,2736,1.298,2737,0.697,2738,0.559,2739,0.697,2740,2.28,2741,0.697,2742,0.697,2743,0.697,2744,0.697,2745,0.697,2746,0.485,2747,0.614,2748,0.697,2749,0.697,2750,0.697,2751,1.298,2752,1.298,2753,1.298,2754,0.697,2755,0.697,2756,0.697,2757,0.614,2758,0.559,2759,0.697,2760,0.697,2761,1.298,2762,1.298,2763,0.697,2764,0.697,2765,0.697,2766,0.518,2767,0.697,2768,0.697,2769,0.697,2770,1.298,2771,0.697,2772,1.821,2773,1.603,2774,0.697,2775,0.697,2776,0.559,2777,1.298,2778,1.298,2779,0.697,2780,0.518,2781,0.697,2782,0.697,2783,1.821,2784,1.298,2785,0.697,2786,1.298,2787,0.559,2788,0.697,2789,1.298,2790,0.697,2791,0.697,2792,0.697,2793,2.28,2794,0.697,2795,0.697,2796,0.697,2797,0.697,2798,0.697,2799,0.697,2800,0.697,2801,1.298,2802,0.697,2803,0.697,2804,0.697,2805,0.614,2806,1.298,2807,0.697,2808,1.298,2809,0.697,2810,0.697,2811,0.559,2812,0.697,2813,1.298,2814,2.28,2815,0.697,2816,0.614,2817,0.697,2818,1.298,2819,1.298,2820,0.697,2821,0.697,2822,0.614,2823,1.298,2824,0.697,2825,0.697,2826,1.298,2827,0.559,2828,0.559,2829,1.298,2830,0.697,2831,0.697,2832,0.697,2833,1.298,2834,1.298,2835,0.697,2836,0.697,2837,1.298,2838,0.697,2839,0.697,2840,0.697,2841,0.697,2842,1.298,2843,0.697,2844,0.697,2845,0.559,2846,0.697,2847,2.28,2848,0.559,2849,0.697,2850,0.697,2851,1.298,2852,0.614,2853,0.518,2854,1.298,2855,0.697,2856,2.687,2857,1.298,2858,0.518,2859,1.298,2860,0.518,2861,0.697,2862,0.697,2863,0.559,2864,0.697,2865,0.697,2866,0.697,2867,0.697,2868,0.697,2869,0.697,2870,0.697,2871,0.697,2872,0.697,2873,0.697,2874,0.697,2875,0.697,2876,1.142,2877,0.697,2878,0.697,2879,0.697,2880,0.697,2881,0.697,2882,0.559,2883,0.697,2884,0.697,2885,0.614,2886,0.697,2887,0.697,2888,0.697,2889,0.697,2890,0.697,2891,0.559,2892,0.485,2893,0.697,2894,0.697,2895,0.614,2896,1.821,2897,0.697,2898,0.614,2899,0.614,2900,0.697,2901,0.614,2902,0.697,2903,0.697,2904,0.697,2905,0.697,2906,0.697,2907,2.28,2908,0.697,2909,0.697,2910,0.614,2911,0.697,2912,1.603,2913,0.697,2914,0.697,2915,0.697,2916,0.697,2917,0.614,2918,0.697,2919,1.298,2920,0.697,2921,0.697,2922,0.697,2923,0.559,2924,1.298,2925,0.697,2926,0.697,2927,0.697,2928,0.697,2929,1.821,2930,1.298,2931,1.298,2932,0.697,2933,0.614,2934,0.697,2935,1.298,2936,0.614,2937,1.821,2938,0.697,2939,0.697,2940,0.697,2941,0.697,2942,0.697,2943,1.298,2944,1.298,2945,1.298,2946,1.298,2947,1.603,2948,1.298,2949,0.697,2950,1.298,2951,0.697,2952,1.298,2953,0.457,2954,0.614,2955,1.821,2956,0.697,2957,0.614,2958,0.697,2959,0.697,2960,0.697,2961,2.687,2962,0.697,2963,0.614,2964,0.697,2965,0.697,2966,0.697,2967,0.614,2968,0.697,2969,1.142,2970,0.697,2971,0.614,2972,0.518,2973,0.697,2974,0.697,2975,0.697,2976,0.697,2977,1.298,2978,0.697,2979,0.697,2980,0.697,2981,0.697,2982,0.614,2983,0.697,2984,0.697,2985,0.559,2986,0.697,2987,0.697,2988,0.518,2989,0.697,2990,0.697,2991,0.697,2992,1.298,2993,0.614]],["title/coverage.html",[2214,3.766]],["body/coverage.html",[0,0.271,1,1.572,5,0.067,6,2.221,8,1.071,12,1.14,24,0.01,26,0.176,34,0.468,51,0.896,76,0.003,77,0.004,78,0.003,79,1.572,80,2.221,81,2.221,82,1.656,100,1.432,107,1.319,108,2.371,114,2.022,115,2.221,116,2.221,124,1.874,145,1.319,150,1.755,160,2.611,175,1.498,176,1.572,182,2.003,184,2.221,214,1.182,234,3.188,264,2.221,273,1.755,314,1.432,315,2.221,316,3.922,324,1.432,325,3.991,326,0.872,327,1.038,341,1.373,355,1.373,376,1.572,381,1.432,383,1.592,407,1.498,408,1.498,409,1.572,410,3.188,411,2.577,417,1.874,420,1.572,428,1.656,429,3.188,430,3.656,448,3.424,461,2.617,462,1.874,463,3.946,464,3.946,475,2.022,482,2.022,488,2.022,489,2.221,490,2.221,495,1.319,521,1.755,525,2.221,529,2.022,539,3.501,540,3.188,547,1.498,585,1.755,587,2.221,588,2.221,605,1.874,606,2.954,607,2.766,637,1.755,638,2.221,643,1.874,644,3.946,650,2.022,653,5.589,654,5.235,657,2.022,673,2.022,675,2.022,681,2.022,685,2.022,695,4.229,723,1.874,724,2.022,737,2.022,748,1.874,749,2.221,750,2.221,784,1.656,785,3.424,795,1.656,798,1.432,799,3.188,800,3.188,804,1.319,806,1.755,816,2.221,817,2.221,818,1.874,819,2.221,837,1.373,838,2.221,850,1.874,852,1.874,853,2.221,854,2.221,857,3.946,876,2.221,899,1.656,900,2.221,905,2.221,934,2.022,935,2.766,936,2.022,937,2.022,952,2.022,969,4.426,997,1.874,998,2.221,1007,1.656,1013,1.755,1015,1.656,1027,1.755,1033,1.755,1036,1.656,1038,1.572,1040,1.874,1043,1.755,1044,1.874,1071,3.188,1072,3.188,1089,2.022,1092,2.221,1106,1.874,1108,1.874,1153,1.572,1167,2.221,1178,1.656,1192,1.755,1206,3.656,1211,1.755,1217,1.755,1222,2.022,1237,3.188,1238,2.221,1254,2.022,1274,2.221,1275,2.022,1350,2.221,1368,2.221,1380,2.221,1381,1.373,1382,2.022,1390,2.221,1395,1.755,1396,3.656,1402,1.755,1417,1.755,1447,2.221,1448,2.221,1449,3.188,1455,2.221,1456,3.188,1460,1.874,1461,2.221,1472,2.611,1476,1.498,1486,2.221,1508,1.656,1509,2.221,1519,2.221,1530,1.874,1531,2.221,1535,1.656,1537,1.755,1539,1.656,1554,2.221,1572,1.656,1577,2.221,1640,2.221,1655,2.221,1703,2.221,1705,2.221,1716,1.874,1736,2.221,1745,2.221,1757,2.221,1763,2.221,1770,2.221,1774,2.221,1775,2.221,1776,2.221,1823,2.954,1840,2.022,1849,2.221,1965,2.022,2010,3.501,2028,2.221,2071,4.334,2181,1.656,2214,1.572,2535,2.022,2540,2.221,2845,7.095,2994,2.022,2995,7.006,2996,8.853,2997,6.167,2998,7.006,2999,4.334,3000,2.221,3001,2.022,3002,2.221,3003,5.588,3004,5.588,3005,5.588,3006,5.588,3007,6.459,3008,2.221,3009,2.221,3010,4.334,3011,4.334,3012,2.221,3013,2.221,3014,6.08,3015,2.221,3016,7.006,3017,3.946,3018,2.022,3019,2.221,3020,2.523,3021,2.523,3022,2.523,3023,2.221,3024,2.523,3025,5.588,3026,3.978,3027,3.978,3028,3.978,3029,6.459,3030,4.923,3031,2.523,3032,5.588,3033,2.523,3034,2.523,3035,2.523,3036,3.978,3037,2.523,3038,2.523,3039,5.951,3040,2.221,3041,2.221,3042,2.221,3043,2.221,3044,2.523,3045,2.523,3046,2.523,3047,3.501,3048,3.501,3049,2.221,3050,2.221,3051,2.221,3052,2.022,3053,2.221,3054,2.221,3055,2.221,3056,4.334,3057,2.523]],["title/dependencies.html",[142,2.424,2558,3.001]],["body/dependencies.html",[0,0.171,4,0.145,5,0.148,16,0.791,24,0.01,26,0.275,58,1.706,59,1.224,76,0.004,77,0.006,78,0.004,102,0.899,106,1.787,142,1.787,156,2.931,158,3.475,180,3.013,185,2.031,202,2.626,209,2.147,237,2.063,270,3.818,295,2.459,297,2.459,340,3.648,359,2.343,395,2.516,454,1.986,457,4.007,474,2.343,505,3.163,568,1.787,597,2.696,618,4.349,619,3.163,670,3.475,866,2.459,883,5.663,884,2.745,948,3.163,951,2.459,1022,2.343,1030,2.931,1479,5.257,1540,4.127,1746,2.931,1818,3.462,1843,3.475,1938,4.454,1969,3.475,2063,2.745,2128,3.475,2129,3.475,2184,3.475,2307,3.475,2330,3.475,2331,3.475,2374,2.591,2375,3.475,2378,3.475,2385,3.475,2428,3.475,2443,2.745,2448,3.866,2461,3.475,2670,3.475,2933,3.475,2971,3.475,3058,5.558,3059,7.844,3060,3.947,3061,3.947,3062,3.947,3063,3.947,3064,3.947,3065,5.558,3066,5.558,3067,3.947,3068,5.558,3069,3.947,3070,3.947,3071,3.947,3072,3.947,3073,3.947,3074,3.947,3075,3.947,3076,3.947,3077,3.947,3078,5.558,3079,3.947,3080,3.947,3081,3.947,3082,3.947,3083,3.947,3084,3.947,3085,5.558,3086,3.947,3087,3.947,3088,5.558,3089,3.947,3090,3.947,3091,7.359,3092,3.947,3093,3.947,3094,3.947,3095,3.947,3096,3.947,3097,3.947,3098,3.947,3099,3.947,3100,3.947,3101,3.947,3102,5.558,3103,3.947,3104,2.931,3105,3.947,3106,3.947,3107,5.558,3108,3.947,3109,5.558,3110,5.558,3111,3.947,3112,3.947,3113,3.947,3114,3.163,3115,3.947,3116,3.947,3117,3.947,3118,3.947,3119,3.947,3120,5.558,3121,3.947,3122,3.947,3123,3.947,3124,3.947,3125,3.947,3126,3.947,3127,3.947,3128,3.947,3129,3.947,3130,3.947,3131,3.947,3132,3.947,3133,3.947,3134,3.947,3135,3.947,3136,3.947,3137,3.947,3138,5.558,3139,4.892,3140,3.947,3141,3.947,3142,3.947,3143,3.947,3144,3.947,3145,3.475,3146,3.947,3147,3.947,3148,5.558,3149,3.947,3150,3.947,3151,3.947,3152,3.947,3153,3.947,3154,3.947,3155,3.947,3156,3.947,3157,3.947,3158,3.947,3159,3.947,3160,3.947,3161,5.558,3162,3.947,3163,3.947,3164,3.947,3165,3.947,3166,3.947,3167,5.558,3168,3.947,3169,3.475,3170,3.163,3171,3.947,3172,3.947,3173,3.947,3174,3.947,3175,3.947,3176,3.947,3177,3.947,3178,3.947,3179,3.947,3180,3.947,3181,3.947,3182,3.947,3183,3.947,3184,3.947,3185,3.947,3186,3.947,3187,3.947,3188,3.163,3189,3.947,3190,3.947,3191,3.947,3192,3.947,3193,3.947,3194,3.947,3195,3.947,3196,3.947,3197,3.947,3198,3.947,3199,3.947,3200,3.947,3201,3.947]],["title/miscellaneous/functions.html",[3202,2.457,3203,3.723]],["body/miscellaneous/functions.html",[9,0.543,23,1.407,24,0.01,25,1.068,26,0.429,27,1.131,33,1.963,39,1.024,76,0.007,77,0.008,78,0.007,99,1.964,100,4.224,108,3.392,145,4.179,385,2.991,579,3.499,613,3.84,653,4.578,654,5.775,696,4.941,698,4.941,703,4.941,723,5.527,764,4.047,797,3.102,969,2.991,1089,6.408,1257,3.84,2895,5.427,3008,6.552,3009,6.552,3015,5.427,3050,5.427,3051,6.552,3202,4.047,3203,4.288,3204,6.165,3205,7.038,3206,6.165,3207,4.941,3208,6.165,3209,6.165]],["title/index.html",[9,0.329,1783,2.78,1784,2.604]],["body/index.html",[5,0.163,16,0.906,24,0.008,25,0.815,32,1.139,34,0.838,71,1.918,76,0.005,77,0.007,78,0.005,84,2.675,85,2.459,86,1.751,87,1.139,93,2.951,111,3.611,112,2.816,117,1.606,120,2.967,180,2.117,243,4.607,244,3.861,248,3.622,250,3.32,251,1.562,270,2.683,378,2.047,401,2.363,433,2.459,438,2.565,468,3.747,481,2.858,520,2.961,537,2.967,568,2.047,597,2.961,598,2.683,608,1.981,622,2.816,652,2.967,709,2.967,716,4.426,752,4.101,771,3.357,774,2.565,781,3.463,847,2.275,851,2.816,862,3.623,917,3.463,951,2.816,955,3.623,1022,2.683,1325,2.459,1360,3.98,1540,3.357,1606,3.144,1636,3.623,1709,2.967,1771,2.967,1787,3.144,1788,5.537,1790,4.245,1800,3.98,1818,3.801,1829,4.855,1830,5.366,1846,3.98,1847,3.98,1891,4.532,1945,3.357,1976,4.101,1984,3.98,2021,7.163,2025,3.623,2034,3.357,2060,2.967,2154,3.98,2181,4.006,2213,2.565,2214,2.816,2234,4.891,2263,3.144,2312,3.357,2369,3.144,2374,2.967,2406,6.082,2408,4.891,2411,3.623,2446,3.98,2634,3.98,2731,4.532,2732,3.144,2776,3.623,2891,3.623,2892,3.144,2967,3.98,2988,3.357,2997,3.98,3188,3.623,3210,3.357,3211,6.103,3212,6.379,3213,4.521,3214,3.98,3215,4.521,3216,3.144,3217,3.144,3218,3.98,3219,3.144,3220,4.521,3221,4.521,3222,3.144,3223,3.144,3224,4.521,3225,3.98,3226,4.245,3227,3.98,3228,4.521,3229,3.623,3230,4.521,3231,6.082,3232,5.493,3233,3.801,3234,3.98,3235,6.103,3236,6.103,3237,7.725,3238,7.397,3239,4.521,3240,4.521,3241,6.103,3242,3.98,3243,4.521,3244,3.98,3245,6.103,3246,4.521,3247,3.98,3248,6.103,3249,6.103,3250,3.357,3251,3.98,3252,4.521,3253,4.521,3254,4.521,3255,4.521,3256,4.521,3257,2.816,3258,4.521,3259,4.521,3260,3.623,3261,4.521,3262,3.357,3263,3.623,3264,4.521,3265,3.98,3266,4.521,3267,3.623,3268,3.623,3269,4.532,3270,4.521,3271,4.521,3272,3.98,3273,4.521]],["title/license.html",[1783,2.78,1784,2.604,3274,3.296]],["body/license.html",[0,0.029,4,0.294,5,0.046,12,1.685,21,0.099,24,0.002,28,0.309,30,0.326,34,0.822,54,0.052,55,0.286,67,0.701,71,0.401,75,0.701,76,0.003,77,0.002,78,0.002,84,2.943,87,0.238,93,0.685,111,1.517,112,0.588,120,1.126,136,0.199,153,0.428,196,2.038,198,1.578,200,1.314,206,1.274,211,2.076,212,3.464,239,3.061,251,2.275,256,5.637,267,0.514,269,0.974,297,0.588,302,0.701,328,0.414,332,0.366,347,0.62,350,2.494,351,0.588,383,0.826,397,0.428,398,0.414,427,0.757,433,1.283,438,1.647,440,0.701,450,0.536,469,5.03,470,2.317,481,2.425,485,1.97,494,0.428,501,0.475,530,0.657,534,1.722,535,2.431,537,2.91,568,0.777,586,0.913,594,1.469,598,2.237,604,1.359,608,0.752,616,0.494,618,1.069,642,1.722,665,0.62,684,1.069,730,1.274,756,0.62,759,0.62,763,1.144,767,0.701,772,2.325,774,0.974,775,1.194,778,1.807,781,0.974,803,2.939,839,1.126,843,3.742,866,1.469,909,0.657,914,0.588,917,1.338,918,0.701,942,0.62,960,0.62,961,2.867,963,0.757,964,2.622,966,1.751,978,2.155,980,3.995,1024,1.069,1030,0.701,1063,0.757,1074,4.311,1082,2.018,1161,0.62,1187,0.657,1257,2.097,1296,0.657,1325,2.051,1334,0.757,1351,1.751,1381,3.582,1398,1.517,1485,0.657,1542,2.076,1544,1.469,1556,0.657,1594,2.926,1603,1.905,1607,1.194,1620,1.375,1674,3.021,1689,0.701,1690,4.13,1691,2.964,1708,1.64,1709,1.905,1740,4.146,1771,0.62,1789,0.831,1790,1.64,1795,2.018,1797,1.511,1808,1.511,1816,0.62,1823,1.274,1830,2.568,1834,1.375,1836,2.964,1840,1.375,1845,0.657,1880,1.511,1891,0.701,1897,0.831,1910,0.757,1915,0.831,1938,1.375,1947,0.62,1965,0.757,1972,0.831,1976,2.237,1985,0.831,1988,0.831,2004,0.831,2025,5.993,2032,2.5,2034,1.274,2043,0.757,2054,1.511,2056,0.757,2069,1.375,2086,3.061,2090,2.698,2092,0.657,2100,0.757,2102,0.831,2105,0.831,2123,0.701,2124,2.5,2150,0.831,2186,0.831,2204,0.701,2214,1.069,2236,1.511,2240,1.375,2246,0.757,2263,0.657,2269,3.061,2276,2.325,2284,0.757,2286,5.84,2287,3.447,2288,1.751,2291,6.087,2308,2.342,2312,1.274,2352,0.831,2368,3.292,2380,4.702,2389,3.083,2394,0.701,2403,0.757,2421,0.757,2438,0.831,2440,1.375,2441,1.375,2445,3.553,2477,0.831,2500,1.905,2501,0.831,2503,0.831,2535,0.757,2541,0.831,2546,0.757,2565,1.274,2568,0.831,2579,0.757,2604,1.274,2623,0.831,2661,2.348,2667,1.375,2705,1.375,2731,2.155,2732,1.64,2738,1.375,2746,2.018,2758,0.757,2776,1.375,2780,1.751,2816,1.511,2827,0.757,2853,1.751,2860,0.701,2863,3.021,2882,4.15,2885,0.831,2892,0.657,2898,5.416,2899,1.511,2901,1.511,2910,0.831,2947,0.831,2954,1.511,2957,0.831,2972,3.845,2982,2.076,3023,0.831,3114,0.757,3212,0.757,3219,2.342,3222,2.018,3223,0.657,3226,0.657,3227,2.554,3229,1.89,3233,0.588,3247,0.831,3250,1.751,3257,3.225,3269,1.751,3274,7.61,3275,6.152,3276,6.022,3277,0.944,3278,2.358,3279,7.176,3280,3.367,3281,4.827,3282,5.079,3283,3.367,3284,0.944,3285,0.944,3286,1.716,3287,2.358,3288,2.358,3289,5.38,3290,0.944,3291,0.944,3292,1.511,3293,3.367,3294,3.304,3295,1.716,3296,1.716,3297,5.043,3298,4.433,3299,0.944,3300,0.944,3301,3.77,3302,1.511,3303,0.831,3304,0.831,3305,4.559,3306,7.772,3307,2.358,3308,2.076,3309,0.944,3310,0.944,3311,2.902,3312,4.709,3313,0.944,3314,4.709,3315,1.274,3316,0.944,3317,2.902,3318,0.757,3319,2.902,3320,0.757,3321,5.178,3322,0.831,3323,0.831,3324,4.956,3325,5.179,3326,3.367,3327,5.38,3328,0.944,3329,1.716,3330,0.944,3331,0.944,3332,2.076,3333,0.944,3334,0.944,3335,0.944,3336,0.944,3337,0.944,3338,0.944,3339,2.902,3340,0.944,3341,2.358,3342,0.944,3343,0.944,3344,5.116,3345,1.751,3346,0.944,3347,0.944,3348,1.89,3349,2.358,3350,0.944,3351,0.701,3352,1.716,3353,1.716,3354,2.358,3355,6.869,3356,0.944,3357,3.367,3358,3.367,3359,3.77,3360,0.757,3361,2.358,3362,4.74,3363,1.716,3364,0.944,3365,0.944,3366,0.944,3367,2.358,3368,0.944,3369,0.944,3370,1.716,3371,3.77,3372,0.944,3373,1.716,3374,0.944,3375,3.447,3376,0.944,3377,2.902,3378,0.831,3379,1.716,3380,7.74,3381,2.358,3382,4.709,3383,2.554,3384,1.274,3385,0.944,3386,1.716,3387,2.358,3388,4.709,3389,4.956,3390,0.944,3391,2.902,3392,1.716,3393,2.902,3394,2.554,3395,0.944,3396,2.358,3397,6.986,3398,1.511,3399,0.944,3400,4.433,3401,0.944,3402,2.076,3403,2.474,3404,0.944,3405,5.882,3406,2.076,3407,1.716,3408,3.629,3409,5.179,3410,3.77,3411,0.944,3412,1.716,3413,4.122,3414,0.944,3415,5.562,3416,1.716,3417,0.944,3418,0.944,3419,0.944,3420,2.358,3421,0.944,3422,0.944,3423,0.944,3424,0.757,3425,2.358,3426,2.554,3427,0.944,3428,0.944,3429,0.944,3430,1.511,3431,4.956,3432,0.831,3433,0.757,3434,2.076,3435,2.358,3436,1.751,3437,2.358,3438,0.944,3439,2.964,3440,0.831,3441,1.126,3442,2.076,3443,0.944,3444,0.944,3445,0.944,3446,0.944,3447,1.511,3448,0.944,3449,6.208,3450,1.511,3451,2.076,3452,0.657,3453,1.716,3454,2.902,3455,0.831,3456,0.944,3457,1.716,3458,2.698,3459,0.944,3460,0.944,3461,0.944,3462,1.716,3463,0.944,3464,1.375,3465,0.944,3466,2.698,3467,0.944,3468,0.757,3469,4.122,3470,2.325,3471,0.944,3472,2.964,3473,0.944,3474,1.716,3475,0.944,3476,0.944,3477,0.944,3478,0.944,3479,0.944,3480,2.358,3481,0.944,3482,1.716,3483,1.716,3484,1.716,3485,0.944,3486,5.562,3487,1.511,3488,0.944,3489,0.944,3490,0.831,3491,0.944,3492,0.657,3493,0.944,3494,0.944,3495,2.358,3496,0.831,3497,0.944,3498,5.178,3499,0.701,3500,0.944,3501,0.944,3502,3.367,3503,3.319,3504,0.944,3505,0.944,3506,2.358,3507,0.944,3508,0.944,3509,2.902,3510,0.944,3511,0.944,3512,0.944,3513,0.944,3514,0.944,3515,0.944,3516,1.716,3517,0.944,3518,2.358,3519,0.944,3520,0.944,3521,1.716,3522,0.944,3523,0.944,3524,0.944,3525,0.944,3526,0.944,3527,1.716,3528,1.194,3529,4.146,3530,0.944,3531,3.77,3532,0.944,3533,0.944,3534,1.511,3535,2.358,3536,2.902,3537,2.902,3538,2.902,3539,0.944,3540,2.964,3541,2.964,3542,0.944,3543,2.358,3544,0.944,3545,1.716,3546,0.944,3547,1.511,3548,3.367,3549,1.716,3550,2.902,3551,2.902,3552,0.944,3553,2.358,3554,3.367,3555,0.944,3556,0.944,3557,3.304,3558,2.358,3559,2.358,3560,1.716,3561,0.657,3562,0.944,3563,0.831,3564,0.944,3565,0.944,3566,2.076,3567,0.944,3568,0.944,3569,0.944,3570,0.944,3571,0.944,3572,2.358,3573,0.944,3574,0.831,3575,2.076,3576,1.716,3577,3.77,3578,5.796,3579,2.358,3580,1.716,3581,1.716,3582,1.716,3583,0.831,3584,0.944,3585,0.944,3586,0.944,3587,3.319,3588,1.716,3589,0.944,3590,0.944,3591,0.944,3592,0.944,3593,1.716,3594,0.944,3595,1.716,3596,0.944,3597,0.944,3598,3.083,3599,0.944,3600,4.559,3601,0.944,3602,0.944,3603,0.944,3604,0.944,3605,1.716,3606,0.944,3607,2.902,3608,1.716,3609,0.831,3610,0.944,3611,0.944,3612,0.944,3613,0.944,3614,1.716,3615,0.944,3616,0.944,3617,0.757,3618,2.554,3619,0.944,3620,1.716,3621,0.944,3622,0.944,3623,2.076,3624,0.944,3625,0.944,3626,0.944,3627,0.944,3628,2.902,3629,0.944,3630,0.944,3631,0.944,3632,0.831,3633,0.831,3634,0.831,3635,0.944,3636,0.944,3637,0.944,3638,3.367,3639,0.944,3640,0.944,3641,2.902,3642,0.944,3643,0.944,3644,0.944,3645,0.944,3646,0.944,3647,0.944,3648,2.902,3649,0.944,3650,0.944,3651,2.358,3652,0.944,3653,0.757,3654,2.358,3655,0.944,3656,0.944,3657,0.944,3658,0.944,3659,0.944,3660,0.944,3661,0.944,3662,0.831,3663,1.511,3664,0.944,3665,0.657,3666,1.716,3667,0.831,3668,0.944,3669,2.902,3670,0.944,3671,0.944,3672,1.716,3673,2.358,3674,2.358,3675,0.757,3676,1.716,3677,0.944,3678,2.358,3679,4.122,3680,0.944,3681,0.944,3682,1.716,3683,0.944,3684,0.944,3685,0.944,3686,0.944,3687,2.902,3688,2.358,3689,0.944,3690,3.367,3691,0.944,3692,0.944,3693,0.944,3694,0.944,3695,0.831,3696,0.944,3697,1.716,3698,1.716,3699,1.511,3700,2.358,3701,0.831,3702,0.944,3703,1.375,3704,2.358,3705,0.944,3706,1.511,3707,0.944,3708,1.716,3709,0.944,3710,0.944,3711,1.716,3712,6.76,3713,2.358,3714,0.944,3715,3.367,3716,4.956,3717,2.358,3718,0.944,3719,0.831,3720,0.944,3721,0.944,3722,2.902,3723,0.944,3724,2.358,3725,0.944,3726,0.944,3727,0.944,3728,0.944,3729,0.944,3730,0.944,3731,0.944,3732,2.902,3733,1.716,3734,0.944,3735,0.944,3736,2.358,3737,0.944,3738,1.716,3739,2.358,3740,1.716,3741,0.944,3742,0.944,3743,0.944,3744,1.716,3745,2.358,3746,0.944,3747,0.831,3748,0.944,3749,0.944,3750,1.716,3751,0.944,3752,0.831,3753,0.944,3754,0.944,3755,0.944,3756,0.944,3757,2.358,3758,1.716,3759,0.831,3760,0.944,3761,0.944,3762,2.902,3763,0.944,3764,2.358,3765,0.944,3766,0.944,3767,1.716,3768,0.944,3769,0.944,3770,0.944,3771,2.358,3772,1.716,3773,1.716,3774,0.944,3775,1.716,3776,4.122,3777,1.511,3778,2.358,3779,2.902,3780,0.831,3781,0.944,3782,1.716,3783,0.944,3784,2.358,3785,0.944,3786,0.944,3787,0.944,3788,0.944,3789,0.944,3790,0.944,3791,2.358,3792,1.716,3793,0.944,3794,1.716,3795,0.831,3796,0.944,3797,0.944,3798,1.716,3799,1.716,3800,0.944,3801,1.511,3802,0.944,3803,0.944,3804,0.757,3805,0.944,3806,2.358,3807,0.944,3808,0.944,3809,0.944,3810,0.944,3811,1.716,3812,2.358,3813,0.944,3814,0.944,3815,0.944,3816,0.944,3817,0.757,3818,1.716,3819,0.944,3820,0.944,3821,0.944,3822,0.944,3823,0.944,3824,0.944,3825,0.944,3826,0.944,3827,0.701,3828,0.944,3829,0.944,3830,0.944,3831,2.902,3832,0.944,3833,0.944,3834,1.716,3835,0.944,3836,0.944,3837,0.944,3838,0.944,3839,0.944,3840,0.944,3841,0.944,3842,0.757,3843,0.944,3844,0.944,3845,0.944,3846,0.831,3847,1.716,3848,0.944,3849,0.944,3850,0.944,3851,0.944,3852,1.716,3853,0.944,3854,0.944,3855,0.831,3856,0.831,3857,0.62,3858,0.944,3859,1.716,3860,1.716,3861,2.964,3862,0.944,3863,0.944,3864,0.831,3865,0.944,3866,0.944,3867,2.358,3868,1.511,3869,0.944,3870,1.716,3871,1.716,3872,1.716,3873,0.944,3874,0.831,3875,0.831,3876,0.944,3877,0.831,3878,0.944,3879,0.944,3880,1.716,3881,0.944,3882,2.358,3883,0.944,3884,0.944,3885,0.944,3886,0.944,3887,0.944,3888,0.944,3889,0.944,3890,0.944,3891,0.944,3892,0.944,3893,0.831,3894,0.944,3895,0.757,3896,0.944,3897,0.944,3898,0.831,3899,0.944,3900,0.944,3901,0.944,3902,0.944,3903,0.944,3904,0.944,3905,0.944,3906,0.944,3907,0.944,3908,0.944,3909,0.944,3910,0.701,3911,0.831,3912,1.716,3913,1.511,3914,0.944,3915,0.944,3916,0.944,3917,0.944,3918,0.944,3919,0.944,3920,1.716,3921,0.944,3922,0.944,3923,0.831,3924,0.757,3925,0.944,3926,0.944,3927,0.757,3928,0.944,3929,0.944,3930,0.944,3931,0.944]],["title/modules.html",[141,2.342]],["body/modules.html",[24,0.008,76,0.007,77,0.008,78,0.007,140,4.398,141,2.449,169,4.151,174,4.151,287,4.398,290,4.398,291,4.398,292,3.753,293,4.398,866,5.513,933,4.696,1148,4.696,1463,4.398,1466,4.398,3257,5.216,3932,8.852,3933,8.852,3934,7.944,3935,8.374]],["title/overview.html",[3936,4.846]],["body/overview.html",[2,0.955,24,0.01,76,0.006,77,0.007,78,0.006,139,1.401,140,5.561,141,1.942,142,2.271,143,2.847,144,2.847,145,2.622,146,2.128,147,2.35,148,4.416,149,4.416,150,5.06,151,3.711,152,2.729,153,2.271,168,2.524,169,5.668,170,4.416,171,4.416,172,4.416,173,4.416,174,5.381,175,4.955,176,4.531,183,2.198,287,6.05,288,4.416,289,4.416,290,5.06,291,5.06,292,4.955,293,5.06,495,4.364,547,4.955,586,1.942,590,4.416,591,4.416,592,4.416,928,4.416,929,4.416,930,4.416,1038,5.2,1148,6.46,1149,4.416,1150,4.416,1152,4.416,1153,4.531,1463,5.888,1464,4.416,1465,4.416,1466,5.953,1508,4.775,1535,4.775,1570,4.416,1571,4.416,1572,4.775,1834,5.241,2243,4.416,2732,3.489,3936,4.02,3937,5.017]],["title/todo.html",[249,1.408,1783,2.78,1784,2.604]],["body/todo.html",[0,0.131,5,0.114,10,0.692,12,1.221,16,1.175,24,0.009,25,0.783,26,0.408,32,1.478,39,0.586,55,1.305,60,1.102,76,0.006,77,0.006,78,0.005,84,1.65,106,2.654,107,2.228,108,2.488,110,2.965,111,3.956,121,2.145,139,2.016,147,1.996,153,2.654,166,2.228,180,2.746,185,2.449,200,1.93,209,2.319,240,5.371,243,3.652,244,3.887,249,1.603,250,3.646,251,2.493,266,4.078,295,3.652,301,3.848,305,2.419,306,2.965,309,3.165,326,1.472,329,2.145,396,2.746,401,2.228,431,2.844,433,3.189,461,1.996,468,3.887,481,1.996,495,2.228,501,2.95,518,2.53,519,2.419,536,3.327,586,1.65,595,3.803,597,2.844,604,1.996,608,2.936,617,2.798,636,2.965,642,4.284,651,2.419,652,2.798,654,2.965,680,2.798,683,2.655,713,4.496,714,3.848,752,2.53,753,6.065,759,2.798,774,4.546,821,3.848,848,3.165,864,3.416,866,2.655,909,2.965,924,2.53,942,4.399,946,5.899,958,2.798,960,2.798,961,2.965,973,2.798,977,4.661,978,3.165,1024,2.655,1161,2.798,1174,2.53,1232,3.165,1325,2.319,1381,2.319,1399,3.848,1479,4.399,1590,2.798,1602,2.965,1606,2.965,1790,4.078,1795,2.965,1816,2.798,1817,3.752,1818,2.655,1819,3.752,1829,2.798,1852,3.752,1853,3.752,1889,3.752,1944,5.785,1945,3.165,1950,3.416,2068,2.655,2122,3.165,2181,2.798,2195,3.416,2264,3.752,2268,3.752,2276,3.416,2315,3.416,2351,3.416,2368,3.165,2369,2.965,2546,3.416,2558,3.416,2560,3.416,2661,2.655,2892,2.965,2923,3.416,2953,3.848,2985,3.416,2988,3.165,3139,3.752,3169,3.752,3170,3.416,3233,2.655,3244,3.752,3262,3.165,3315,3.165,3318,3.416,3452,2.965,3490,3.752,3534,3.752,3617,3.416,3864,5.161,3910,4.353,3938,3.416,3939,4.262,3940,3.752,3941,3.752,3942,3.165,3943,3.416,3944,4.262,3945,4.262,3946,3.752,3947,5.161,3948,4.262,3949,4.661,3950,4.262,3951,4.262,3952,4.262,3953,4.262,3954,3.752,3955,4.262,3956,3.416,3957,4.262,3958,4.262,3959,4.262,3960,3.752,3961,3.752,3962,4.262,3963,4.262,3964,4.262,3965,4.262,3966,4.262,3967,2.965,3968,3.752,3969,4.262,3970,4.262,3971,3.752,3972,3.752,3973,3.752,3974,4.262,3975,3.752,3976,4.262,3977,4.262,3978,4.262,3979,4.262,3980,5.899,3981,4.262,3982,4.262,3983,4.262,3984,4.262,3985,4.262,3986,4.262,3987,3.416,3988,4.262,3989,5.863,3990,3.752,3991,4.262]],["title/miscellaneous/typealiases.html",[3202,2.457,3992,5.353]],["body/miscellaneous/typealiases.html",[9,0.499,16,1.137,20,3.431,24,0.009,26,0.589,39,0.78,55,1.18,76,0.006,77,0.008,78,0.006,93,2.264,192,2.512,194,3.431,200,2.569,246,3.202,318,4.574,326,2.787,327,2.909,350,3.559,383,1.137,606,4.213,607,5.36,608,2.486,610,5.669,624,5.669,625,5.669,661,6.176,785,3.946,787,5.669,788,6.466,791,5.669,792,3.946,793,4.92,1190,4.373,1206,4.213,1220,6.226,1275,4.547,1304,4.547,1305,4.547,1369,3.724,1557,5.669,1922,4.995,1959,4.995,1961,4.547,3017,4.547,3018,5.669,3052,4.547,3202,3.724,3609,4.995,3993,5.674,3994,5.674,3995,5.674,3996,7.073,3997,7.073,3998,7.102,3999,5.674,4000,5.674,4001,7.073,4002,6.226,4003,7.073,4004,4.995,4005,4.995,4006,5.674,4007,7.073,4008,5.674,4009,5.674,4010,5.674,4011,3.724,4012,5.674,4013,5.674,4014,5.674,4015,5.674,4016,5.674]],["title/miscellaneous/variables.html",[1844,3.723,3202,2.457]],["body/miscellaneous/variables.html",[9,0.19,10,0.351,12,1.611,14,0.811,24,0.01,26,0.54,29,0.53,30,0.745,32,2.205,33,2.782,34,1.117,39,0.773,49,0.916,64,0.186,69,1.501,76,0.004,77,0.004,78,0.002,79,2.186,82,2.303,84,1.359,86,1.717,93,1.4,99,0.53,100,2.517,106,2.008,107,1.128,108,3.668,109,1.602,118,2.186,119,2.899,121,1.086,129,1.927,136,1.637,146,1.489,160,2.911,168,1.086,180,2.077,185,0.788,198,1.174,202,0.811,213,1.729,214,1.644,219,0.861,229,2.083,244,1.702,248,1.281,249,0.811,251,0.745,267,1.909,271,3.554,273,1.501,305,1.224,306,1.501,316,1.909,318,1.281,321,1.344,332,0.836,358,1.174,359,1.281,378,0.977,382,1.174,385,1.702,395,0.977,396,1.011,397,0.977,398,0.945,399,0.977,410,1.729,411,1.4,417,2.606,426,1.9,429,1.729,430,2.606,433,1.909,448,4.19,453,1.281,458,3.085,461,1.011,462,1.602,463,1.729,464,3.554,467,1.501,468,1.702,471,1.602,475,2.812,476,2.812,477,1.9,478,1.9,481,1.644,482,2.812,483,2.303,484,1.729,485,2.318,486,1.729,487,1.602,495,3.319,498,1.602,501,1.766,518,3.032,520,1.702,536,1.224,577,1.702,579,1.991,585,2.441,595,1.224,596,1.128,597,1.702,604,1.011,608,0.945,617,1.416,636,1.501,642,1.281,643,1.602,644,1.729,648,1.729,650,3.554,651,1.224,652,1.416,653,1.602,654,4.602,656,1.729,657,2.812,665,2.303,673,2.812,674,1.9,675,2.812,676,4.828,677,1.729,678,1.602,679,1.9,680,2.911,681,2.812,682,1.501,683,2.762,684,1.344,685,2.812,686,1.9,687,3.089,688,1.9,689,1.729,690,1.9,691,1.9,692,1.9,693,1.9,694,1.9,696,1.729,698,1.729,699,4.505,703,1.729,709,1.416,710,3.089,711,1.501,712,1.9,713,1.344,714,2.911,715,3.089,716,2.413,717,1.729,718,3.089,719,1.9,720,2.812,721,1.9,722,1.9,723,1.602,724,2.812,725,1.9,726,1.9,727,1.729,728,1.729,729,1.729,730,1.602,731,1.602,732,1.9,733,1.9,734,1.9,735,1.9,736,4.948,737,2.812,738,4.948,739,1.9,740,1.729,741,1.9,752,1.281,755,2.812,764,1.416,767,1.602,778,1.344,785,1.501,789,1.416,790,1.501,798,1.224,805,1.501,843,1.501,847,1.086,857,1.729,858,1.9,859,1.9,863,1.416,870,1.729,874,1.9,875,1.9,882,1.729,884,3.91,914,1.344,917,1.224,924,1.281,934,1.729,935,3.085,936,1.729,937,2.812,940,3.089,942,2.303,943,3.089,947,2.812,950,4.948,952,2.812,953,1.9,954,3.089,955,1.729,956,2.812,957,1.9,958,1.416,959,1.729,960,1.416,961,1.501,962,1.602,963,1.729,964,1.501,965,1.9,966,1.602,967,3.089,968,1.9,969,1.047,970,1.9,971,1.9,1007,2.911,1040,2.606,1071,1.729,1072,2.812,1160,1.501,1206,1.602,1215,1.602,1222,2.812,1254,2.812,1267,1.416,1351,1.602,1381,1.174,1398,2.318,1472,4.167,1484,1.729,1485,2.441,1543,1.9,1613,1.991,1707,1.501,1716,2.606,1816,1.416,1818,2.186,1829,3.353,1830,2.762,1844,1.501,1851,1.9,1887,1.9,1896,3.089,1950,2.812,2060,1.416,2124,1.602,2214,1.344,2282,1.416,2351,1.729,2374,1.416,2403,1.729,2411,1.729,2442,1.9,2443,3.085,2455,4.19,2478,3.089,2522,1.729,2632,1.9,2985,1.729,2994,1.729,2999,1.9,3000,3.089,3001,2.812,3002,3.089,3010,1.9,3011,4.497,3012,3.089,3013,3.904,3017,1.729,3018,4.094,3019,3.904,3039,1.9,3040,3.904,3041,3.904,3042,3.904,3043,3.904,3047,1.9,3048,1.9,3049,3.089,3052,1.729,3053,3.089,3054,1.9,3055,3.089,3056,4.497,3104,1.602,3202,1.416,3203,2.441,3205,5.589,3207,1.729,3210,2.606,3265,1.9,3452,1.501,3943,1.729,3956,3.554,3961,1.9,3967,1.501,3971,3.089,3980,3.089,3998,1.9,4002,1.9,4004,3.089,4005,3.904,4017,6.349,4018,3.509,4019,2.158,4020,6.349,4021,2.158,4022,4.435,4023,2.158,4024,4.435,4025,2.158,4026,3.509,4027,2.158,4028,2.158,4029,2.158,4030,3.089,4031,2.158,4032,2.158,4033,2.158,4034,2.158,4035,2.158,4036,2.158,4037,2.158,4038,2.158,4039,1.9,4040,2.158,4041,2.158,4042,2.158,4043,2.158,4044,2.158,4045,2.812,4046,1.9,4047,1.9,4048,1.9,4049,2.158,4050,2.158,4051,2.158,4052,3.089,4053,2.158,4054,2.158,4055,2.158,4056,2.158,4057,2.158,4058,1.9,4059,2.158,4060,2.158,4061,2.158,4062,2.158,4063,2.158,4064,2.158,4065,2.158,4066,2.158,4067,2.158,4068,2.158,4069,2.158,4070,2.158,4071,2.158,4072,2.158,4073,2.158,4074,2.158,4075,2.158,4076,2.158,4077,2.158,4078,2.158,4079,2.158,4080,2.158,4081,2.158,4082,2.158,4083,2.158,4084,1.9,4085,2.158,4086,2.158,4087,2.158,4088,2.158,4089,2.158,4090,2.158,4091,2.158,4092,2.158,4093,2.158,4094,2.158,4095,3.509,4096,3.509]],["title/additional-documentation/nestjs-application.html",[71,1.369,520,1.565,535,1.369,1353,1.565]],["body/additional-documentation/nestjs-application.html",[7,1.248,24,0.008,32,1.098,71,3.481,76,0.005,77,0.007,78,0.007,84,3.048,139,1.216,141,1.686,180,2.04,198,2.369,212,2.713,244,3.909,249,1.638,250,3.237,251,2.341,269,2.471,328,1.908,335,2.787,395,2.694,399,2.694,445,2.713,468,2.886,481,2.787,487,3.234,520,3.819,535,1.848,536,2.471,537,3.905,538,3.49,568,1.972,586,1.686,595,2.471,598,3.531,604,2.04,608,2.607,618,2.713,642,2.585,680,4.449,709,2.859,713,4.221,720,3.49,763,2.113,767,3.234,774,2.471,820,3.834,842,3.49,843,4.138,851,2.713,863,4.781,910,3.029,912,3.234,914,2.713,917,2.471,962,3.234,1082,4.138,1160,4.714,1161,4.449,1166,2.859,1170,3.49,1232,3.234,1353,2.886,1485,3.029,1603,2.859,1815,3.834,1818,2.713,1829,4.781,1830,5.109,1944,3.49,1947,2.859,2017,3.834,2043,3.49,2068,2.713,2181,5.289,2195,3.49,2208,3.234,2213,2.471,2214,3.706,2237,5.432,2374,2.859,2389,4.138,2563,5.238,2669,3.234,2709,5.238,2725,3.834,2758,5.432,3001,5.432,3104,3.234,3210,3.234,3212,3.49,3214,3.834,3216,3.029,3218,5.238,3232,5.033,3233,4.221,3257,2.713,3281,3.49,3436,3.234,3440,3.834,3441,2.859,3451,3.834,3452,4.714,3498,3.834,3528,3.029,3598,3.029,3665,3.029,3752,3.834,3759,3.834,3895,3.49,3934,3.834,3954,3.834,3967,3.029,3968,5.966,3972,5.238,3973,5.238,4011,3.905,4030,3.834,4045,4.769,4046,3.834,4047,3.834,4048,3.834,4084,3.834,4097,4.355,4098,3.49,4099,4.355,4100,4.355,4101,3.49,4102,4.355,4103,6.777,4104,4.355,4105,3.834,4106,4.355,4107,4.355,4108,4.355,4109,7.626,4110,4.355,4111,4.355,4112,3.834,4113,4.355,4114,4.355,4115,4.355,4116,4.355,4117,5.95,4118,4.355,4119,4.355,4120,4.355,4121,4.355,4122,4.355,4123,4.355,4124,4.355,4125,4.355,4126,4.355,4127,4.355,4128,4.355,4129,4.355,4130,4.355,4131,3.234,4132,4.355,4133,4.355,4134,3.834,4135,4.355,4136,5.95,4137,3.834,4138,4.355,4139,5.95,4140,4.355,4141,4.769,4142,3.834,4143,3.834,4144,4.355,4145,6.777,4146,5.95,4147,4.355,4148,4.355,4149,4.355,4150,3.834,4151,4.355,4152,3.49,4153,3.834,4154,4.355,4155,4.355,4156,4.355,4157,4.355,4158,4.355,4159,4.355]],["title/additional-documentation/nestjs-application/software-architecture.html",[535,1.369,1353,1.565,3282,2.396,4160,2.118]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.581,4,0.084,5,0.081,12,1.901,16,0.996,21,0.482,23,0.537,24,0.005,25,0.305,32,0.328,33,0.972,34,0.566,55,0.51,65,0.834,69,0.904,71,2.96,75,0.965,76,0.003,77,0.003,78,0.001,84,2.661,85,0.707,93,0.519,106,3.111,107,2.186,108,2.544,110,0.904,111,1.596,112,1.902,118,1.422,119,1.296,121,1.848,136,0.274,142,1.894,147,0.609,153,1.034,166,0.679,196,0.939,198,1.661,200,3.43,203,0.853,209,0.707,212,2.288,222,1.042,229,0.771,243,4.643,244,0.631,246,0.588,249,0.489,250,1.242,251,2.443,255,0.904,256,2.005,265,0.738,267,4.561,268,0.904,269,2.085,270,3.768,297,3.289,298,1.83,301,3.262,302,0.965,303,3.799,305,0.738,321,1.902,327,0.939,328,1,350,1.149,358,1.661,363,0.81,378,0.588,382,0.707,383,1.16,385,0.631,398,0.569,401,1.194,413,1.588,432,0.965,438,1.296,445,2.87,450,1.296,460,0.81,468,1.481,469,0.904,470,3.785,485,2.901,492,4.297,493,3.466,501,3.51,511,0.904,518,0.771,534,2.95,535,1.296,537,3.799,568,3.279,577,1.782,586,0.884,595,1.733,596,2.598,597,3.793,598,2.483,600,1.499,604,1.721,616,0.679,622,1.902,626,2.124,651,3.15,682,0.904,683,3.735,684,0.81,689,1.042,711,0.904,714,0.853,716,1.998,752,1.355,763,3.832,764,0.853,774,0.738,778,1.422,780,3.921,781,1.296,789,0.853,802,1.194,803,2.82,804,0.679,805,0.904,815,0.853,821,2.005,827,3.694,840,0.853,844,0.965,845,2.288,847,1.848,848,0.965,849,4.448,851,0.81,865,3.205,901,0.965,909,2.124,910,0.904,914,1.422,915,0.81,917,0.738,918,2.728,922,1.588,951,0.81,959,1.042,960,0.853,961,2.909,964,2.124,977,2.909,979,0.904,980,3.106,1014,0.771,1020,2.01,1022,0.771,1166,0.853,1187,0.904,1260,0.853,1267,0.853,1296,0.904,1325,0.707,1353,0.631,1381,0.707,1398,1.194,1491,0.904,1507,1.83,1517,1.902,1544,2.288,1594,2.873,1596,2.01,1597,3.106,1599,0.904,1603,3.262,1604,1.042,1606,0.904,1607,0.904,1613,2.615,1624,5.455,1631,2.688,1674,2.448,1689,2.268,1707,0.904,1709,0.853,1710,1.042,1739,1.696,1787,1.588,1788,1.83,1794,1.042,1795,2.124,1798,2.448,1812,1.83,1816,0.853,1818,1.902,1823,0.965,1837,1.144,1844,0.904,1845,2.909,1869,1.144,1877,1.144,1881,1.144,1884,1.144,1919,1.144,1921,2.688,1945,0.965,1947,0.853,1956,1.042,1960,1.144,1961,1.83,1976,2.18,2013,2.01,2032,6.186,2034,0.965,2039,1.83,2060,1.499,2063,2.124,2068,2.288,2087,1.144,2088,1.144,2092,2.555,2094,5.536,2115,1.144,2123,1.696,2157,2.01,2181,1.499,2204,1.696,2208,0.965,2213,0.738,2220,2.688,2234,1.042,2240,1.042,2254,3.106,2262,1.144,2263,2.124,2269,2.728,2273,0.904,2280,3.234,2287,3.205,2288,0.965,2292,1.144,2308,4.615,2311,1.144,2312,1.696,2315,1.042,2317,1.144,2323,1.144,2333,1.83,2338,2.448,2355,5.094,2368,2.268,2369,0.904,2370,1.042,2374,2.005,2380,3.205,2389,1.588,2408,1.042,2441,1.042,2448,0.904,2455,0.904,2456,3.682,2457,1.042,2466,2.01,2497,2.688,2500,2.745,2505,0.904,2515,2.01,2521,2.688,2555,1.144,2560,1.042,2565,0.965,2577,2.448,2579,1.042,2604,2.728,2606,1.042,2615,1.042,2661,2.87,2667,1.042,2669,0.965,2706,1.144,2713,1.144,2724,2.01,2746,2.124,2747,3.682,2757,2.01,2766,1.696,2780,1.696,2811,1.042,2845,1.042,2848,1.042,2852,3.234,2853,0.965,2860,2.268,2863,1.042,2876,1.144,2882,1.83,2912,1.144,2923,3.983,2936,1.144,2953,0.853,2963,1.144,2972,1.696,2993,2.01,3188,1.83,3210,2.268,3216,1.588,3217,1.588,3219,2.124,3222,3.457,3223,2.555,3226,0.904,3229,1.83,3231,1.144,3232,0.965,3250,0.965,3257,1.422,3269,1.696,3281,1.83,3282,0.965,3292,2.01,3294,1.042,3297,1.144,3302,1.144,3305,1.144,3308,1.144,3318,1.042,3321,1.144,3332,1.144,3344,1.83,3345,3.422,3348,3.694,3351,1.696,3362,2.728,3375,2.909,3378,1.144,3383,1.144,3384,4.297,3403,0.853,3406,1.144,3408,2.01,3424,1.042,3426,2.688,3430,1.144,3432,1.144,3439,1.144,3441,2.005,3449,1.144,3450,1.144,3458,5.088,3464,1.042,3466,1.042,3468,1.83,3470,1.042,3472,1.144,3492,0.904,3499,2.728,3503,1.144,3528,0.904,3529,1.144,3547,1.144,3557,1.042,3561,0.904,3575,1.144,3578,1.144,3583,1.144,3587,2.01,3598,0.904,3600,1.144,3618,1.144,3632,2.01,3633,3.682,3653,1.042,3662,3.234,3663,1.144,3665,0.904,3667,1.144,3675,1.042,3695,1.144,3699,1.144,3701,1.144,3703,4.448,3706,1.144,3719,1.144,3747,4.057,3777,1.144,3795,1.144,3804,3.983,3827,4.591,3842,1.042,3855,1.144,3856,1.144,3857,3.799,3868,1.144,3898,2.01,3911,1.144,3927,1.042,3936,1.042,3938,1.83,3941,1.144,3942,3.422,3947,1.144,3975,2.01,3990,1.144,4101,1.042,4131,0.965,4142,1.144,4160,4.972,4161,1.3,4162,1.3,4163,5.278,4164,5.551,4165,2.284,4166,3.054,4167,2.688,4168,4.232,4169,2.284,4170,2.688,4171,4.97,4172,1.3,4173,1.3,4174,2.728,4175,3.234,4176,1.3,4177,1.3,4178,1.3,4179,1.3,4180,1.3,4181,2.284,4182,2.284,4183,1.3,4184,1.3,4185,4.183,4186,1.3,4187,1.3,4188,3.054,4189,2.284,4190,1.3,4191,1.3,4192,1.3,4193,1.3,4194,6.388,4195,1.3,4196,1.3,4197,1.3,4198,1.3,4199,2.284,4200,4.609,4201,1.3,4202,1.3,4203,2.284,4204,2.284,4205,3.674,4206,3.054,4207,3.674,4208,1.3,4209,3.234,4210,3.234,4211,1.3,4212,1.3,4213,1.3,4214,1.3,4215,1.3,4216,1.3,4217,2.944,4218,2.284,4219,1.042,4220,2.688,4221,1.3,4222,1.3,4223,1.3,4224,6.873,4225,1.3,4226,6.362,4227,1.3,4228,2.01,4229,1.3,4230,1.3,4231,2.284,4232,1.042,4233,3.861,4234,5.551,4235,1.3,4236,2.688,4237,2.01,4238,2.284,4239,1.3,4240,1.3,4241,1.3,4242,1.3,4243,1.3,4244,1.3,4245,3.234,4246,2.284,4247,1.3,4248,1.144,4249,1.3,4250,1.3,4251,1.3,4252,1.144,4253,1.3,4254,2.448,4255,1.3,4256,1.3,4257,1.3,4258,1.3,4259,1.3,4260,1.3,4261,1.3,4262,1.144,4263,1.3,4264,3.054,4265,1.3,4266,1.3,4267,1.3,4268,2.944,4269,2.284,4270,1.3,4271,2.284,4272,3.054,4273,1.3,4274,1.3,4275,1.3,4276,2.01,4277,2.284,4278,3.054,4279,1.3,4280,1.3,4281,1.3,4282,1.3,4283,1.3,4284,1.3,4285,1.144,4286,1.3,4287,2.284,4288,1.3,4289,1.3,4290,5.551,4291,1.3,4292,1.144,4293,1.042,4294,1.3,4295,1.3,4296,1.3,4297,0.965,4298,1.3,4299,1.3,4300,1.3,4301,1.3,4302,1.3,4303,2.284,4304,3.054,4305,1.3,4306,1.3,4307,1.3,4308,1.3,4309,2.284,4310,1.3,4311,1.3,4312,1.3,4313,2.01,4314,1.3,4315,1.3,4316,1.3,4317,2.284,4318,1.3,4319,1.144,4320,1.3,4321,2.284,4322,1.3,4323,1.3,4324,1.144,4325,1.3,4326,1.3,4327,1.144,4328,1.3,4329,1.3,4330,2.284,4331,1.3,4332,1.3,4333,1.3,4334,1.3,4335,1.3,4336,1.144,4337,1.3,4338,1.3,4339,1.3,4340,1.144,4341,1.144,4342,3.054,4343,1.3,4344,1.3,4345,1.3,4346,1.3,4347,1.3,4348,1.3,4349,2.284,4350,1.3,4351,1.144,4352,1.3,4353,3.054,4354,1.144,4355,1.3,4356,1.3,4357,2.284,4358,1.3,4359,2.284,4360,1.3,4361,1.3,4362,1.3,4363,1.3,4364,1.3,4365,1.3,4366,1.3,4367,2.284,4368,1.3,4369,1.3,4370,1.3,4371,1.3,4372,1.3,4373,1.3,4374,1.3,4375,1.3,4376,7.389,4377,1.3,4378,1.3,4379,4.183,4380,1.144,4381,1.3,4382,1.3,4383,2.284,4384,1.3,4385,1.3,4386,1.3,4387,1.3,4388,1.3,4389,1.3,4390,1.3,4391,1.144,4392,1.3,4393,1.3,4394,1.3,4395,1.144,4396,1.3,4397,1.3,4398,1.3,4399,1.3,4400,2.284,4401,1.3,4402,1.3,4403,2.268,4404,1.3,4405,1.3,4406,1.042,4407,1.3,4408,1.3,4409,1.3,4410,4.183,4411,1.3,4412,1.3,4413,1.3,4414,1.3,4415,1.3,4416,1.3,4417,1.3,4418,1.3,4419,1.3,4420,1.3,4421,1.3,4422,1.3,4423,1.3,4424,2.284,4425,1.3,4426,1.3,4427,2.284,4428,1.3,4429,1.3,4430,1.3,4431,2.284,4432,1.3,4433,1.3,4434,1.3,4435,1.3,4436,1.3,4437,1.144,4438,2.284,4439,1.3,4440,2.284,4441,1.3,4442,1.3,4443,1.3,4444,1.144,4445,2.284]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[84,1.097,535,1.202,1353,1.375,4160,1.86,4233,1.971]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.227,2,0.443,3,0.104,4,0.085,5,0.196,10,0.759,12,1.675,16,0.467,18,0.618,20,1.13,21,0.712,24,0.01,25,0.91,26,0.26,29,1.436,30,0.805,32,0.587,34,0.692,54,0.206,55,1.093,64,0.261,70,2.324,71,0.988,76,0.006,77,0.004,78,0.003,84,1.445,106,2.824,107,2.441,111,1.951,119,1.322,120,3.506,121,1.172,129,1.312,136,0.985,139,2.261,141,2.85,142,1.054,146,1.583,147,2.921,166,1.951,168,2.941,169,1.529,174,3.065,175,2.215,176,3.327,180,2.737,182,0.587,185,1.364,198,1.267,200,2.418,202,1.403,203,1.529,209,3.82,216,1.13,219,1.489,244,2.265,246,2.824,248,3.17,251,2.834,257,1.729,258,1.866,265,2.118,266,1.62,267,2.905,269,2.65,295,2.909,305,2.118,326,1.613,328,1.635,332,1.808,358,2.03,383,0.467,399,1.054,401,1.217,411,0.929,427,1.866,428,1.529,431,3.178,433,1.267,445,2.324,450,1.322,457,2.909,461,3.189,468,1.81,470,3.424,481,1.091,483,1.529,492,3.468,518,1.382,520,2.835,534,3.469,535,1.981,536,1.322,538,1.866,540,1.866,545,2.05,547,3.702,568,3.393,577,1.13,586,1.445,594,1.451,595,3.317,596,3.26,599,3.065,600,1.529,601,1.529,602,1.529,604,2.501,607,1.62,608,1.02,612,1.382,617,2.45,622,1.451,626,1.62,642,2.772,651,1.322,669,2.05,680,1.529,683,1.451,714,3.065,716,2.905,751,3.743,753,2.991,763,3.407,764,1.529,771,1.729,775,1.62,778,1.451,780,3.468,781,2.118,798,2.118,815,1.529,844,1.729,845,2.324,852,1.729,865,1.62,884,1.62,901,2.771,917,2.65,922,2.596,924,1.382,960,2.45,1005,1.729,1007,2.45,1015,1.529,1024,3.64,1030,1.729,1033,1.62,1049,2.05,1050,2.05,1051,2.05,1052,2.05,1053,2.05,1054,2.05,1063,1.866,1082,3.248,1160,1.62,1218,2.05,1260,1.529,1325,2.03,1381,2.03,1382,1.866,1398,1.217,1472,1.529,1479,1.529,1544,1.451,1588,1.729,1590,3.065,1594,3.393,1599,1.62,1602,1.62,1613,1.322,1614,2.05,1624,4.469,1636,1.866,1708,1.62,1771,1.529,1794,3.743,1798,1.866,1812,4.28,1816,4.094,1844,1.62,1845,3.248,1902,2.05,1935,2.05,1976,2.215,2031,2.05,2063,2.596,2068,1.451,2092,2.596,2094,1.729,2122,1.729,2124,1.729,2125,2.771,2213,2.118,2269,1.729,2273,1.62,2275,1.866,2281,1.866,2282,2.45,2287,1.62,2288,1.729,2308,1.62,2333,3.743,2344,1.866,2389,2.596,2394,2.771,2402,2.05,2404,2.05,2443,4.065,2455,2.596,2485,2.05,2491,1.866,2494,2.05,2500,1.529,2505,1.62,2508,2.05,2526,2.05,2527,2.05,2610,2.05,2656,2.05,2661,1.451,2731,1.729,2766,1.729,2787,2.991,2822,2.05,2828,1.866,2848,1.866,2858,1.729,2953,1.529,3207,1.866,3217,4.885,3222,1.62,3225,2.05,3226,1.62,3232,3.966,3233,1.451,3242,2.05,3250,1.729,3251,2.05,3257,1.451,3263,1.866,3268,1.866,3269,3.966,3272,2.05,3304,2.05,3320,1.866,3322,2.05,3351,1.729,3360,3.743,3362,1.729,3375,4.065,3384,1.729,3398,2.05,3403,1.529,3424,1.866,3433,1.866,3434,2.05,3436,1.729,3441,1.529,3455,2.05,3464,1.866,3470,1.866,3492,1.62,3499,1.729,3528,2.596,3540,2.05,3561,1.62,3598,1.62,3653,1.866,3665,1.62,3703,2.991,3780,4.111,3817,2.991,3827,2.771,3857,1.529,3877,2.05,3927,1.866,3942,3.966,3943,3.743,3949,4.885,3956,3.743,3987,3.743,4011,3.065,4039,2.05,4052,2.05,4058,2.05,4101,1.866,4105,2.05,4141,2.991,4160,3.065,4163,2.05,4174,1.729,4194,3.743,4210,2.05,4226,6.217,4228,2.05,4232,2.991,4233,4.065,4248,2.05,4252,2.05,4254,1.866,4262,2.05,4268,1.866,4276,2.05,4285,3.285,4292,4.111,4297,2.771,4324,2.05,4327,3.285,4341,4.111,4351,3.285,4391,3.285,4395,2.05,4403,1.729,4446,1.866,4447,2.05,4448,2.329,4449,4.67,4450,2.329,4451,5.767,4452,2.991,4453,2.329,4454,3.732,4455,5.341,4456,2.329,4457,2.329,4458,2.329,4459,2.329,4460,2.329,4461,2.329,4462,2.329,4463,3.732,4464,2.329,4465,5.145,4466,2.329,4467,2.329,4468,2.05,4469,3.732,4470,4.67,4471,2.329,4472,2.329,4473,2.329,4474,2.329,4475,2.329,4476,2.329,4477,2.05,4478,3.732,4479,2.329,4480,1.866,4481,2.329,4482,2.329,4483,2.329,4484,2.329,4485,2.329,4486,2.329,4487,2.329,4488,2.329,4489,3.732,4490,3.732,4491,2.329,4492,2.329,4493,3.732,4494,2.329,4495,2.329,4496,2.329,4497,2.329,4498,2.329,4499,2.329,4500,2.329,4501,2.329,4502,2.329,4503,2.329,4504,2.329,4505,2.329,4506,2.329,4507,2.329,4508,2.329,4509,2.329,4510,2.329,4511,2.329,4512,2.329,4513,2.329,4514,2.329,4515,2.329,4516,1.729,4517,2.329,4518,2.329,4519,2.329,4520,2.329,4521,2.329,4522,2.05,4523,2.329,4524,2.329,4525,2.329,4526,2.329,4527,2.329,4528,2.329,4529,2.329,4530,2.05,4531,2.329,4532,2.329,4533,1.866,4534,2.329,4535,2.05,4536,2.329,4537,2.329,4538,2.329,4539,2.329,4540,2.329,4541,2.329,4542,2.329,4543,2.329,4544,2.329,4545,2.05,4546,2.329]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[535,1.202,1353,1.375,3949,1.971,4174,2.104,4547,2.495]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,2.325,21,0.382,24,0.01,29,0.897,34,1.25,39,0.502,55,0.877,70,2.274,71,3.156,76,0.004,77,0.006,78,0.004,84,2.036,105,2.926,108,1.549,111,3.22,112,3.274,120,2.396,129,1.292,136,1.109,153,1.653,185,1.334,192,1.867,202,1.373,209,4.047,219,2.85,222,4.213,229,2.167,246,2.38,249,1.373,250,2.86,251,2.838,267,4.171,268,4.285,269,2.071,270,2.167,295,2.274,298,4.213,301,2.396,302,2.711,303,2.396,320,1.908,329,1.837,332,2.385,343,3.45,350,1.837,356,2.55,383,0.731,411,1.456,432,4.574,450,3.825,470,1.908,493,2.396,501,1.837,511,2.539,518,2.167,520,2.55,534,4.657,568,1.653,577,2.55,596,4.177,601,2.396,602,2.396,604,2.462,682,2.539,683,2.274,695,2.539,709,2.396,716,2.86,763,3.465,771,2.711,775,2.539,843,2.539,847,1.837,863,2.396,915,3.837,917,2.983,969,1.771,973,2.396,1005,2.711,1166,2.396,1267,2.396,1296,2.539,1307,3.213,1339,3.213,1479,2.396,1517,2.274,1544,2.274,1594,3.351,1604,2.926,1624,2.396,1630,4.628,1690,2.711,1746,3.903,1787,2.539,1790,2.539,1830,2.274,1874,5.423,1876,2.711,1905,3.213,1976,2.167,2068,3.274,2086,2.711,2092,4.285,2123,2.711,2125,2.711,2246,2.926,2254,2.711,2282,2.396,2286,4.213,2344,2.926,2380,2.539,2409,3.213,2448,2.539,2500,2.396,2505,4.968,2604,2.711,2615,2.926,2746,3.656,2787,4.213,2811,2.926,2828,4.213,2853,2.711,2953,3.45,2972,2.711,3114,2.926,3203,2.539,3217,2.539,3219,3.656,3222,2.539,3223,3.656,3226,2.539,3260,2.926,3262,2.711,3315,2.711,3320,4.213,3345,5.524,3351,2.711,3362,2.711,3375,3.656,3403,2.396,3441,3.45,3492,3.656,3561,2.539,3598,3.656,3665,2.539,3804,2.926,3827,2.711,3846,3.213,3857,2.396,3895,2.926,3910,2.711,3923,4.628,3924,2.926,3938,2.926,3949,5.91,4011,2.396,4098,2.926,4131,2.711,4141,2.926,4160,4.424,4170,3.213,4174,3.903,4175,3.213,4217,2.926,4219,2.926,4226,5.304,4268,2.926,4297,3.903,4319,3.213,4340,3.213,4380,3.213,4406,2.926,4446,2.926,4451,4.628,4468,4.628,4516,2.711,4530,3.213,4533,2.926,4535,3.213,4547,3.213,4548,3.65,4549,3.65,4550,3.65,4551,3.65,4552,3.65,4553,3.65,4554,3.65,4555,3.65,4556,5.257,4557,3.65,4558,3.65,4559,3.65,4560,3.65,4561,3.65,4562,3.65,4563,3.65,4564,3.65,4565,3.65,4566,3.65,4567,3.65,4568,3.65,4569,3.65,4570,3.65,4571,3.213,4572,3.65,4573,3.65,4574,3.65,4575,3.213,4576,3.65,4577,3.65,4578,3.213,4579,3.65,4580,3.65,4581,3.65,4582,3.65,4583,3.65,4584,3.65,4585,4.628,4586,3.65,4587,3.65,4588,3.65,4589,3.65,4590,3.65,4591,3.65,4592,3.65,4593,3.65,4594,3.65,4595,3.65,4596,3.65,4597,3.65,4598,3.65,4599,3.65,4600,3.65,4601,3.65,4602,3.65,4603,3.65,4604,3.65,4605,3.65,4606,3.65,4607,3.65,4608,3.65,4609,3.65,4610,3.65,4611,3.65,4612,3.65,4613,3.65,4614,3.65,4615,3.65,4616,3.213,4617,3.65,4618,2.926,4619,3.65,4620,3.213,4621,3.65,4622,3.65,4623,3.65,4624,3.65,4625,2.926]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[297,1.765,535,1.202,1353,1.375,3857,1.86,4168,2.271]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.184,18,1.158,24,0.01,25,0.583,26,0.508,32,1.924,39,1.145,54,0.375,64,0.183,71,1.853,76,0.005,77,0.007,78,0.007,84,2.628,85,2.376,86,1.691,90,4.777,93,2.378,105,3.5,106,2.699,107,3.547,108,3.239,112,2.72,118,2.72,119,2.478,121,3.84,139,2.131,166,3.116,182,1.101,185,1.596,198,2.376,212,4.227,241,3.5,244,2.118,246,3.073,248,2.592,251,2.519,265,2.478,267,4.152,268,3.037,269,3.383,270,2.592,292,3.538,295,2.72,297,3.713,301,2.866,303,4.786,309,3.243,383,1.195,438,3.383,481,2.045,494,1.977,495,4.29,501,4.188,517,3.844,518,3.538,519,2.478,520,2.892,521,3.037,529,3.5,530,4.146,534,2.592,535,2.529,536,3.851,568,2.699,597,2.118,599,2.866,651,2.478,683,4.227,684,5.113,713,3.713,717,3.5,763,2.118,781,3.383,821,3.913,826,3.844,827,3.5,829,3.844,833,3.844,835,3.844,836,3.844,845,2.72,847,2.999,865,3.037,909,3.037,911,3.844,914,2.72,922,4.146,924,3.538,1062,4.426,1158,3.844,1314,3.844,1325,2.376,1398,2.283,1594,3.243,1599,3.037,1779,3.5,1891,3.243,1976,2.592,2060,2.866,2213,2.478,2273,3.037,2511,3.844,2565,3.243,2717,5.247,3216,3.037,3233,2.72,3447,3.844,3574,3.844,3817,3.5,3857,2.866,3861,3.844,4137,3.844,4168,4.777,4293,3.5,4336,3.844,4452,3.5,4477,3.844,4480,3.5,4516,3.243,4522,3.844,4533,3.5,4545,3.844,4625,3.5,4626,4.367,4627,7.292,4628,4.367,4629,4.367,4630,7.292,4631,3.844,4632,4.367,4633,4.367,4634,6.787,4635,4.367,4636,4.367,4637,4.367,4638,4.367,4639,5.961,4640,4.367,4641,4.367,4642,4.367,4643,4.367,4644,3.844,4645,4.367,4646,5.961,4647,4.367,4648,4.367,4649,4.367,4650,4.367,4651,4.367,4652,4.367,4653,4.367,4654,4.367,4655,4.367,4656,4.367,4657,4.367,4658,4.367]],["title/additional-documentation/nestjs-application/testing.html",[535,1.589,851,2.332,1353,1.816]],["body/additional-documentation/nestjs-application/testing.html",[0,0.104,1,1.284,2,0.392,12,1.232,13,1.653,21,0.449,23,0.363,24,0.01,25,0.574,32,1.253,54,0.187,55,0.344,58,0.547,70,2.106,71,2.329,76,0.005,77,0.004,78,0.002,84,2.283,99,0.507,106,0.934,108,0.875,118,2.677,119,3.114,129,1.597,136,0.713,139,1.981,141,1.309,142,1.946,146,1.824,153,0.934,166,2.247,168,1.038,175,2.007,185,1.571,186,1.815,187,1.815,193,0.875,196,0.848,198,3.768,200,0.934,201,1.122,203,1.353,207,1.815,209,2.338,219,2.831,244,4.123,246,0.934,250,2.338,251,2.654,255,1.434,257,1.531,266,1.434,267,2.338,269,1.17,292,1.224,299,1.653,324,1.17,326,1.718,356,1,365,1.284,378,0.934,385,1,397,0.934,398,0.903,401,1.767,431,1,460,1.284,461,2.329,468,4.086,470,2.869,472,5.191,481,0.966,484,4.399,485,2.869,486,3.985,487,4.075,492,1.531,493,2.821,498,1.531,501,1.038,520,1,530,1.434,532,2.71,533,2.977,534,3.5,536,1.17,568,2.251,574,1.434,579,1.17,594,1.284,596,1.078,597,2.085,604,2.329,616,1.767,622,2.106,626,1.434,636,1.434,651,4.027,652,1.353,678,1.531,684,1.284,695,4.331,711,1.434,713,3.673,714,3.264,716,3.208,731,1.531,752,1.224,754,1.653,759,1.353,760,2.352,763,3.442,775,1.434,801,1.531,802,1.078,842,1.653,845,2.106,847,1.701,851,4.926,864,1.653,912,1.531,913,1.815,915,1.284,916,1.815,918,3.692,922,1.434,924,2.551,933,2.511,935,2.352,949,1.815,951,1.284,962,1.531,973,3.87,976,2.71,979,1.434,1000,1.434,1001,2.511,1005,2.511,1014,2.007,1022,1.224,1024,1.284,1036,1.353,1038,1.284,1075,1.815,1153,2.677,1160,3.817,1161,2.219,1166,3.264,1170,1.653,1172,2.106,1174,2.551,1209,1.815,1257,3.097,1260,3.264,1267,2.821,1304,1.653,1305,1.653,1325,1.122,1369,1.353,1381,1.122,1399,1.353,1463,2.352,1478,1.815,1491,1.434,1544,1.284,1556,1.434,1589,1.653,1590,4.915,1594,2.705,1597,1.531,1602,1.434,1606,2.989,1607,1.434,1613,1.919,1624,4.418,1689,1.531,1690,2.511,1707,3.817,1708,1.434,1709,1.353,1710,1.653,1771,1.353,1784,1.434,1795,1.434,1804,1.815,1830,1.284,1845,3.458,1876,1.531,1899,2.977,1910,1.653,1911,1.815,1930,1.815,1937,4.831,1947,1.353,1956,1.653,1976,1.224,1981,5.482,2008,1.815,2032,1.531,2050,1.815,2056,1.653,2060,2.219,2068,2.106,2069,1.653,2086,3.192,2090,3.985,2094,1.531,2100,1.653,2122,1.531,2125,1.531,2166,1.815,2178,1.815,2198,1.815,2213,4.249,2254,2.511,2263,2.989,2271,1.815,2273,4.101,2275,1.653,2281,1.653,2282,1.353,2284,1.653,2287,4.101,2297,1.815,2308,2.352,2321,1.815,2338,1.653,2369,2.352,2370,1.653,2380,1.434,2394,4.379,2421,3.445,2440,1.653,2445,2.71,2448,1.434,2450,1.815,2455,2.352,2492,1.815,2505,2.352,2522,3.445,2606,1.653,2647,3.784,2661,1.284,2669,1.531,2705,1.653,2732,2.352,2738,1.653,2746,3.817,2766,1.531,2773,5.191,2780,2.511,2858,1.531,2860,1.531,2891,1.653,2917,1.815,2953,1.353,2969,1.815,2994,1.653,3104,2.511,3145,1.815,3170,1.653,3203,3.817,3217,3.458,3219,2.352,3223,2.352,3257,2.106,3260,2.71,3262,1.531,3263,1.653,3268,1.653,3282,1.531,3294,1.653,3303,1.815,3315,2.511,3323,1.815,3344,1.653,3345,3.192,3348,1.653,3355,2.977,3375,1.434,3384,1.531,3394,1.815,3402,1.815,3403,1.353,3433,1.653,3436,2.511,3441,3.264,3442,1.815,3458,2.71,3466,1.653,3468,1.653,3487,1.815,3492,1.434,3496,1.815,3499,1.531,3528,1.434,3541,1.815,3557,1.653,3561,1.434,3566,1.815,3617,1.653,3623,1.815,3634,5.191,3675,1.653,3801,1.815,3874,1.815,3875,1.815,3893,4.377,3910,1.531,3942,3.192,3946,1.815,3949,1.434,3960,1.815,3967,2.352,3987,1.653,4011,1.353,4098,1.653,4112,1.815,4131,4.827,4134,1.815,4143,1.815,4167,1.815,4194,1.653,4209,1.815,4217,1.653,4220,2.977,4226,5.144,4232,1.653,4233,3.817,4236,1.815,4237,1.815,4254,1.653,4293,1.653,4297,3.692,4354,1.815,4403,1.531,4406,3.445,4444,2.977,4446,3.985,4447,1.815,4452,1.653,4465,1.815,4480,1.653,4516,4.075,4571,1.815,4575,1.815,4578,1.815,4585,1.815,4616,4.831,4620,1.815,4625,2.71,4631,1.815,4644,1.815,4659,3.381,4660,2.062,4661,2.062,4662,2.062,4663,2.062,4664,2.062,4665,2.062,4666,2.062,4667,2.062,4668,2.062,4669,2.062,4670,2.062,4671,2.062,4672,2.062,4673,2.062,4674,3.381,4675,2.062,4676,2.062,4677,2.062,4678,2.062,4679,2.062,4680,2.062,4681,2.062,4682,2.062,4683,2.062,4684,2.062,4685,2.062,4686,2.062,4687,2.062,4688,2.062,4689,2.062,4690,2.062,4691,2.062,4692,2.062,4693,2.062,4694,2.062,4695,2.062,4696,2.062,4697,2.062,4698,2.062,4699,2.062,4700,2.062,4701,2.062,4702,2.062,4703,2.062,4704,2.062,4705,3.381,4706,2.062,4707,3.381,4708,2.062,4709,2.062,4710,2.062,4711,3.381,4712,2.062,4713,2.062,4714,2.062,4715,4.298,4716,3.381,4717,3.381,4718,2.062,4719,2.062,4720,4.972,4721,2.062,4722,2.062,4723,2.062,4724,2.062,4725,2.062,4726,2.062,4727,2.062,4728,3.381,4729,2.062,4730,3.381,4731,2.062,4732,3.381,4733,2.062,4734,2.062,4735,2.062,4736,2.062,4737,2.062,4738,3.381,4739,3.381,4740,2.062,4741,3.381,4742,2.062,4743,2.062,4744,2.062,4745,2.062,4746,3.381,4747,2.062,4748,2.062,4749,2.062,4750,2.062,4751,2.062,4752,2.062,4753,3.381,4754,3.381,4755,2.062,4756,2.062,4757,2.062,4758,2.062,4759,2.062,4760,2.062,4761,2.062,4762,2.062,4763,2.062,4764,2.062,4765,2.062,4766,2.062,4767,2.062,4768,2.062,4769,3.381,4770,2.062,4771,2.062,4772,2.062,4773,2.062,4774,2.062,4775,2.062,4776,2.062,4777,2.062,4778,2.062,4779,2.062,4780,2.062,4781,2.062,4782,2.062,4783,2.062,4784,2.062,4785,2.062,4786,2.062,4787,2.062,4788,2.062,4789,2.062,4790,2.062,4791,2.062,4792,2.062,4793,2.062,4794,2.062,4795,2.062,4796,2.062,4797,2.062,4798,2.062,4799,2.062,4800,2.062,4801,2.062]],["title/additional-documentation/nestjs-application/decisions.html",[535,1.589,1353,1.816,4618,3.001]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.358,16,1.153,24,0.009,29,1.414,55,0.96,57,3.008,58,1.527,76,0.006,77,0.008,78,0.006,106,2.606,209,3.882,243,3.585,251,2.679,256,3.778,270,3.416,399,3.231,480,4.274,481,2.696,485,3.008,520,2.792,597,2.792,601,4.684,602,3.778,616,3.008,651,3.266,756,3.778,760,4.003,763,2.792,866,4.831,897,5.299,923,5.067,951,4.831,958,3.778,973,3.778,1260,4.684,1325,3.131,1416,4.003,1594,3.131,1613,4.049,1787,4.003,1947,3.778,2039,4.613,2063,4.003,2151,5.067,2208,5.76,2213,3.266,2237,4.613,2382,5.067,2443,4.003,2457,4.613,2500,3.778,2577,5.719,2661,3.585,2805,5.067,2858,4.274,3216,4.003,3403,3.778,3842,4.613,3924,4.613,4160,3.778,4219,5.719,4233,4.003,4245,5.067,4403,4.274,4437,5.067,4618,5.719,4802,5.756,4803,5.756,4804,5.756,4805,5.756,4806,5.756,4807,5.756,4808,5.756,4809,5.756,4810,5.756,4811,7.136,4812,5.756,4813,5.756,4814,5.756,4815,5.756,4816,5.756,4817,5.756,4818,5.756,4819,5.756,4820,5.756,4821,5.756,4822,5.756,4823,5.756,4824,5.756,4825,5.756]],["title/additional-documentation/nestjs-application/vscode.html",[535,1.589,1353,1.816,4152,3.001]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.201,24,0.009,70,3.915,71,3.195,76,0.007,77,0.008,78,0.007,111,3.936,244,3.653,297,3.915,468,3.05,520,3.653,608,3.299,642,4.469,1187,4.372,1594,3.42,1603,4.126,1613,3.567,1709,4.126,1739,4.668,1829,4.126,1876,4.668,2204,4.668,2213,3.567,2282,4.126,2491,6.035,2827,5.038,3233,3.915,3234,6.629,3360,5.038,3452,4.372,3563,5.534,3913,7.097,3940,5.534,3967,5.238,4011,4.126,4045,5.038,4150,5.534,4152,6.035,4153,5.534,4826,6.286,4827,6.286,4828,6.286,4829,6.286,4830,6.286,4831,6.286,4832,6.286,4833,6.286,4834,6.286,4835,6.286]],["title/additional-documentation/nestjs-application/git.html",[535,1.589,1353,1.816,3267,3.001]],["body/additional-documentation/nestjs-application/git.html",[24,0.009,76,0.008,77,0.009,78,0.008,305,3.888,398,3.001,845,4.267,847,3.447,1398,3.581,1472,4.497,2892,4.765,2988,5.882,3267,6.697,4313,6.031,4836,6.851,4837,6.851,4838,6.851,4839,6.851,4840,6.851]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":969,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3132,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3171,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3182,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":3084,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3160,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3193,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3185,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3153,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3144,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3078,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":3147,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3143,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3136,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2996,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3037,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3032,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3044,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3036,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3027,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3007,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3016,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2995,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3029,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3014,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3025,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3045,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3038,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4776,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4778,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1859,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1257,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3161,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3174,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3119,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3106,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3156,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":4728,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3116,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3201,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3172,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":4730,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":3085,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":3122,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":3064,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2998,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3006,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3004,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3028,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3033,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3026,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3046,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3035,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1351,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":2997,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1840,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["12",{"_index":2243,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.0",{"_index":3163,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1988,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1849,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["1499",{"_index":1890,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1834,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1508",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1823,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3117,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2071,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1972,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3515,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4819,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4818,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":2090,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.0.3",{"_index":3155,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":3120,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3134,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3157,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3181,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":3083,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":3081,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":3034,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1965,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3278,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2540,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2010,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1861,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":1828,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2535,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3963,"title":{},"body":{"todo.html":{}}}],["3",{"_index":2086,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3167,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3176,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4769,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3164,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3199,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3177,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":3024,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2004,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":4027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":3003,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2732,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":3091,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3189,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3112,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3129,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3066,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":3095,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":3059,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":3065,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3113,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":3072,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3221,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":3020,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3022,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3975,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4656,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":717,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":3937,"title":{},"body":{"overview.html":{}}}],["4105",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1910,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":3080,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3198,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3115,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3159,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":3137,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":3031,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":3030,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3005,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4647,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":3021,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4777,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1911,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3076,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3074,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1969,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3178,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3165,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3023,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3594,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3612,"title":{},"body":{"license.html":{}}}],["7",{"_index":1620,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":3070,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3069,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3111,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":3068,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":3067,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1875,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3196,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":3124,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":3019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8020",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1873,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1856,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":1850,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1357,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3241,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":444,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1239,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1711,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":1675,"title":{},"body":{"injectables/TaskUC.html":{}}}],["a.m",{"_index":3271,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":4699,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":3653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3269,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3539,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3903,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":265,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":426,"title":{},"body":{"classes/CourseTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":3733,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3732,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3954,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":2895,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":470,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":352,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2441,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2456,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1243,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3579,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3907,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3350,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3538,"title":{},"body":{"license.html":{}}}],["according",{"_index":3898,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":801,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":63,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["achieve",{"_index":3911,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3478,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3782,"title":{},"body":{"license.html":{}}}],["act",{"_index":4698,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2827,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3396,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3823,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3804,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3633,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3374,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1398,"title":{},"body":{"classes/RoleCache.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["add(selector",{"_index":1404,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["addbearerauth",{"_index":4080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":917,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1877,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":535,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1240,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1246,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3856,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3369,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2466,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2220,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2323,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3513,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3659,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3894,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3660,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3276,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3763,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3475,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4737,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4739,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach",{"_index":4693,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":4691,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2725,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3528,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3566,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3931,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3840,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3881,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3791,"title":{},"body":{"license.html":{}}}],["aims",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":3075,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":872,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3770,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1876,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1544,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1739,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":4689,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":3541,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":1187,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3333,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3590,"title":{},"body":{"license.html":{}}}],["always",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1961,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":3077,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3192,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3734,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3326,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3501,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3551,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3383,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":3000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":4031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":453,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1207,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1228,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1226,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1084,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1224,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1221,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1032,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":1046,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1546,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":79,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":783,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":114,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":714,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":309,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":308,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":306,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":307,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3991,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3388,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":71,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":631,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3216,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3862,"title":{},"body":{"license.html":{}}}],["apply",{"_index":843,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":4032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3408,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3533,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3902,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":4055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":4005,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":4017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3994,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course",{"_index":4019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":4022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":4026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":4023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3205,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":4021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":4025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":4004,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3998,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":4000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":4024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../sorting.ts",{"_index":4002,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../status.type.ts",{"_index":3999,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../string",{"_index":3206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":4018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":4020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":4006,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":4061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":4071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":644,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/constants.ts",{"_index":2999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":294,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":115,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":525,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":527,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1775,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":516,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":816,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":587,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":3010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":841,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":819,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":830,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":828,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":834,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":825,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":832,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":931,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":905,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":749,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1780,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":3015,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":857,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":3017,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":799,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":177,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":208,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":934,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":606,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":593,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":429,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1071,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1206,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1214,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1230,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1208,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1213,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1223,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1225,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1229,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1227,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1219,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1212,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1233,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1210,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1231,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1216,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1455,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1736,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1770,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":998,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":1006,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":1029,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":1010,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":315,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":325,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":338,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1704,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":994,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":985,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":987,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":988,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":990,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":991,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":992,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":993,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":989,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":986,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":995,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":984,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":996,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1459,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":785,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1447,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1703,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1757,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1092,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1100,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1098,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1104,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1102,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1448,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1763,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1154,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1237,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1167,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:10",{"_index":1173,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1189,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:24",{"_index":1179,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1183,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1176,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1181,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1275,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1301,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1286,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1282,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1293,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1299,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1295,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1284,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1288,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1290,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1640,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1647,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1644,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1646,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1648,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1645,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1651,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":1650,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1649,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1531,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1533,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":410,"title":{},"body":{"classes/CourseTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":638,"title":{},"body":{"classes/FileTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":900,"title":{},"body":{"classes/LessonTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/status.type.ts",{"_index":4013,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1486,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:15",{"_index":1503,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:18",{"_index":1499,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:22",{"_index":1494,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:25",{"_index":1501,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":1495,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":1496,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:35",{"_index":1497,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:8",{"_index":1493,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1519,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:14",{"_index":1527,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:17",{"_index":1524,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:20",{"_index":1528,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:23",{"_index":1523,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:26",{"_index":1526,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:7",{"_index":1522,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":1774,"title":{},"body":{"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1554,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:7",{"_index":1558,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":1509,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":1514,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:17",{"_index":1516,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:7",{"_index":1512,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1577,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:13",{"_index":1587,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:32",{"_index":1585,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:78",{"_index":1583,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:9",{"_index":1581,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":3039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1573,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1655,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:13",{"_index":1661,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:17",{"_index":1668,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:48",{"_index":1667,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:57",{"_index":1665,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:68",{"_index":1663,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:13",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:20",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:23",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:6",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":1390,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:12",{"_index":1392,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:15",{"_index":1393,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:19",{"_index":1394,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:5",{"_index":1391,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1745,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:13",{"_index":1750,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:16",{"_index":1751,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:19",{"_index":1752,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:25",{"_index":1753,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:6",{"_index":1749,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":1396,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:13",{"_index":1403,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:15",{"_index":1401,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:22",{"_index":1409,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:26",{"_index":1411,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:30",{"_index":1405,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:34",{"_index":1407,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:42",{"_index":1446,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:44",{"_index":1442,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:51",{"_index":1444,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:63",{"_index":1443,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:75",{"_index":1445,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:8",{"_index":1438,"title":{},"body":{"interfaces/RoleMap.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1461,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1462,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1467,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":4070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":80,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":264,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":275,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":277,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":276,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":274,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":278,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":3047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":489,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":463,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1705,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1717,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1715,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1714,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1719,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1721,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1350,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1358,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1361,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1368,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1372,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1375,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1374,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1373,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1371,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1380,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":3048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":3050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":260,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":262,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":261,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":263,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":838,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/interface/sorting.ts",{"_index":3052,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":4008,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":4012,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":4014,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":3054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4160,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3926,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":4695,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":3079,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4713,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3885,"title":{},"body":{"license.html":{}}}],["around",{"_index":3938,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3801,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":3812,"title":{},"body":{"license.html":{}}}],["array",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":566,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3510,"title":{},"body":{"license.html":{}}}],["asc",{"_index":4095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asking",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3323,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":3752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3459,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3877,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3906,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3699,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3913,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3710,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3683,"title":{},"body":{"license.html":{}}}],["aud",{"_index":808,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":807,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":181,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":558,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":861,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":875,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":874,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":1040,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":1047,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authenticated",{"_index":805,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2455,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1041,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentication/interface/jwt",{"_index":1042,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["authguard",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":856,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":140,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3682,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1689,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":179,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1157,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1302,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":169,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":175,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3675,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3777,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3816,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3688,"title":{},"body":{"license.html":{}}}],["auto",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4659,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":1897,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2731,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4664,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":3257,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":2166,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":4743,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3300,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2971,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2378,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1674,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.createdat",{"_index":1676,"title":{},"body":{"injectables/TaskUC.html":{}}}],["backend",{"_index":1846,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1165,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4595,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1386,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1389,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":266,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":3195,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":598,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":51,"title":{"classes/BaseEntity.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":52,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basic",{"_index":3468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":2129,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":3086,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":4082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":4083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":3335,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3346,"title":{},"body":{"license.html":{}}}],["before",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4727,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4715,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3242,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3488,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4764,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":299,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1710,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2440,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":3810,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3496,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3329,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":4011,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3910,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":960,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1845,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3568,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1601,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["blackbox",{"_index":4668,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":4676,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1030,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3187,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":797,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":3051,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4714,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2503,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4706,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2021,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1896,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brb",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3934,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3932,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":258,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1623,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1869,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3944,"title":{},"body":{"todo.html":{}}}],["business",{"_index":267,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":82,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":96,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":95,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4646,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1241,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1248,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1242,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1250,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3280,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1397,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["caches",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":1416,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3259,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":493,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":981,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["called",{"_index":2746,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2254,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4772,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2282,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4620,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4651,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3545,"title":{},"body":{"license.html":{}}}],["case",{"_index":534,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3345,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1726,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1729,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":2054,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":919,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3714,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":786,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3672,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3725,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1795,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":910,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1785,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1787,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2043,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":1837,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3650,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3312,"title":{},"body":{"license.html":{}}}],["chat",{"_index":2013,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":250,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":754,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3252,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3265,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":2669,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4611,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2738,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":3866,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3166,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1892,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3494,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3502,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3905,"title":{},"body":{"license.html":{}}}],["cl1",{"_index":1418,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["cl2",{"_index":1419,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["claim",{"_index":3767,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3779,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":589,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":846,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2505,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":1399,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3601,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4625,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":2154,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":270,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":956,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3266,"title":{},"body":{"index.html":{}}}],["close",{"_index":976,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":4741,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":3901,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2271,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":3210,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":1819,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":2967,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2375,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3141,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3127,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":170,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":172,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":173,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":171,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":288,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":289,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":590,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":592,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":591,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":928,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":930,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":929,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1149,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1152,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1151,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1150,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1464,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1465,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1570,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1571,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":84,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2647,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":766,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3842,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":4054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["collections",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":412,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["columnnames",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":427,"title":{},"body":{"classes/CourseTaskInfo.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1542,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3340,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3552,"title":{},"body":{"license.html":{}}}],["command",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3418,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1487,"title":{},"body":{"classes/Submission.html":{}}}],["commentschema",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3636,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2408,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3792,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3264,"title":{},"body":{"index.html":{}}}],["common",{"_index":3114,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3464,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3296,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4814,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3560,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3567,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3826,"title":{},"body":{"license.html":{}}}],["compile",{"_index":487,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3446,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3251,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":922,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":3748,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3485,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":2032,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":1695,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":3391,"title":{},"body":{"license.html":{}}}],["computesubmissionmetadata",{"_index":1656,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":1812,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3857,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":4680,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":3820,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1690,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1472,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":4040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1945,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('request_timeout",{"_index":4094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":296,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2724,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":978,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1881,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2555,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3736,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3884,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1684,"title":{},"body":{"injectables/TaskUC.html":{}}}],["considered",{"_index":3701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4617,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2240,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3532,"title":{},"body":{"license.html":{}}}],["const",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3477,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":628,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1370,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1171,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1777,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(name",{"_index":1400,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["constructor(newsrepo",{"_index":1281,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(private",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":317,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":104,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":633,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1660,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":526,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":272,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(validationerrors",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3830,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3618,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1915,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3827,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3247,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3703,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":328,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3789,"title":{},"body":{"license.html":{}}}],["context",{"_index":501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4774,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2236,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3644,"title":{},"body":{"license.html":{}}}],["contract",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3698,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3836,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3303,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3776,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3778,"title":{},"body":{"license.html":{}}}],["control",{"_index":2863,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3781,"title":{},"body":{"license.html":{}}}],["controller",{"_index":461,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":1048,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1547,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller.ts",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1105,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1156,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1574,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3411,"title":{},"body":{"license.html":{}}}],["convention",{"_index":4672,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3397,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3814,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3651,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3405,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3697,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3295,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3289,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2291,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3357,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3291,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3279,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3366,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3491,"title":{},"body":{"license.html":{}}}],["core",{"_index":295,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4840,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1473,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4652,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1158,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4629,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":287,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2273,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3879,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2773,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3449,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3588,"title":{},"body":{"license.html":{}}}],["count",{"_index":1056,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{}}}],["counted",{"_index":1190,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1199,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3768,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":4015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3395,"title":{},"body":{"license.html":{}}}],["country",{"_index":3806,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4010,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course_default_color",{"_index":417,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/TaskMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroups",{"_index":1600,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["courseid",{"_index":902,"title":{},"body":{"classes/LessonTaskInfo.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":314,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":4090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1642,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":324,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":321,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":3040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofuser",{"_index":1591,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["coursetaskinfo",{"_index":409,"title":{"classes/CourseTaskInfo.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["court",{"_index":3835,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3900,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3796,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3260,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2214,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":4056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":4057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":4059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3380,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4762,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":716,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1049,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1004,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1283,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":915,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["createerrorresponse",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":3008,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":3009,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":719,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":723,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":336,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":952,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":975,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4770,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":428,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":4037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":482,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":432,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":761,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":329,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":343,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3423,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":297,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2521,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":741,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":743,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3728,"title":{},"body":{"license.html":{}}}],["current",{"_index":1215,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":962,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1007,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1052,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1051,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":536,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4648,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3581,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3849,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3585,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":300,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":926,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":4168,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3558,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3882,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2446,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":763,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":651,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1480,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":937,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:47",{"_index":941,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:57",{"_index":945,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":936,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4815,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1596,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":512,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1808,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":977,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":645,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":646,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":647,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbs",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1595,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":820,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":824,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":835,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3234,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3514,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3864,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4618,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["declare",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3689,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":773,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3207,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3504,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":109,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1354,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1713,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3876,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3330,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3832,"title":{},"body":{"license.html":{}}}],["define",{"_index":246,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":257,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":120,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3360,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":475,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":479,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":462,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1000,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1009,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1285,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1175,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":1008,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2297,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1069,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":2115,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4663,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3656,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3793,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":142,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":620,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3802,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":4685,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":4686,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":4792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":117,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":4174,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3596,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3294,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3855,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1776,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1778,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3224,"title":{},"body":{"index.html":{}}}],["details",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":4065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":4064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2311,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3627,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4826,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3212,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":4673,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3319,"title":{},"body":{"license.html":{}}}],["development",{"_index":2369,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3273,"title":{},"body":{"index.html":{}}}],["di",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1468,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3138,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3982,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3854,"title":{},"body":{"license.html":{}}}],["different",{"_index":2661,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3680,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3489,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3602,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3384,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1626,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":3950,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3525,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3867,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3677,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3818,"title":{},"body":{"license.html":{}}}],["display",{"_index":3559,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":330,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1643,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":440,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3407,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2670,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":4696,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":3858,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3287,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3917,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3821,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3358,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3971,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":433,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2181,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":4075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":1789,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":965,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1541,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3949,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":3105,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":255,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1606,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3629,"title":{},"body":{"license.html":{}}}],["down",{"_index":4666,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":3744,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4547,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":431,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1113,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1563,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1132,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1127,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1115,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1565,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1561,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1766,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1109,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1768,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1453,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1136,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1125,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1117,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1119,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":1569,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1139,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1121,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1123,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1111,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1141,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1134,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1130,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1059,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":753,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":4085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1520,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":2198,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":254,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3580,"title":{},"body":{"license.html":{}}}],["duration",{"_index":491,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":488,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2315,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3626,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3460,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":943,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":730,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":732,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":733,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1160,"title":{},"body":{"modules/NewsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2287,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3379,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":621,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":349,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3897,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3522,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3505,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3915,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":4665,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":3761,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3921,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1185,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1174,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4810,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1746,"title":{},"body":{"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4822,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3576,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3928,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1267,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1254,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":759,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":755,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":769,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":3049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3399,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3338,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2394,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4831,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4839,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":1804,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2338,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3794,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3527,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3828,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3550,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3844,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":209,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":55,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1172,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1482,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":252,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1021,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":459,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{}}}],["enumeration",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":449,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1843,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3957,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2370,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3480,"title":{},"body":{"license.html":{}}}],["err",{"_index":1730,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":108,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":826,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":523,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":588,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":127,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":116,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":736,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":726,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":310,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":290,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":725,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":100,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":121,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":3107,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":727,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3442,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2923,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4653,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4654,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2776,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2541,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1874,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3286,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2275,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3378,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3458,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2276,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":518,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":721,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":782,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3616,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2102,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2477,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3786,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3483,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3837,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3435,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1161,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1166,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3390,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1707,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":498,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3762,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3523,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1614,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":863,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4612,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2409,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":810,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expect(data.length).tobe(0",{"_index":4796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4759,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3634,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4758,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2501,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":809,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":873,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":623,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3474,"title":{},"body":{"license.html":{}}}],["export",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2508,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3947,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":618,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3869,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":729,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3709,"title":{},"body":{"license.html":{}}}],["extend",{"_index":756,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3817,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":4036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3563,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3410,"title":{},"body":{"license.html":{}}}],["external",{"_index":2094,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":859,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":331,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":1631,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":779,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":881,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3695,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":443,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2355,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":4682,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":3850,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3484,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4658,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":2056,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4832,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":2100,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":3892,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3479,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":579,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3621,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3246,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3376,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":3180,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3631,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":180,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":560,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":178,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":176,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":585,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":3058,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":3060,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":3061,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":619,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":3062,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":3063,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":174,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":605,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":610,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":547,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":625,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1891,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3245,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3543,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1779,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":3946,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":1500,"title":{},"body":{"classes/Submission.html":{}}}],["filename",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":642,"title":{},"body":{"classes/FileTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":637,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["filter",{"_index":519,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1072,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1078,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1076,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1083,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1274,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":522,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1244,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1081,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4619,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3720,"title":{},"body":{"license.html":{}}}],["find",{"_index":608,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":609,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1001,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1012,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1177,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallassignedbyteacher",{"_index":1578,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallassignedbyteacher(userid",{"_index":1582,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforuser",{"_index":1276,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1287,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopen",{"_index":1657,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopen(currentuser",{"_index":1662,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenbystudent",{"_index":1579,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1584,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbyteacher",{"_index":1658,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenbyteacher(userid",{"_index":1664,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser",{"_index":1659,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1666,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4755,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbyid",{"_index":1439,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyid(id",{"_index":1429,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["findbyname",{"_index":1440,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":1424,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["finding",{"_index":794,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1168,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1180,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":791,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":1002,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1169,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1182,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1277,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1289,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1481,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4637,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1771,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1747,"title":{},"body":{"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3872,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1944,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1797,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2268,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4723,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1080,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3465,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4592,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4761,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3232,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2853,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1603,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3521,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":4033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":776,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2352,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4821,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4797,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2882,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":530,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2563,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3571,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":938,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":939,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1485,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3283,"title":{},"body":{"license.html":{}}}],["framework",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3281,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3301,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3118,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1847,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3508,"title":{},"body":{"license.html":{}}}],["full",{"_index":1947,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":298,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3645,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3203,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3598,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":351,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2380,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3456,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2284,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4084,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1532,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":614,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(selector",{"_index":1408,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["getcourseofuser",{"_index":1580,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getcourseofuser(userid",{"_index":1586,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getentitypermissions",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":465,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getnewspermissions",{"_index":1278,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1291,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":207,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1252,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1279,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1294,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":88,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":632,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":629,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getsubmissionsbytask",{"_index":1510,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytask(task",{"_index":1513,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist",{"_index":1511,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist(tasks",{"_index":1515,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["gettargetfilters",{"_index":1280,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1297,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1718,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":1783,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":557,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3267,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":3126,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":3150,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":3140,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3218,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3540,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1708,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":594,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3546,"title":{},"body":{"license.html":{}}}],["global",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":643,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":521,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":745,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":842,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":648,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":748,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3275,"title":{},"body":{"license.html":{}}}],["go",{"_index":3231,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3262,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3351,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4812,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3669,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3352,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1488,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1489,"title":{},"body":{"classes/Submission.html":{}}}],["graded",{"_index":1654,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskUC.html":{}}}],["gradedusers",{"_index":1671,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradedusers.add(submission.student.id",{"_index":1682,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradedusers.size",{"_index":1688,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradefileids",{"_index":1490,"title":{},"body":{"classes/Submission.html":{}}}],["grant",{"_index":3690,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3469,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3739,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3935,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3597,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3909,"title":{},"body":{"license.html":{}}}],["group",{"_index":1625,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1605,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1271,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1629,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1063,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":4039,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guide",{"_index":4798,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1738,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1599,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":268,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2560,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":301,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4748,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["has(selector",{"_index":1410,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["hash",{"_index":68,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["haspermissions",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3482,"title":{},"body":{"license.html":{}}}],["header",{"_index":870,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3337,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":4711,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":2402,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":248,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3783,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":901,"title":{},"body":{"classes/LessonTaskInfo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4593,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2178,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3139,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3142,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3716,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3676,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1598,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1935,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1502,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1529,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1615,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2280,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2448,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":3918,"title":{},"body":{"license.html":{}}}],["host",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":742,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3604,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3972,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3622,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2374,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":340,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":118,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3285,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3215,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3920,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":271,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4645,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":4800,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/mikro",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":1817,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4590,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":3952,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":281,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4649,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":811,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4835,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":784,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":798,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1382,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1384,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3808,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4655,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":529,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identify",{"_index":4679,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":4811,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":273,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4604,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4614,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4606,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2632,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":818,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":603,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":909,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3441,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":865,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":509,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4809,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3831,"title":{},"body":{"license.html":{}}}],["import",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":626,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3774,"title":{},"body":{"license.html":{}}}],["imports",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3700,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3834,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1266,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3331,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4660,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3886,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3889,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3284,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3883,"title":{},"body":{"license.html":{}}}],["include",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3437,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3394,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2445,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3570,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":762,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3336,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3851,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3625,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1984,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3696,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4622,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3561,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3943,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexable",{"_index":1437,"title":{},"body":{"interfaces/RoleMap.html":{}}}],["indexed",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1852,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3742,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3707,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2069,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3372,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3637,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":4086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":376,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":795,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4598,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":316,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["info.entity.ts:10",{"_index":1758,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:11",{"_index":903,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:13",{"_index":641,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:15",{"_index":419,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":640,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:18",{"_index":418,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:22",{"_index":421,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:26",{"_index":425,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:29",{"_index":423,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:6",{"_index":639,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":319,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:8",{"_index":416,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/LessonTaskInfo.html":{}}}],["info.mapper",{"_index":1107,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1449,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1451,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1234,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1456,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1458,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1773,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1457,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3609,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":537,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3740,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3771,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3387,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["inital",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4631,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":916,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3765,"title":{},"body":{"license.html":{}}}],["inject",{"_index":617,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":972,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":974,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":182,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"overview.html":{}}}],["injected",{"_index":599,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":912,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["inner",{"_index":4669,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":845,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":4799,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":3451,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3641,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3654,"title":{},"body":{"license.html":{}}}],["instance",{"_index":760,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2969,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":2068,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3225,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3535,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1937,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3304,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3526,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3923,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3846,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3402,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3406,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":496,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":497,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":483,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":313,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":291,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3582,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3758,"title":{},"body":{"license.html":{}}}],["interface",{"_index":383,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/RoleMap.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":586,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/RoleMap.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3646,"title":{},"body":{"license.html":{}}}],["internal",{"_index":358,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4596,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3896,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3448,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3463,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":600,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2848,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2811,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3939,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3556,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":837,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1469,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3471,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1085,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":715,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":455,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":436,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1086,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1091,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1362,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1359,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1352,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1087,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":73,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":4688,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1088,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1079,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1742,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1073,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1741,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1077,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1327,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":813,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":456,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":434,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":447,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":442,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":812,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2237,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":718,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":927,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionstatus",{"_index":1557,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["it's",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["it(\"should",{"_index":4687,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":4754,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3421,"title":{},"body":{"license.html":{}}}],["items",{"_index":1922,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3657,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":793,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3967,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":3056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4756,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":4073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3239,"title":{},"body":{"index.html":{}}}],["job",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2747,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":2151,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":3121,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3104,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2351,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":734,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":3123,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":814,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4768,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":852,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":160,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":858,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":806,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":150,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1790,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3443,"title":{},"body":{"license.html":{}}}],["key",{"_index":1334,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":4016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":75,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3398,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3292,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3318,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3798,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3805,"title":{},"body":{"license.html":{}}}],["known",{"_index":2125,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3249,"title":{},"body":{"index.html":{}}}],["language",{"_index":2667,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3564,"title":{},"body":{"license.html":{}}}],["last",{"_index":1772,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1748,"title":{},"body":{"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":3861,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3389,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3363,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3769,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3942,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1853,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":3125,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3128,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2615,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3925,"title":{},"body":{"license.html":{}}}],["lean",{"_index":3145,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["leave",{"_index":3988,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1706,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":595,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3979,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":4093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3325,"title":{},"body":{"license.html":{}}}],["legend",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lern",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2912,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1521,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonid",{"_index":1525,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":4091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":904,"title":{},"body":{"classes/LessonTaskInfo.html":{},"changelog.html":{}}}],["lessonschema",{"_index":3041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1611,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["lessontaskinfo",{"_index":899,"title":{"classes/LessonTaskInfo.html":{}},"body":{"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["letter",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3342,"title":{},"body":{"license.html":{}}}],["level",{"_index":2766,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":4684,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3679,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3386,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3434,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3617,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3274,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3367,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3368,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3370,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3298,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3743,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3687,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3737,"title":{},"body":{"license.html":{}}}],["limit",{"_index":839,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3880,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3870,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3678,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":4060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2034,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3461,"title":{},"body":{"license.html":{}}}],["links",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3968,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":206,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":318,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3766,"title":{},"body":{"license.html":{}}}],["living",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3955,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4704,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1938,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3213,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2404,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":821,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":829,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3969,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":495,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":738,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":735,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":722,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":907,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":932,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":311,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":292,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4639,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":490,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1624,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1604,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2656,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3941,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3250,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":862,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3887,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3890,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1272,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4820,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3573,"title":{},"body":{"license.html":{}}}],["made",{"_index":3332,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2623,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":3961,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2579,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2497,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2757,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3439,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":980,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3499,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1740,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4749,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":2039,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3945,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3784,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2312,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytoone",{"_index":337,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone({fieldname",{"_index":342,"title":{},"body":{"classes/CourseNews.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":2063,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1093,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1097,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1094,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1099,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1045,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1538,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["mappers",{"_index":4767,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":4233,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1095,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1101,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1450,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1555,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1764,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1096,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1103,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3829,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3685,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3694,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3365,"title":{},"body":{"license.html":{}}}],["master",{"_index":2234,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":538,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4745,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3486,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3658,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1884,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1363,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1367,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1356,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1653,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskUC.html":{}}}],["maybe",{"_index":959,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3974,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3702,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3270,"title":{},"body":{"index.html":{}}}],["means",{"_index":3362,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3507,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3518,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3531,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3544,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3422,"title":{},"body":{"license.html":{}}}],["member",{"_index":563,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":935,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3419,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3871,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3401,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1636,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":2017,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3754,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":85,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3473,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4804,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3170,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":622,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":87,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2331,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2610,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3130,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2876,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1162,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1164,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":58,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":946,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3966,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":967,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":970,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":971,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":947,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":1478,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":953,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":968,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":940,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1722,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1364,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1365,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1366,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1355,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4825,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3202,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3684,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1851,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1265,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3131,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2411,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocha's",{"_index":4692,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":4720,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4707,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4709,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2758,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":450,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1339,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3359,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3425,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2898,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3549,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3327,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3392,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":139,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4752,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4751,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":4058,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4703,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":4041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":4068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":949,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4719,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4718,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":141,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1470,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1475,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1477,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1474,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":3133,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":958,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":955,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":957,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":951,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":933,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":4733,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":950,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":1479,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3152,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1976,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3726,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4662,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4765,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1588,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":476,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2713,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":780,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":3268,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1024,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":3987,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3154,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3173,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3562,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1628,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2604,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3222,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3450,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1597,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":713,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":3978,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":4046,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":4048,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":4047,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2805,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":471,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":520,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":474,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3071,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":454,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":473,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4708,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":906,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3297,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newly",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":326,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1114,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1133,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1311,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1116,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1110,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":430,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1744,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":452,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":435,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":441,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1743,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":451,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":446,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1137,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1118,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1120,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1331,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1122,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1124,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1112,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1135,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1129,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:10",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":371,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":372,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":339,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":345,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":353,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":360,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":361,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":357,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":344,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":368,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":354,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1336,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1163,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1310,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1305,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1222,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1236,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1304,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":997,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1318,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":1013,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":1011,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1055,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1324,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1060,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1321,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1044,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1053,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1058,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1054,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1068,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1148,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1153,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1043,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1192,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstarget",{"_index":787,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1178,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":403,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":1038,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1329,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1316,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1727,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":513,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1627,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2985,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3211,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3149,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3151,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2368,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3592,"title":{},"body":{"license.html":{}}}],["none",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1344,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":2123,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3620,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":4092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":3012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":559,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":1483,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3738,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3413,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3409,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3727,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3723,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3673,"title":{},"body":{"license.html":{}}}],["november",{"_index":3277,"title":{},"body":{"license.html":{}}}],["now",{"_index":511,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":515,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":1829,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":584,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["number",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3860,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":4009,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2457,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3220,"title":{},"body":{"index.html":{}}}],["o",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2428,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2184,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1203,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1381,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":66,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":1335,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.prototype.hasownproperty.call(this.cache",{"_index":1415,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["object.values(constraint",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":458,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["objectid.isvalid(value",{"_index":1388,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":3841,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3606,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3509,"title":{},"body":{"license.html":{}}}],["observable",{"_index":502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3591,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3735,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2246,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1632,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["of.ts",{"_index":4007,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3324,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3611,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3595,"title":{},"body":{"license.html":{}}}],["official",{"_index":3427,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1633,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4589,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":4671,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2088,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":2885,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["once",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1325,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1755,"title":{},"body":{"classes/User.html":{}}}],["oneweekago",{"_index":1618,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1619,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":944,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":259,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2492,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":2443,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3893,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3599,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4661,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3444,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2954,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2262,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3347,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3848,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4806,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1889,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4813,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":966,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4650,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4641,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":942,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1607,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1634,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3750,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3373,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":2150,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2901,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":973,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4724,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":948,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3230,"title":{},"body":{"index.html":{}}}],["others",{"_index":775,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":964,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":4681,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2565,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3492,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2577,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4763,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overlaps",{"_index":1637,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["overridden",{"_index":4643,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2522,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4771,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4779,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":517,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4712,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3936,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":2050,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3780,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1218,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2558,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3555,"title":{},"body":{"license.html":{}}}],["packages",{"_index":3953,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3438,"title":{},"body":{"license.html":{}}}],["page",{"_index":1353,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1360,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":578,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1014,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1015,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1036,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1061,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1553,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":3158,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3922,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3713,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3790,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":2008,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1065,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1062,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":612,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1144,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1145,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1308,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1147,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1146,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1143,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2292,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2485,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1033,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3375,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1737,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3431,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3400,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3466,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":3600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3756,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":771,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1543,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":885,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":67,"title":{},"body":{"classes/Account.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":346,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1031,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1028,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3712,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3775,"title":{},"body":{"license.html":{}}}],["path",{"_index":636,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":4069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2442,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":460,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["payload.ts",{"_index":800,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payment",{"_index":3822,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3607,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3610,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3263,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":1985,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3457,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3722,"title":{},"body":{"license.html":{}}}],["permission",{"_index":350,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1349,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1348,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.includes('task_dashboard_teacher_view_v3",{"_index":1699,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions.includes('task_dashboard_view_v3",{"_index":1700,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions.refid",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3537,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3569,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3341,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1691,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3649,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2344,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2828,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1919,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4640,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":4674,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":1880,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3839,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3577,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3589,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3316,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1905,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":751,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1781,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1385,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":1836,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3109,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3760,"title":{},"body":{"license.html":{}}}],["point",{"_index":437,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3916,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2822,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2307,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1025,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":3001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3614,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3586,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3553,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3895,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2263,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1005,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3959,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3520,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3237,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3299,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3795,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":4801,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":3965,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3290,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3356,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4616,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3757,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4644,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":4690,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3424,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":999,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["preload",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4824,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4823,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":920,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2403,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3417,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3681,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":253,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2438,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3759,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3311,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3824,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["principle",{"_index":4722,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4591,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3724,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4808,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":494,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2891,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":2204,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3228,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3642,"title":{},"body":{"license.html":{}}}],["process",{"_index":2606,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3813,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3447,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4636,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3578,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2195,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3825,"title":{},"body":{"license.html":{}}}],["program",{"_index":3306,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3530,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3929,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3432,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3317,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3908,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3490,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3516,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3819,"title":{},"body":{"license.html":{}}}],["project",{"_index":1788,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3162,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2330,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3420,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3412,"title":{},"body":{"license.html":{}}}],["promise",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise((resolve",{"_index":477,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1320,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["promises",{"_index":4742,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3108,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3382,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3741,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3393,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4805,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":3209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":320,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1760,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1762,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":323,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3320,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1712,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3500,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3542,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3662,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3875,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":485,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":924,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":918,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":302,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3674,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3718,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3863,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3865,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":469,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3686,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3349,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3534,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1082,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1197,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["publishedlessons",{"_index":1638,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pull",{"_index":2406,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3454,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3623,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3811,"title":{},"body":{"license.html":{}}}],["put",{"_index":2953,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2385,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3731,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3874,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1260,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1264,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1140,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1138,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1142,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1412,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1635,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.desc",{"_index":1639,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["querys",{"_index":1545,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3110,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1022,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":3574,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3800,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3665,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":83,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4721,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reason",{"_index":3809,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3587,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3729,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3314,"title":{},"body":{"license.html":{}}}],["received",{"_index":3557,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3745,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3815,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3648,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3807,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3371,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3428,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4837,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4830,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4828,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":624,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":3168,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3912,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1960,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2317,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1930,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":363,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":2858,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3310,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3361,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3169,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3843,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3670,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3554,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3467,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2478,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4597,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4750,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3717,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":445,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4817,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2208,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3493,"title":{},"body":{"license.html":{}}}],["release",{"_index":1899,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3353,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3343,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3547,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3354,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3973,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3799,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3605,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3308,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3845,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3847,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3671,"title":{},"body":{"license.html":{}}}],["remove",{"_index":774,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3888,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2186,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":2087,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2122,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4628,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":3962,"title":{},"body":{"todo.html":{}}}],["repo",{"_index":1590,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4726,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1303,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1155,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/submission.repo",{"_index":1576,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["repo/task.repo",{"_index":1575,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2709,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4657,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3217,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3639,"title":{},"body":{"license.html":{}}}],["req",{"_index":4773,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4775,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":597,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1716,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1484,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":849,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1723,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":2124,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":860,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":649,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":4074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":4072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":778,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1328,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3548,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3219,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":767,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3377,"title":{},"body":{"license.html":{}}}],["reset",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3630,"title":{},"body":{"license.html":{}}}],["resolvepermissionsbyname",{"_index":1441,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsbyname(name",{"_index":1433,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1184,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":4738,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3524,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3983,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4766,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":119,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":747,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3747,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1887,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3984,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":492,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1332,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3517,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3704,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2816,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":3055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3339,"title":{},"body":{"license.html":{}}}],["results",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3652,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1641,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3253,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3899,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3852,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2982,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3321,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3175,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3873,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2515,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":804,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1754,"title":{},"body":{"classes/User.html":{}}}],["role/permissions",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolecache",{"_index":1395,"title":{"classes/RoleCache.html":{}},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["rolecache('level1",{"_index":1421,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["rolecache('level2",{"_index":1423,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["roleids",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["rolemap",{"_index":1402,"title":{"interfaces/RoleMap.html":{}},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["rolerepo",{"_index":1417,"title":{"injectables/RoleRepo.html":{}},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["roles",{"_index":802,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles>permissions",{"_index":898,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["rollback",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3655,"title":{},"body":{"license.html":{}}}],["room",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":247,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":4042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":4066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4747,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":467,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":3002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1950,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3764,"title":{},"body":{"license.html":{}}}],["rss",{"_index":359,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":2092,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1830,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":4702,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1709,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3445,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4710,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":505,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":507,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3914,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3773,"title":{},"body":{"license.html":{}}}],["same",{"_index":2500,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":564,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["samplecontroller",{"_index":4716,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleservice",{"_index":4717,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4633,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2128,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3951,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1170,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1188,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3603,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1800,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2787,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1902,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":4081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":332,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":356,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":355,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1452,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1454,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1106,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1126,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1217,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":407,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":789,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["schooluserinfo",{"_index":1756,"title":{},"body":{"classes/User.html":{}}}],["schoolyear",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":439,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":1818,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":480,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":616,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1194,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1195,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":627,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1198,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1341,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":908,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1238,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1249,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1251,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1247,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1245,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1253,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1338,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1315,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1023,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3452,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":3082,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1956,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4642,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3385,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3328,"title":{},"body":{"license.html":{}}}],["secret",{"_index":69,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3498,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3572,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["seeddata",{"_index":4694,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":3976,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3958,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":1406,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["self",{"_index":2993,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3788,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3772,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3364,"title":{},"body":{"license.html":{}}}],["send",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4605,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":533,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":2264,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":3073,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3613,"title":{},"body":{"license.html":{}}}],["separate",{"_index":914,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3244,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2288,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4621,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":1589,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["serialization",{"_index":3948,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2382,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":3179,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3214,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":481,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1471,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3977,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1460,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":3013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4627,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1463,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":2910,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3440,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":568,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":4757,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":561,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":607,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":615,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":611,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":634,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":635,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":596,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3878,"title":{},"body":{"license.html":{}}}],["session",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":847,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":925,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":4077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":2321,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1720,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":478,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":4035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2491,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":4076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":752,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":4079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":3503,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3302,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1816,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1035,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1534,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":1037,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":1034,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1090,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":60,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1191,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/pipes",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1255,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/utils",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":3148,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2157,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3930,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3640,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3229,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":3990,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simulates",{"_index":4788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3838,"title":{},"body":{"license.html":{}}}],["single",{"_index":781,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":840,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":777,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":3981,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2450,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":4834,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3183,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2963,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3282,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3624,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3481,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3495,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4802,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3927,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4634,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4638,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1196,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["sortedsubmissions",{"_index":1672,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortedsubmissions.foreach((submission",{"_index":1677,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sorting",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":3053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortordermap",{"_index":4001,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortordervalue",{"_index":4003,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":333,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":1815,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1220,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3584,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3309,"title":{},"body":{"license.html":{}}}],["spec",{"_index":4030,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":4045,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":4050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3663,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3293,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2333,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3430,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3859,"title":{},"body":{"license.html":{}}}],["specify",{"_index":963,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3853,"title":{},"body":{"license.html":{}}}],["split",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":4753,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4744,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4816,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":4052,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":4043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":279,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":280,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":508,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":4731,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sso",{"_index":74,"title":{},"body":{"classes/Account.html":{}}}],["stabilisation",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":720,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3426,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3429,"title":{},"body":{"license.html":{}}}],["start",{"_index":3233,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1784,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2511,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2421,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3706,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":335,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3536,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1556,"title":{},"body":{"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1630,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3322,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":4667,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":979,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2105,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1921,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4746,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":3018,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":4028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":921,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1089,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":3186,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":601,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4836,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":923,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1491,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student_create",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["studentfiles",{"_index":1492,"title":{},"body":{"classes/Submission.html":{}}}],["studentid",{"_index":1498,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":413,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["studentsintaskscourse",{"_index":1685,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":3236,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3272,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":815,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sub.task",{"_index":1697,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subdividing",{"_index":3753,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3746,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3785,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3497,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1476,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.grade",{"_index":1679,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.gradecomment",{"_index":1680,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.gradefileids",{"_index":1681,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.task.id",{"_index":1617,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionrepo",{"_index":1508,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["submissions",{"_index":1505,"title":{},"body":{"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["submissions.filter((sub",{"_index":1696,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionschema",{"_index":3042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1608,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1616,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submitted",{"_index":1652,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskUC.html":{}}}],["submittedusers",{"_index":1670,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.add(submission.student.id",{"_index":1683,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.has(submission.student.id",{"_index":1678,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.size",{"_index":1687,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subprograms",{"_index":3462,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3593,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3635,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3751,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":422,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["substitutionteachers",{"_index":414,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{}}}],["succesful",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2717,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3344,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3797,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3643,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3989,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3940,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":130,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4705,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3666,"title":{},"body":{"license.html":{}}}],["support",{"_index":866,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":869,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2899,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":867,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":3307,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3833,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3705,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3891,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3933,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1540,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swaggermodule.createdocument(app",{"_index":4087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":4088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1333,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2308,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2852,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":4833,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":2028,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3057,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3226,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2281,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":4034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3619,"title":{},"body":{"license.html":{}}}],["tap",{"_index":506,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":327,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":582,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.targetids",{"_index":1263,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1346,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1261,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1262,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":448,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":580,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetmodel",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1298,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1342,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":570,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1345,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":581,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":411,"title":{"classes/Task.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course.students.length",{"_index":1686,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.course?.color",{"_index":1566,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1564,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1567,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1562,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1504,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1559,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1560,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1568,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_view_v3",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["taskcontroller",{"_index":1530,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmapper",{"_index":1537,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1552,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["taskmodel",{"_index":4089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1466,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1572,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1539,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["tasks",{"_index":1517,"title":{},"body":{"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1551,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["taskschema",{"_index":3043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1550,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasksubmissions",{"_index":1669,"title":{},"body":{"injectables/TaskUC.html":{}}}],["tasksubmissions].sort((a",{"_index":1673,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskuc",{"_index":1535,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":1507,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["teacherids",{"_index":424,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["teachers",{"_index":415,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["team",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":381,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":408,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":790,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["teardown",{"_index":3960,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3506,"title":{},"body":{"license.html":{}}}],["technology",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":3414,"title":{},"body":{"license.html":{}}}],["template",{"_index":728,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3470,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3711,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3730,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3721,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3708,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2286,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":468,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":484,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":464,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":466,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":4044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3255,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":4677,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":4697,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":4063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":851,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":472,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":4732,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":4740,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":4736,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":4735,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":4734,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":4051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":4049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":2031,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3348,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2568,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":3529,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1258,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1256,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1273,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1259,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1733,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1270,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1268,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1269,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.aud",{"_index":868,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1330,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4599,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1309,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1347,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1343,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.cache",{"_index":1413,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cache[selector",{"_index":1414,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1",{"_index":1420,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.add(id",{"_index":1432,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.add(name",{"_index":1428,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.get(id",{"_index":1431,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.get(name",{"_index":1426,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.has(id",{"_index":1430,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.has(name",{"_index":1425,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl2",{"_index":1422,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl2.get(name",{"_index":1435,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.cl2.has(name",{"_index":1434,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.code",{"_index":282,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.computesubmissionmetadata(tasksubmissions",{"_index":1698,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.content",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":746,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1376,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(coursetaskinfo",{"_index":1592,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":1612,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1610,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1622,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1204,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":1518,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1201,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":1427,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1193,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1205,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1202,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":583,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":569,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findallopenbyteacher(userid",{"_index":1701,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallopenforuser(userid",{"_index":1702,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyname(name",{"_index":1436,"title":{},"body":{"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1200,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1759,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getcourseofuser(userid",{"_index":1609,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1322,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1317,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1340,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":562,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.lastname",{"_index":1761,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.limit",{"_index":1379,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1307,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4635,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1313,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1323,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1314,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4608,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1306,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4632,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":510,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":514,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":983,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":322,"title":{},"body":{"classes/CourseInfo.html":{},"classes/RoleCache.html":{},"interfaces/RoleMap.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1337,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1319,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1326,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1312,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1050,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1070,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1057,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1066,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1067,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":982,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.request.app",{"_index":630,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.skip",{"_index":1378,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.submissionrepo.getsubmissionsbytaskslist(tasks",{"_index":1694,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallassignedbyteacher(userid",{"_index":1693,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1692,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopen(currentuser",{"_index":1548,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1549,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1377,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4607,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4613,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4603,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4601,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validationerrors",{"_index":131,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2972,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3668,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2705,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":3403,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1724,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1732,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1731,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3487,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":3238,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3240,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":438,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"injectables/TaskUC.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":848,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(milliseconds",{"_index":1735,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1728,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1725,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":850,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1734,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2706,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1209,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":3190,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":86,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":249,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1075,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4701,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3455,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4626,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1369,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":827,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3692,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3691,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3693,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2269,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3404,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3647,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3749,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":764,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1383,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":768,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":765,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":911,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4838,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3608,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3667,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3512,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2917,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2936,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtConstants.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3956,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2860,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":871,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["type.interface.ts",{"_index":817,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3992,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4803,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1235,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4807,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1794,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":3011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1064,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3632,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":602,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":4053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1602,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1039,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1536,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":3188,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":528,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3355,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":4678,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":740,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":532,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2213,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3258,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3191,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3638,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4760,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3476,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3381,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2957,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3664,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":796,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1159,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4623,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3719,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":2060,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1003,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1300,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1026,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1232,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":1027,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":334,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2947,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":792,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1186,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3184,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1506,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":531,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":3135,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":652,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3194,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2526,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":251,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":524,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1594,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedglobals",{"_index":650,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":954,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":3919,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":4029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4602,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.entity",{"_index":61,"title":{},"body":{"classes/Account.html":{}}}],["user.id",{"_index":4609,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":567,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.tostring",{"_index":565,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.test.js",{"_index":3256,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user/class",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4594,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4600,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4615,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userid",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{}}}],["userinfo",{"_index":341,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1767,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1765,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1769,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1108,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1128,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1131,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1211,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":803,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4610,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1621,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["usertaskinfo",{"_index":420,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["uses",{"_index":2780,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":486,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":604,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":2527,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4700,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2494,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2933,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":4078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3980,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3985,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":772,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":844,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":81,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1782,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":750,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":758,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":312,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":124,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":293,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":757,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":457,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1387,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":788,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1959,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":2845,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1844,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3288,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":822,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":831,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":836,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":1981,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4725,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2025,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3305,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1613,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1296,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":348,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3661,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3715,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3146,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3964,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":347,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3235,"title":{},"body":{"index.html":{}}}],["void",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"classes/RoleCache.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3565,"title":{},"body":{"license.html":{}}}],["vor",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":864,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4152,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4829,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3986,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4827,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3197,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3519,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3904,"title":{},"body":{"license.html":{}}}],["want",{"_index":3315,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":823,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":833,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1593,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3416,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3415,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3970,"title":{},"body":{"todo.html":{}}}],["way",{"_index":961,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3575,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3924,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3223,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":4675,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3755,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":913,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":3628,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":770,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3436,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3615,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3433,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":3334,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2546,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2988,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2461,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3248,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3511,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3261,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3313,"title":{},"body":{"license.html":{}}}],["within",{"_index":269,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2389,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3243,"title":{},"body":{"index.html":{}}}],["work",{"_index":256,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3453,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4624,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2892,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":4670,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1074,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3787,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":4729,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":4683,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":737,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":744,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":724,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":739,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3868,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3227,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":731,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":4062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3200,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3583,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":613,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskMapper.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3254,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3803,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4630,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lasttriedFailedLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/account.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: User})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/account.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/account.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants)],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseTaskInfo.html":{"url":"classes/CourseTaskInfo.html","title":"class - CourseTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : COURSE_DEFAULT_COLOR\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            substitutionTeachers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'substitutionIds', type: UserTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teachers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'teacherIds', type: UserTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\nexport const COURSE_DEFAULT_COLOR = '#ACACAC';\n\n@Entity({ tableName: 'courses' })\nexport class CourseTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string = COURSE_DEFAULT_COLOR;\n\n\t// TODO: @Property() ?\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t// TODO: combine teachers and substitutionTeachers\n\t@ManyToMany({ fieldName: 'teacherIds', type: UserTaskInfo })\n\tteachers = new Collection(this);\n\n\t@ManyToMany({ fieldName: 'substitutionIds', type: UserTaskInfo })\n\tsubstitutionTeachers = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DB_PASSWORD\n                                \n                                \n                                        DB_URL\n                                \n                                \n                                            Optional\n                                        DB_USERNAME\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tvalidate(payload: JwtPayload): JwtPayload {\n\t\t// TODO: check jwt is whitelisted\n\t\t// TODO: use user module for:\n\t\t// TODO: --> check user exist/is active\n\t\t// TODO: --> populate roles>permissions\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { CourseTaskInfo } from './course-task-info.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MikroOrmModuleSyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            MikroOrmModuleSyncOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MikroOrmModuleSyncOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: IPagination = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: IPagination): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/role.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/role.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityId[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/role.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tpermissions: string[];\n\t// TODO: enum\n\n\t@Property()\n\troles: EntityId[];\n\t// TODO: enum\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleCache.html":{"url":"classes/RoleCache.html","title":"class - RoleCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                cleanup\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMap\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(selector: string, role: Role)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cleanup\n                        \n                        \n                    \n                \n            \n            \n                \ncleanup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(selector: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Role\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(selector: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\n// import { QueryOrder } from '@mikro-orm/core';\n// import { Counted } from '@shared/domain/types';\nimport { Role } from '../entity';\n\ninterface RoleMap {\n\t[name: string]: Role;\n}\n\nclass RoleCache {\n\tcache: RoleMap;\n\n\tname: string;\n\n\tconstructor(name = '') {\n\t\tthis.cache = {};\n\t\tthis.name = name;\n\t}\n\n\tget(selector: string): Role {\n\t\treturn this.cache[selector];\n\t}\n\n\thas(selector: string): boolean {\n\t\treturn Object.prototype.hasOwnProperty.call(this.cache, selector);\n\t}\n\n\tadd(selector: string, role: Role) {\n\t\tthis.cache[selector] = role;\n\t}\n\n\tcleanup() {\n\t\tthis.cache = {};\n\t}\n}\n\n// caching ?\n@Injectable()\nexport class RoleRepo {\n\tcl1: RoleCache;\n\n\tcl2: RoleCache;\n\n\tconstructor(private readonly em: EntityManager) {\n\t\tthis.cl1 = new RoleCache('level1');\n\t\tthis.cl2 = new RoleCache('level2');\n\t}\n\n\tasync findByName(name: string): Promise {\n\t\tlet role: Role;\n\n\t\tif (this.cl1.has(name)) {\n\t\t\trole = this.cl1.get(name);\n\t\t} else {\n\t\t\trole = await this.em.findOneOrFail(Role, { name });\n\t\t\tthis.cl1.add(name, role);\n\t\t}\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tlet role: Role;\n\n\t\tif (this.cl1.has(id)) {\n\t\t\trole = this.cl1.get(id);\n\t\t} else {\n\t\t\trole = await this.em.findOneOrFail(Role, { id });\n\t\t\tthis.cl1.add(id, role);\n\t\t}\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsByName(name: string): Promise {\n\t\tif (this.cl2.has(name)) {\n\t\t\treturn this.cl2.get(name);\n\t\t}\n\n\t\tconst role = await this.findByName(name);\n\t\tlet { permissions } = role;\n\t\tconst { roles } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleMap.html":{"url":"interfaces/RoleMap.html","title":"interface - RoleMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoleMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        Role\n\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\n// import { QueryOrder } from '@mikro-orm/core';\n// import { Counted } from '@shared/domain/types';\nimport { Role } from '../entity';\n\ninterface RoleMap {\n\t[name: string]: Role;\n}\n\nclass RoleCache {\n\tcache: RoleMap;\n\n\tname: string;\n\n\tconstructor(name = '') {\n\t\tthis.cache = {};\n\t\tthis.name = name;\n\t}\n\n\tget(selector: string): Role {\n\t\treturn this.cache[selector];\n\t}\n\n\thas(selector: string): boolean {\n\t\treturn Object.prototype.hasOwnProperty.call(this.cache, selector);\n\t}\n\n\tadd(selector: string, role: Role) {\n\t\tthis.cache[selector] = role;\n\t}\n\n\tcleanup() {\n\t\tthis.cache = {};\n\t}\n}\n\n// caching ?\n@Injectable()\nexport class RoleRepo {\n\tcl1: RoleCache;\n\n\tcl2: RoleCache;\n\n\tconstructor(private readonly em: EntityManager) {\n\t\tthis.cl1 = new RoleCache('level1');\n\t\tthis.cl2 = new RoleCache('level2');\n\t}\n\n\tasync findByName(name: string): Promise {\n\t\tlet role: Role;\n\n\t\tif (this.cl1.has(name)) {\n\t\t\trole = this.cl1.get(name);\n\t\t} else {\n\t\t\trole = await this.em.findOneOrFail(Role, { name });\n\t\t\tthis.cl1.add(name, role);\n\t\t}\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tlet role: Role;\n\n\t\tif (this.cl1.has(id)) {\n\t\t\trole = this.cl1.get(id);\n\t\t} else {\n\t\t\trole = await this.em.findOneOrFail(Role, { id });\n\t\t\tthis.cl1.add(id, role);\n\t\t}\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsByName(name: string): Promise {\n\t\tif (this.cl2.has(name)) {\n\t\t\treturn this.cl2.get(name);\n\t\t}\n\n\t\tconst role = await this.findByName(name);\n\t\tlet { permissions } = role;\n\t\tconst { roles } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cl1\n                            \n                            \n                                cl2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolvePermissionsByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cl1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleCache\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cl2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleCache\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\n// import { QueryOrder } from '@mikro-orm/core';\n// import { Counted } from '@shared/domain/types';\nimport { Role } from '../entity';\n\ninterface RoleMap {\n\t[name: string]: Role;\n}\n\nclass RoleCache {\n\tcache: RoleMap;\n\n\tname: string;\n\n\tconstructor(name = '') {\n\t\tthis.cache = {};\n\t\tthis.name = name;\n\t}\n\n\tget(selector: string): Role {\n\t\treturn this.cache[selector];\n\t}\n\n\thas(selector: string): boolean {\n\t\treturn Object.prototype.hasOwnProperty.call(this.cache, selector);\n\t}\n\n\tadd(selector: string, role: Role) {\n\t\tthis.cache[selector] = role;\n\t}\n\n\tcleanup() {\n\t\tthis.cache = {};\n\t}\n}\n\n// caching ?\n@Injectable()\nexport class RoleRepo {\n\tcl1: RoleCache;\n\n\tcl2: RoleCache;\n\n\tconstructor(private readonly em: EntityManager) {\n\t\tthis.cl1 = new RoleCache('level1');\n\t\tthis.cl2 = new RoleCache('level2');\n\t}\n\n\tasync findByName(name: string): Promise {\n\t\tlet role: Role;\n\n\t\tif (this.cl1.has(name)) {\n\t\t\trole = this.cl1.get(name);\n\t\t} else {\n\t\t\trole = await this.em.findOneOrFail(Role, { name });\n\t\t\tthis.cl1.add(name, role);\n\t\t}\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tlet role: Role;\n\n\t\tif (this.cl1.has(id)) {\n\t\t\trole = this.cl1.get(id);\n\t\t} else {\n\t\t\trole = await this.em.findOneOrFail(Role, { id });\n\t\t\tthis.cl1.add(id, role);\n\t\t}\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsByName(name: string): Promise {\n\t\tif (this.cl2.has(name)) {\n\t\t\treturn this.cl2.get(name);\n\t\t}\n\n\t\tconst role = await this.findByName(name);\n\t\tlet { permissions } = role;\n\t\tconst { roles } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\nimport { Task, LessonTaskInfo, CourseTaskInfo, Submission, FileTaskInfo, UserTaskInfo } from './modules/task/entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLessonTaskInfo,\n\t\t\t\tCourseTaskInfo,\n\t\t\t\tFileTaskInfo,\n\t\t\t\tUserTaskInfo,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFileIds\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradeComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradeFileIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo;\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number;\n\n\t@Property()\n\tgradeComment: string;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFileIds = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSubmissionsByTask\n                            \n                            \n                                    Async\n                                getSubmissionsByTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSubmissionsByTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSubmissionsByTasksList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTasksList(tasks: Task[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Counted } from '../../../shared/domain';\nimport { Submission, Task } from '../entity';\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getSubmissionsByTask(task: Task): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask,\n\t\t});\n\t\treturn [submissions, count];\n\t}\n\n\tasync getSubmissionsByTasksList(tasks: Task[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: tasks },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LessonTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { CourseTaskInfo } from './course-task-info.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskMapper } from '../mapper/task.mapper';\n\nimport { TaskResponse } from './dto';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\t// const [tasks, total] = await this.taskUc.findAllOpen(currentUser, paginationQuery);\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task, status?: ISubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ISubmissionStatus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task, COURSE_DEFAULT_COLOR, ISubmissionStatus } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task, status?: ISubmissionStatus): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color || COURSE_DEFAULT_COLOR;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = status || {};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubmissionRepo\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\nimport { SubmissionRepo } from './repo/submission.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, SubmissionRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllAssignedByTeacher\n                            \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                            \n                                    Async\n                                getCourseOfUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAssignedByTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAssignedByTeacher(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourseOfUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseOfUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { Task, Submission, CourseTaskInfo, LessonTaskInfo } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// TODO: move to seperate repo\n\tasync getCourseOfUser(userId: EntityId): Promise {\n\t\tconst coursesOfUser = await this.em.find(CourseTaskInfo, {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\tstudents: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tteachers: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsubstitutionTeachers: userId,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\treturn coursesOfUser;\n\t}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst [coursesOfUser, submissionsOfStudent] = await Promise.all([\n\t\t\tthis.getCourseOfUser(userId),\n\t\t\tthis.em.find(Submission, { student: userId }),\n\t\t]);\n\n\t\tconst lessonsOfStudent = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: coursesOfUser },\n\t\t\thidden: false,\n\t\t});\n\n\t\t// TODO: filter via query ..exist not exist, orm return null ? Add test for it!\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.task.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfUser } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n\n\tasync findAllAssignedByTeacher(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// TODO: merge overlaps with findAllOpenByStudent\n\t\t// TODO: use Query Builder\n\t\tconst coursesOfUser = await this.getCourseOfUser(userId);\n\n\t\tconst publishedLessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: coursesOfUser },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst [usersTasks, count] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ course: { $in: coursesOfUser } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: publishedLessons } }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { createdAt: QueryOrder.DESC } }\n\t\t);\n\t\treturn [usersTasks, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus?: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computeSubmissionMetadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpen\n                            \n                            \n                                    Async\n                                findAllOpenByTeacher\n                            \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, submissionRepo: SubmissionRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionRepo\n                                                  \n                                                        \n                                                                        SubmissionRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpen(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeSubmissionMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/uc/task.uc.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task, Submission, ISubmissionStatus } from '../entity';\nimport { SubmissionRepo } from '../repo/submission.repo';\nimport { TaskMapper } from '../mapper/task.mapper';\nimport { TaskResponse } from '../controller/dto';\n\n// TODO: add time filter filter in uc\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo, private submissionRepo: SubmissionRepo) {}\n\n\t// TODO: move into seperate UC\n\tcomputeSubmissionMetadata = (taskSubmissions: Submission[], task: Task): ISubmissionStatus => {\n\t\tconst submittedUsers = new Set();\n\t\tconst gradedUsers = new Set();\n\n\t\tconst sortedSubmissions = [...taskSubmissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt > b.createdAt) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn -1;\n\t\t});\n\n\t\tsortedSubmissions.forEach((submission) => {\n\t\t\tif (\n\t\t\t\t!submittedUsers.has(submission.student.id) &&\n\t\t\t\t(submission.grade || submission.gradeComment || submission.gradeFileIds)\n\t\t\t) {\n\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t}\n\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t});\n\t\t// TODO: consider coursegroups\n\t\tconst studentsInTasksCourse = task.course.students.length;\n\n\t\treturn {\n\t\t\tsubmitted: submittedUsers.size,\n\t\t\tmaxSubmissions: studentsInTasksCourse,\n\t\t\tgraded: gradedUsers.size,\n\t\t};\n\t};\n\n\t// TODO by Students\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n\n\tasync findAllOpenByTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst [tasks, total] = await this.taskRepo.findAllAssignedByTeacher(userId, pagination);\n\t\tconst [submissions] = await this.submissionRepo.getSubmissionsByTasksList(tasks);\n\n\t\tconst computedTasks = tasks.map((task) => {\n\t\t\tconst taskSubmissions = submissions.filter((sub) => sub.task === task);\n\t\t\treturn TaskMapper.mapToResponse(task, this.computeSubmissionMetadata(taskSubmissions, task));\n\t\t});\n\t\treturn [computedTasks, total];\n\t}\n\n\tasync findAllOpen(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\t// TODO: get permissions\n\t\tconst { roles } = currentUser;\n\t\tconst { userId } = currentUser;\n\t\tconst permissions = [''] as string[];\n\t\tif (!permissions.includes('TASK_DASHBOARD_TEACHER_VIEW_V3') && !permissions.includes('TASK_DASHBOARD_VIEW_V3')) {\n\t\t\tthrow new UnauthorizedException();\n\t\t\t// return [[], 0];\n\t\t}\n\n\t\tlet response: Counted;\n\t\tif (permissions.includes('TASK_DASHBOARD_TEACHER_VIEW_V3')) {\n\t\t\tresponse = await this.findAllOpenByTeacher(userId, pagination);\n\t\t} else {\n\t\t\tconst [tasks, total] = await this.findAllOpenForUser(userId, pagination);\n\t\t\tconst computedTasks = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\t\tresponse = [computedTasks, total];\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : REQUEST_TIMEOUT\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'roles', type: Role})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Role } from './role.entity';\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t// @ManyToOne({ fieldName: 'schoolId' }) // oneToMany?\n\t// school: SchoolUserInfo;\n\n\t@ManyToMany({ fieldName: 'roles', type: Role })\n\troles = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n26.2.2 - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n26.2.1 - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n26.2.0 - 2021-06-01\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            class\n            CourseTaskInfo\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            variable\n            COURSE_DEFAULT_COLOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            class\n            RoleCache\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            interface\n            RoleMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/sorting.ts\n            \n            variable\n            SortOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.7.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages.\n\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    41 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../status.type.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../sorting.ts)\n                        \n                        \n                            SortOrderValue   (apps/.../sorting.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/status.type.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/sorting.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortOrderValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../constants.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            COURSE_DEFAULT_COLOR   (apps/.../course-task-info.entity.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../constants.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/controller/swagger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                        \n                    \n\n                \n                    \n                        \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableOpenApiDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/entity/course-task-info.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COURSE_DEFAULT_COLOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#ACACAC'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTestModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/domain/interface/sorting.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tasc: 'asc',\n\tdesc: 'desc',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            usedGlobals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalConstants\n\n                        \n                    \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : usedGlobals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead. \n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
