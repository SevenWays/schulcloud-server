var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.139,1,2.615]],["body/classes/Account.html",[0,0.154,1,3.802,2,0.993,3,0.199,4,0.164,5,0.119,6,4.44,7,1.987,8,3.49,9,0.403,10,1.102,11,7.363,12,1.981,13,5.931,14,2.566,15,2.793,16,1.334,17,2.877,18,1.283,19,4.377,20,4.434,21,0.866,22,5.03,23,0.84,24,0.009,25,0.585,26,0.522,27,0.652,28,2.697,29,2.115,30,2.893,31,5.03,32,1.923,33,2.218,34,1.543,35,4.16,36,4.052,37,5.824,38,5.03,39,1.068,40,5.03,41,1.956,42,2.069,43,3.309,44,2.582,45,2.582,46,2.069,47,2.582,48,2.493,49,2.011,50,2.582,51,0.326,52,1.076,53,4.16,54,2.582,55,1.314,56,1.672,57,1.254,58,5.03,59,2.334,60,4.44,61,0.187,62,1.805,63,1.715,64,2.307,65,2.582,66,3.027,67,5.03,68,3.027,69,2.678,70,2.334,71,3.337,72,4.44,73,3.53,74,3.172,75,2.194,76,2.411,77,5.03,78,5.03,79,3.762,80,0.005,81,0.006,82,0.005]],["title/classes/ApiValidationError.html",[0,0.139,83,2.861]],["body/classes/ApiValidationError.html",[0,0.173,2,1.112,3,0.223,4,0.184,5,0.134,7,2.137,9,0.452,10,1.186,18,1.437,21,0.863,23,0.941,24,0.009,25,0.655,26,0.542,27,0.73,39,1.062,43,3.558,51,0.314,61,0.209,62,2.021,65,2.892,80,0.006,81,0.007,82,0.006,83,4.474,84,6.264,85,4.972,86,5.846,87,3.624,88,2.837,89,3.926,90,3.106,91,1.649,92,6.857,93,5.633,94,6.569,95,5.633,96,6.857,97,2.132,98,5.633,99,5.633,100,5.633,101,5.633,102,5.633,103,1.279,104,3.246,105,4.537,106,1.193,107,5.633,108,4.972,109,4.537,110,3.19,111,3.778,112,2.456,113,4.212,114,3.953,115,3.552,116,5.633]],["title/classes/ApiValidationErrorResponse.html",[0,0.139,117,3.655]],["body/classes/ApiValidationErrorResponse.html",[0,0.172,2,1.11,3,0.222,4,0.183,5,0.134,7,2.135,9,0.451,10,1.184,18,1.434,21,0.713,23,0.939,24,0.009,25,0.654,26,0.477,27,0.729,34,1.399,51,0.343,61,0.209,80,0.006,81,0.007,82,0.006,83,5.409,88,2.833,89,3.922,90,2.833,96,6.852,104,4.473,110,3.187,111,4.637,112,2.452,114,3.946,117,5.709,118,6.852,119,4.963,120,2.018,121,4.469,122,4.085,123,4.702,124,4.183,125,7.088,126,5.623,127,5.804,128,5.623,129,4.205,130,5.623,131,5.623,132,1.722,133,5.623,134,5.623,135,5.623,136,7.088,137,7.088,138,5.623,139,1.399,140,7.088,141,5.623]],["title/modules/AuthModule.html",[142,1.272,143,3.184]],["body/modules/AuthModule.html",[0,0.181,3,0.233,4,0.192,5,0.14,12,1.401,24,0.009,51,0.393,61,0.219,80,0.006,81,0.007,82,0.006,106,1.247,142,2.222,143,6.237,144,2.29,145,2.648,146,3.259,147,3.259,148,3.023,149,3.356,150,3.385,151,5.199,152,5.199,153,5.199,154,5.757,155,6.09,156,4.037,157,3.136,158,2.648,159,5.889,160,3.885,161,7.296,162,4.404,163,5.889,164,5.199,165,5.889,166,3.907,167,4.744,168,7.296,169,5.889,170,5.889,171,5.889,172,5.889,173,2.823]],["title/modules/AuthorizationModule.html",[142,1.272,174,3.01]],["body/modules/AuthorizationModule.html",[0,0.185,3,0.238,4,0.197,5,0.143,24,0.009,51,0.369,61,0.224,80,0.006,81,0.007,82,0.006,106,1.276,142,2.245,144,2.344,145,2.71,146,3.335,147,3.335,148,3.094,149,3.39,150,3.716,156,4.095,157,3.209,158,2.71,160,3.94,174,6.035,175,5.32,176,5.32,177,5.32,178,5.32,179,5.789,180,5.498,181,5.503,182,6.027,183,6.027,184,6.027,185,2.888,186,5.32]],["title/injectables/AuthorizationService.html",[180,2.731,187,1.007]],["body/injectables/AuthorizationService.html",[0,0.126,3,0.162,4,0.134,5,0.097,9,0.329,12,2.012,18,1.047,21,0.723,23,1.201,24,0.009,25,0.836,26,0.442,27,0.932,34,0.811,39,1.072,51,0.318,52,1.278,57,1.023,61,0.153,69,3.827,80,0.004,81,0.006,82,0.004,91,1.336,103,1.718,106,0.869,132,1.595,139,1.135,180,3.46,181,4.944,185,1.967,186,3.624,187,1.275,188,1.641,189,3.624,190,2.706,191,5.856,192,5.856,193,6.633,194,4.105,195,4.105,196,4.105,197,2.868,198,3.876,199,4.191,200,4.926,201,3.338,202,4.105,203,3.181,204,5.748,205,3.638,206,4.444,207,2.606,208,3.814,209,4.105,210,4.105,211,5.374,212,3.624,213,4.105,214,4.034,215,5.074,216,3.625,217,4.63,218,1.967,219,3.624,220,1.846,221,4.873,222,3.814,223,2.715,224,4.105,225,4.105,226,3.307,227,4.105,228,4.105,229,4.105,230,5.748,231,4.105,232,4.105,233,2.471,234,4.105,235,5.748,236,4.105,237,4.105]],["title/classes/BaseEntity.html",[0,0.139,238,2.105]],["body/classes/BaseEntity.html",[0,0.24,2,1.131,3,0.226,4,0.187,5,0.136,8,2.949,9,0.459,10,1.308,14,3.19,15,2.424,16,1.658,17,2.497,21,0.721,24,0.009,26,0.441,28,2.601,29,1.951,30,2.668,34,1.545,39,1.07,41,3.19,42,3.374,46,3.374,51,0.317,52,1.338,55,1.872,56,1.903,61,0.267,63,1.952,64,2.002,80,0.006,81,0.007,82,0.006,88,2.289,238,3.631,239,4.613,240,5.726,241,5.726,242,2.94,243,4.613,244,4.282,245,4.613,246,4.613,247,5.055,248,3.611,249,2.838,250,5.055,251,2.657,252,4.613,253,3.446,254,3.169,255,5.055,256,4.613,257,5.055,258,4.019,259,3.799,260,4.282,261,4.613,262,5.055]],["title/classes/BaseEntityWithTimestamps.html",[0,0.139,8,1.866]],["body/classes/BaseEntityWithTimestamps.html",[0,0.235,2,1.081,3,0.216,4,0.179,5,0.13,8,3.153,9,0.439,10,1.281,14,3.138,15,3.245,16,1.631,17,3.343,21,0.811,24,0.009,26,0.429,28,2.77,29,2.077,30,2.751,32,1.82,33,2.099,34,1.645,39,1.048,41,3.138,42,3.319,46,3.319,48,2.713,49,2.188,51,0.308,52,1.316,55,1.82,56,1.819,61,0.259,63,1.866,64,1.914,80,0.005,81,0.007,82,0.005,88,2.188,238,3.233,239,4.409,242,2.81,243,4.409,244,4.094,245,4.409,246,4.409,247,4.832,248,3.452,249,2.713,250,4.832,251,2.54,252,4.409,253,3.294,254,3.029,255,4.832,256,4.409,257,4.832,258,3.841,259,3.632,260,4.094,261,4.409,262,4.832,263,5.474,264,5.474,265,5.474,266,5.474]],["title/classes/BusinessError.html",[0,0.139,86,3.01]],["body/classes/BusinessError.html",[0,0.228,2,1.015,3,0.203,4,0.168,5,0.122,7,2.015,9,0.412,10,1.118,18,1.707,21,0.842,23,0.859,24,0.009,25,0.597,26,0.546,27,0.666,34,1.015,39,1.145,51,0.329,61,0.191,62,1.844,74,4.219,75,2.918,80,0.005,81,0.007,82,0.005,86,4.438,87,3.677,88,3.496,89,4.36,90,3.349,91,1.555,92,6.956,97,2.532,103,1.167,104,4.287,105,6.348,106,1.088,113,5.563,120,1.844,124,4.045,139,1.015,267,4.536,268,4.287,269,4.695,270,3.702,271,4.695,272,3.856,273,4.027,274,5.992,275,5.138,276,5.53,277,6.69,278,5.138,279,5.138,280,5.138,281,5.138,282,5.138,283,5.138,284,4.536,285,6.69,286,5.138,287,4.438,288,6.69,289,5.138]],["title/interfaces/CacheEntry.html",[290,0.855,291,3.184]],["body/interfaces/CacheEntry.html",[0,0.164,3,0.212,4,0.175,5,0.127,16,1.083,21,0.539,24,0.009,25,0.963,26,0.33,33,1.614,39,1.094,49,2.143,51,0.354,52,0.874,55,1.4,57,1.336,61,0.199,63,1.827,80,0.005,81,0.007,82,0.005,97,2.028,106,1.135,132,1.777,139,1.635,187,1.189,190,2.229,197,2.461,201,1.975,207,2.285,223,2.724,242,2.752,290,1.01,291,5.327,292,2.028,293,4.009,294,5.36,295,3.089,296,5.36,297,3.226,298,4.08,299,4.318,300,3.762,301,4.009,302,4.318,303,3.762,304,4.318,305,4.318,306,4.318,307,4.318,308,4.318,309,3.226,310,4.318,311,5.142,312,4.318,313,4.318,314,5.538,315,5.538,316,4.318,317,4.009,318,5.538,319,4.318,320,4.318,321,5.538,322,4.318,323,2.657]],["title/modules/CoreModule.html",[142,1.272,324,3.184]],["body/modules/CoreModule.html",[0,0.172,3,0.221,4,0.183,5,0.133,24,0.009,51,0.371,61,0.208,75,3.084,80,0.006,81,0.007,82,0.006,106,1.187,112,3.084,120,2.011,142,2.352,144,2.178,145,2.519,146,3.1,147,3.1,148,2.876,149,2.372,150,2.599,156,3.913,157,2.983,158,2.519,160,3.765,324,6.35,325,4.945,326,4.945,327,6.014,328,6.014,329,5.158,330,6.014,331,5.602,332,4.459,333,7.071,334,4.459,335,5.696,336,5.696,337,7.071,338,4.691,339,5.288,340,4.691,341,7.071,342,4.075,343,4.963,344,6.242,345,7.071,346,5.288,347,5.602,348,5.602,349,5.602,350,5.602]],["title/classes/CourseInfo.html",[0,0.139,351,2.511]],["body/classes/CourseInfo.html",[0,0.181,2,1.165,3,0.233,4,0.192,5,0.14,7,2.2,9,0.473,10,1.22,14,2.84,16,1.476,18,1.505,21,0.834,23,0.986,24,0.009,25,0.991,26,0.534,27,0.765,29,1.977,30,2.704,39,1.133,41,2.294,42,2.427,43,3.092,46,2.427,51,0.323,52,1.191,55,1.541,56,1.961,57,1.471,59,2.738,61,0.219,62,2.118,80,0.006,81,0.007,82,0.006,238,3.953,295,4.21,309,3.551,351,4.042,352,7.003,353,3.265,354,3.621,355,5.126,356,2.925,357,4.141,358,4.141,359,3.721,360,4.141]],["title/classes/CourseNews.html",[0,0.139,361,2.511]],["body/classes/CourseNews.html",[0,0.188,2,0.58,3,0.116,4,0.215,5,0.07,7,1.987,8,2.862,9,0.235,10,0.751,12,0.698,14,2.38,15,2.591,16,1.406,17,2.669,21,0.874,23,0.491,24,0.009,25,0.635,26,0.524,27,0.993,28,2.407,29,2.146,30,2.883,32,1.723,33,1.987,34,1.43,39,1.148,41,1.748,42,1.849,43,3.663,44,1.507,45,1.507,46,1.849,47,1.507,48,2.228,49,1.797,50,1.507,51,0.32,52,1.076,54,3.142,55,0.767,56,0.976,57,0.732,61,0.245,62,1.054,64,1.91,66,3.97,70,1.362,76,2.618,80,0.003,81,0.004,82,0.003,90,2.782,91,1.045,103,0.667,139,0.58,197,2.138,198,3.158,199,3.449,201,2.012,218,1.407,222,1.948,238,2.534,251,2.534,268,2.591,287,1.948,290,0.553,351,3.022,354,1.455,356,2.707,361,2.487,362,1.948,363,3.163,364,3.413,365,3.129,366,3.386,367,3.033,368,4.295,369,2.706,370,4.06,371,3.859,372,2.534,373,3.361,374,4.703,375,2.936,376,2.365,377,2.982,378,3.513,379,3.444,380,2.982,381,2.365,382,2.365,383,3.154,384,4.06,385,3.154,386,2.982,387,2.154,388,2.834,389,3.154,390,2.365,391,2.365,392,3.259,393,2.021,394,2.365,395,3.022,396,3.287,397,2.365,398,2.365,399,2.365,400,2.834,401,2.365,402,2.834,403,2.365,404,3.154,405,2.365,406,2.365,407,2.365,408,2.365,409,2.365,410,3.154,411,2.365,412,1.362,413,3.386,414,2.06,415,2.487,416,1.625,417,2.06,418,1.455,419,2.06,420,2.06,421,2.06,422,2.06,423,2.06,424,1.851,425,2.06,426,2.06,427,3.154,428,2.534,429,2.618,430,2.534,431,2.456,432,2.534,433,3.287,434,2.908,435,2.06,436,3.154,437,2.06,438,2.06,439,3.833,440,1.692,441,1.692]],["title/classes/CourseTaskInfo.html",[0,0.139,442,2.731]],["body/classes/CourseTaskInfo.html",[0,0.141,2,0.905,3,0.181,4,0.15,5,0.109,7,1.868,8,3.41,9,0.368,10,1.036,12,1.091,14,2.412,15,2.626,16,1.254,17,2.705,18,1.17,19,4.115,20,4.19,21,0.869,23,0.766,24,0.009,25,0.876,26,0.536,27,0.594,28,2.061,29,2.131,30,2.827,32,2.118,33,2.443,34,1.665,35,5.114,36,5.662,37,5.475,39,1.075,41,1.783,42,1.885,43,3.188,44,2.353,45,2.353,46,1.885,47,2.353,48,2.272,49,1.833,50,2.353,51,0.311,52,1.011,53,4.749,54,2.353,55,1.197,56,1.524,57,1.143,59,2.127,61,0.231,62,1.645,63,2.114,70,2.127,76,3.369,80,0.005,81,0.006,82,0.005,132,1.017,353,2.537,359,2.891,413,2.537,442,3.733,443,6.68,444,3.372,445,7.029,446,4.933,447,6.648,448,6.066,449,4.047,450,5.257,451,4.584,452,4.584,453,4.991,454,4.584,455,6.202,456,4.584,457,6.202,458,4.584,459,4.047,460,3.693]],["title/classes/CreateNewsParams.html",[0,0.139,461,3.01]],["body/classes/CreateNewsParams.html",[0,0.202,2,0.988,3,0.198,4,0.163,5,0.119,9,0.401,10,1.099,16,1.329,21,0.815,24,0.009,26,0.498,28,2.186,29,2.019,39,1.176,51,0.325,52,1.443,61,0.186,68,4.695,80,0.005,81,0.006,82,0.005,90,3.239,120,3.087,132,1.111,198,3.203,200,4.233,205,3.051,218,3.52,363,3.114,364,3.302,365,3.643,367,3.641,461,4.363,462,6.699,463,3.744,464,3.051,465,4.918,466,3.502,467,6.577,468,4.419,469,5.006,470,5.298,471,3.79,472,5.298,473,4.918,474,5.006,475,5.006,476,4.615,477,4.615,478,5.006,479,5.006,480,5.155,481,5.298,482,3.79,483,5.006,484,5.006,485,4.793,486,2.399,487,5.806,488,6.527,489,2.885,490,3.513,491,3.513,492,3.157]],["title/controllers/DelayController.html",[493,1.979,494,3.393]],["body/controllers/DelayController.html",[0,0.18,3,0.232,4,0.191,5,0.139,9,0.471,21,0.59,24,0.009,29,1.462,32,1.901,34,1.158,51,0.35,61,0.218,80,0.006,81,0.007,82,0.006,91,1.692,103,1.332,106,1.243,110,2.638,132,1.615,139,1.437,149,2.484,173,3.488,190,2.565,207,2.63,223,2.106,343,5.108,493,3.174,494,5.918,495,5.863,496,4.726,497,7.304,498,5.867,499,5.108,500,3.922,501,5.108,502,3.876,503,5.443,504,5.179,505,5.867,506,3.531,507,4.726,508,5.863,509,5.179,510,5.179,511,5.867,512,4.388,513,2.812,514,4.726,515,4.829,516,4.726,517,3.124,518,4.726,519,4.388]],["title/injectables/DurationLoggingInterceptor.html",[187,1.007,520,3.655]],["body/injectables/DurationLoggingInterceptor.html",[0,0.175,3,0.226,4,0.186,5,0.136,9,0.458,10,1.197,21,0.72,23,0.955,24,0.009,25,0.665,26,0.352,27,0.741,32,1.493,33,1.722,34,1.414,51,0.362,61,0.213,80,0.006,81,0.007,82,0.006,87,3.216,91,1.665,103,1.298,106,1.211,120,2.051,132,1.268,139,1.129,187,1.589,188,2.285,340,4.751,430,3.628,503,5.355,515,4.751,520,5.768,521,6.903,522,5.046,523,7.161,524,5.355,525,4.751,526,3.516,527,4.365,528,6.322,529,6.322,530,6.13,531,7.236,532,5.716,533,2.934,534,6.903,535,7.161,536,5.716,537,4.604,538,5.716,539,5.046,540,5.046,541,3.792,542,5.716,543,4.011,544,7.161,545,5.716,546,5.716,547,5.716]],["title/modules/ErrorModule.html",[142,1.272,327,3.184]],["body/modules/ErrorModule.html",[0,0.197,3,0.253,4,0.209,5,0.152,24,0.009,32,2.007,51,0.364,61,0.238,80,0.006,81,0.008,82,0.006,106,1.358,120,2.301,142,2.154,144,2.494,149,2.715,216,4.846,327,5.393,342,4.429,346,6.379,506,3.86,517,3.415,548,6.413,549,6.783,550,4.625,551,4.429,552,3.809,553,5.393,554,6.413,555,6.413,556,5.166]],["title/classes/ErrorResponse.html",[0,0.139,104,2.615]],["body/classes/ErrorResponse.html",[0,0.18,2,1.161,3,0.232,4,0.192,5,0.14,18,1.859,21,0.591,23,0.982,24,0.009,25,0.683,26,0.523,27,0.762,39,1.224,51,0.26,61,0.219,80,0.006,81,0.007,82,0.006,87,3.405,88,3.31,89,4.383,90,3.166,97,2.997,104,4.2,105,4.735,106,1.245,112,3.454,120,2.615,121,4.994,122,4.2,123,4.835,124,3.741,284,5.189,557,5.189,558,5.878,559,5.878,560,5.878,561,4.735,562,5.114,563,5.878,564,3.707,565,5.189,566,3.538,567,2.564,568,3.388,569,3.9,570,4.735]],["title/injectables/FeathersAuthProvider.html",[181,2.861,187,1.007]],["body/injectables/FeathersAuthProvider.html",[0,0.124,3,0.16,4,0.132,5,0.096,9,0.325,12,1.948,14,1.577,18,1.035,21,0.785,23,1.305,24,0.009,25,0.908,26,0.48,27,1.013,34,0.801,39,1.03,41,2.563,51,0.333,55,1.059,57,1.011,61,0.151,80,0.004,81,0.006,82,0.004,91,1.325,103,1.711,106,0.859,132,1.872,139,1.542,181,3.595,187,1.265,188,1.622,190,2.848,197,2.933,198,3.406,199,3.977,200,4.12,201,2.775,206,4.272,207,2.804,208,3.782,219,3.581,220,1.824,223,2.703,233,2.442,238,2.645,242,2.082,290,0.764,369,1.577,393,3.386,499,4.001,500,2.011,526,2.963,571,7.082,572,3.268,573,5.701,574,5.818,575,5.701,576,5.701,577,5.818,578,4.057,579,4.701,580,4.057,581,5.701,582,4.057,583,3.581,584,4.057,585,5.701,586,4.057,587,5.701,588,4.057,589,4.057,590,4.057,591,5.032,592,4.057,593,3.581,594,5.701,595,3.581,596,5.701,597,5.701,598,4.057,599,4.057,600,3.058,601,4.057,602,5.701,603,5.701,604,5.701,605,4.057,606,2.847,607,4.057,608,4.057,609,2.011,610,4.057,611,2.338,612,4.592,613,3.581,614,4.057,615,4.057,616,3.268]],["title/interfaces/FeathersError.html",[290,0.855,617,3.184]],["body/interfaces/FeathersError.html",[3,0.259,4,0.214,5,0.156,7,2.346,9,0.526,10,1.302,24,0.009,26,0.553,39,1.217,61,0.244,80,0.006,81,0.008,82,0.006,88,3.436,97,3.144,112,3.397,290,1.236,292,2.483,617,5.467,618,5.793,619,5.793,620,7.587]],["title/modules/FeathersModule.html",[142,1.272,179,3.01]],["body/modules/FeathersModule.html",[0,0.182,3,0.234,4,0.194,5,0.141,24,0.009,51,0.324,61,0.221,80,0.006,81,0.007,82,0.006,106,1.257,120,2.13,142,2.392,144,3.093,145,2.668,146,3.284,147,3.284,148,3.046,149,3.367,150,3.69,156,4.056,157,3.16,158,2.668,179,5.845,185,3.812,502,3.903,579,5.487,593,5.239,600,3.401,621,5.239,622,5.239,623,5.239,624,5.935,625,4.622,626,4.225,627,3.903,628,3.633,629,4.412,630,4.863,631,4.863,632,4.863,633,4.863,634,5.905,635,3.296]],["title/interfaces/FeathersService.html",[290,0.855,636,3.393]],["body/interfaces/FeathersService.html",[0,0.153,3,0.198,4,0.163,5,0.119,9,0.401,16,1.329,21,0.661,23,1.099,24,0.009,25,0.765,26,0.48,27,0.853,39,0.684,51,0.358,57,1.248,61,0.29,75,2.183,80,0.005,81,0.006,82,0.005,91,1.529,103,1.494,106,1.06,132,1.111,139,0.988,144,1.947,185,2.399,187,1.459,197,2.529,207,2.593,221,4.233,290,0.943,292,1.894,428,3.051,429,3.152,430,3.051,431,2.957,432,3.051,433,3.958,502,3.911,506,3.013,526,2.251,579,3.013,600,3.859,625,3.157,626,4.233,627,2.665,628,4.016,629,3.013,630,3.321,631,3.321,632,3.321,633,3.321,634,4.032,635,2.251,636,5.834,637,5.493,638,3.513,639,3.302,640,5.806,641,6.828,642,5.006,643,5.006,644,4.147,645,5.806,646,5.006,647,3.502,648,3.321,649,3.157,650,4.032,651,5.298,652,5.806,653,4.147,654,5.298,655,5.298,656,4.032,657,3.513,658,4.419,659,4.419,660,4.419,661,4.419,662,4.419]],["title/injectables/FeathersServiceProvider.html",[187,1.007,579,2.731]],["body/injectables/FeathersServiceProvider.html",[0,0.151,3,0.195,4,0.161,5,0.117,9,0.395,16,0.996,18,1.257,21,0.654,23,1.087,24,0.009,25,0.757,26,0.477,27,0.844,39,0.996,51,0.356,57,1.228,61,0.288,75,2.148,80,0.005,81,0.006,82,0.005,91,1.513,103,1.119,106,1.043,120,1.768,132,1.093,139,0.973,144,2.531,185,3.119,187,1.444,188,1.969,197,2.11,207,2.163,221,4.2,290,0.928,428,3.019,429,3.119,430,3.019,431,2.926,432,3.019,433,3.917,502,4.128,506,2.965,526,2.215,579,3.917,600,3.977,625,4.104,626,4.468,627,3.465,628,4.299,629,3.917,630,4.317,631,4.317,632,4.317,633,4.317,634,5.242,635,2.926,636,5.797,637,5.45,638,3.457,639,2.215,640,4.349,641,5.87,643,4.386,645,4.349,647,3.465,648,3.268,649,3.106,650,3.968,651,5.242,652,5.745,653,4.104,654,5.242,655,5.242,656,3.968,657,4.567,658,4.349,659,4.349,660,5.745,661,4.349,662,4.349,663,6.508,664,4.926,665,4.926,666,4.926,667,3.457]],["title/classes/FileTaskInfo.html",[0,0.139,668,3.01]],["body/classes/FileTaskInfo.html",[0,0.166,2,1.068,3,0.214,4,0.176,5,0.128,7,2.082,8,3.55,9,0.434,10,1.155,12,1.286,14,2.688,15,2.927,16,1.397,17,3.015,18,1.379,19,4.587,20,4.421,21,0.868,23,0.903,24,0.009,25,0.934,26,0.511,27,0.701,28,2.298,29,2.116,30,2.894,32,1.806,33,2.082,34,1.365,39,1.042,41,2.103,42,2.224,43,3.401,44,2.776,45,2.776,46,2.224,47,2.776,48,2.68,49,2.162,50,2.776,51,0.337,52,1.127,55,1.412,56,1.797,57,1.348,59,2.509,61,0.201,62,1.94,70,2.509,80,0.005,81,0.007,82,0.005,353,2.992,366,3.913,413,2.992,444,3.319,453,4.587,668,4.587,669,7.091,670,5.407,671,5.407,672,5.407,673,3.254]],["title/interfaces/GlobalConstants.html",[290,0.855,674,3.393]],["body/interfaces/GlobalConstants.html",[3,0.249,4,0.205,5,0.15,9,0.505,10,1.27,24,0.009,26,0.502,27,1.099,39,1.238,51,0.278,61,0.234,80,0.006,81,0.007,82,0.006,132,1.686,290,1.186,292,2.382,674,6.105,675,5.071,676,7.661,677,7.661,678,7.661,679,6.122,680,6.296,681,6.122,682,3.628,683,4.177]],["title/classes/GlobalErrorFilter.html",[0,0.139,553,3.184]],["body/classes/GlobalErrorFilter.html",[0,0.15,2,0.65,3,0.13,4,0.107,5,0.078,9,0.264,10,0.819,21,0.589,23,0.819,24,0.009,25,0.681,26,0.427,27,0.636,30,1.123,32,0.86,33,0.992,34,1.369,49,1.317,51,0.333,61,0.123,64,1.152,80,0.003,81,0.005,82,0.003,83,3.693,86,4.304,87,2.409,88,2.594,89,2.713,90,2.342,91,1.361,103,1.473,104,4.707,106,0.698,110,1.481,111,1.754,112,3.985,121,2.077,122,4.638,124,1.691,129,2.464,132,1.964,139,1.665,185,2.807,221,2.826,270,2.713,274,5.226,290,0.62,372,2.717,428,2.275,429,2.35,430,2.275,431,2.205,432,1.528,526,2.633,527,4.349,541,3.253,550,4.174,552,2.43,553,3.441,611,1.899,617,4.553,620,2.908,627,1.754,635,1.481,649,2.077,684,4.852,685,2.312,686,5.857,687,5.587,688,4.718,689,4.903,690,3.294,691,4.903,692,5.857,693,5.857,694,6.488,695,3.294,696,3.886,697,5.857,698,3.294,699,3.294,700,2.908,701,2.908,702,3.294,703,3.294,704,2.654,705,2.908,706,2.654,707,5.857,708,2.654,709,2.464,710,2.908,711,3.253,712,2.654,713,2.312,714,3.693,715,2.077,716,2.654,717,2.908,718,4.328,719,2.908,720,2.654,721,2.908,722,2.908,723,2.908,724,2.908,725,2.908,726,3.693,727,3.95,728,3.294,729,3.95,730,5.587,731,3.294,732,3.294,733,3.294,734,3.95,735,3.294,736,3.294,737,4.903,738,3.294,739,3.294,740,2.186,741,4.328,742,2.312,743,2.908,744,2.077,745,2.186,746,4.328,747,3.241,748,2.654,749,4.328,750,2.908,751,3.95,752,2.908,753,2.908,754,2.464,755,2.654,756,2.908,757,2.908,758,2.654,759,2.654,760,2.654,761,2.464,762,2.464,763,2.908,764,2.908,765,2.908,766,2.908,767,6.123,768,2.654,769,6.123,770,2.908,771,2.654,772,2.908,773,3.294,774,3.294,775,3.294,776,4.903,777,3.294,778,3.294]],["title/classes/GlobalValidationPipe.html",[0,0.139,779,3.393]],["body/classes/GlobalValidationPipe.html",[0,0.237,2,1.096,3,0.219,4,0.181,5,0.132,7,2.118,10,0.928,18,1.969,21,0.558,24,0.009,26,0.475,29,1.753,32,1.836,34,1.096,51,0.311,61,0.206,62,1.993,64,2.459,80,0.005,81,0.007,82,0.005,83,3.501,94,5.664,106,1.176,111,4.319,120,1.993,124,2.85,129,4.152,139,1.096,269,4.934,342,4.052,418,3.825,464,3.58,485,3.2,489,4.052,567,2.421,609,2.752,611,3.2,643,3.342,779,5.258,780,6.207,781,4.901,782,5.664,783,4.232,784,5.664,785,5.664,786,5.664,787,4.665,788,7.717,789,5.552,790,4.665,791,3.896,792,4.472,793,5.552,794,2.752,795,3.683,796,5.552,797,5.552,798,4.152,799,5.552,800,5.552,801,5.552,802,3.683,803,3.896,804,5.552,805,3.2,806,3.896,807,5.552,808,4.472,809,3.501,810,5.552,811,4.152,812,3.2,813,5.552,814,5.552]],["title/interfaces/ICreateNews.html",[290,0.855,815,3.01]],["body/interfaces/ICreateNews.html",[3,0.215,4,0.177,5,0.129,9,0.436,10,1.159,20,2.894,24,0.009,26,0.538,28,2.539,39,1.162,51,0.24,52,0.886,57,1.355,61,0.321,80,0.005,81,0.007,82,0.005,90,3.218,120,1.951,132,1.539,197,2.477,198,3.025,199,3.787,200,3.998,205,2.522,218,2.605,251,3.218,290,1.602,292,2.057,359,3.428,363,3.114,364,3.659,365,3.619,367,3.99,369,2.114,412,2.522,416,3.008,639,2.444,815,4.602,816,3.814,817,6.124,818,6.483,819,5.588,820,3.606,821,3.814,822,5.588,823,3.814,824,3.814,825,4.798,826,3.606,827,3.428,828,3.133]],["title/interfaces/ICurrentUser.html",[290,0.855,829,2.329]],["body/interfaces/ICurrentUser.html",[1,4.039,3,0.218,4,0.18,5,0.131,7,1.663,9,0.443,10,1.171,12,1.926,16,1.636,24,0.009,26,0.514,39,1.268,51,0.244,61,0.261,63,2.389,80,0.005,81,0.007,82,0.005,97,2.652,206,4.311,214,4.918,290,1.32,292,2.09,298,3.151,393,3.839,829,3.951,830,4.449,831,4.449,832,5.682,833,3.88,834,4.725,835,4.311,836,4.918,837,4.875,838,3.876,839,4.13,840,4.449,841,4.875,842,4.449,843,4.449,844,4.449,845,4.449,846,4.449,847,3.664]],["title/interfaces/IErrorType.html",[276,3.184,290,0.855]],["body/interfaces/IErrorType.html",[3,0.26,4,0.215,5,0.156,9,0.527,10,1.303,24,0.009,26,0.553,39,1.247,61,0.245,80,0.006,81,0.008,82,0.006,87,3.42,90,3.439,113,6.432,276,5.474,290,1.239,292,2.488,848,5.805,849,5.805]],["title/interfaces/ILogger.html",[290,0.855,850,3.393]],["body/interfaces/ILogger.html",[3,0.22,4,0.182,5,0.132,9,0.447,21,0.842,23,1.4,24,0.009,25,0.974,26,0.515,27,1.151,39,1.26,61,0.207,80,0.005,81,0.007,82,0.005,89,4.636,91,1.638,103,1.903,112,3.073,290,1.05,292,2.109,533,4.695,644,5.396,850,5.27,851,4.919,852,6.221,853,4.675,854,7.047,855,7.047,856,5.572,857,5.572,858,6.221,859,6.226,860,5.572,861,6.221,862,5.572,863,5.572,864,5.572,865,6.221,866,5.572,867,4.919,868,4.919]],["title/interfaces/INewsProperties.html",[66,2.731,290,0.855]],["body/interfaces/INewsProperties.html",[0,0.213,3,0.15,4,0.25,5,0.09,7,2.093,8,2.242,9,0.305,10,0.911,12,0.906,16,0.77,24,0.009,25,0.443,26,0.512,27,1.045,28,2.31,30,2.746,34,1.257,39,1.203,51,0.348,52,1.199,54,2.798,55,0.994,56,1.266,57,0.949,61,0.273,62,1.367,64,2.226,66,4.182,70,1.767,76,3.051,80,0.004,81,0.005,82,0.004,90,3.058,139,0.752,197,2.782,198,3.031,199,3.155,201,1.403,218,1.825,222,2.526,238,2.529,251,2.953,268,3.141,287,2.526,290,0.717,292,1.441,351,3.016,354,1.887,356,1.887,361,2.107,362,2.526,363,3.044,364,3.523,365,3.44,366,3.927,367,3.645,368,5.161,369,3.063,370,4.879,371,4.637,372,1.767,374,4.849,377,2.526,378,3.39,380,2.526,383,2.672,384,3.616,385,2.672,386,2.526,387,1.825,388,2.401,389,2.672,392,3.39,393,1.712,395,3.845,396,4.182,400,2.401,402,2.401,404,2.672,410,2.672,412,1.767,413,3.845,414,2.672,415,3.016,416,2.107,417,2.672,418,1.887,419,2.672,420,2.672,421,2.672,422,2.672,423,2.672,424,2.401,425,2.672,426,2.672,427,3.825,428,2.953,429,3.051,430,2.953,431,2.862,432,2.953,433,3.831,434,3.39,435,2.672,436,3.825,437,2.672,438,2.672,439,4.467,440,2.195,441,2.195]],["title/interfaces/INewsScope.html",[290,0.855,826,3.01]],["body/interfaces/INewsScope.html",[3,0.219,4,0.18,5,0.131,9,0.444,10,1.172,20,2.946,24,0.009,26,0.525,27,1.051,28,1.839,39,0.959,51,0.245,52,0.902,57,1.379,61,0.323,80,0.005,81,0.007,82,0.005,90,2.212,120,1.985,132,1.557,197,2.497,198,3.059,199,3.819,200,4.043,205,2.567,218,2.651,251,3.255,290,1.609,292,2.094,359,3.489,363,3.123,364,3.673,365,2.487,367,2.742,369,2.151,412,2.567,416,3.061,639,2.487,815,3.67,816,3.882,817,4.884,818,5.651,819,5.651,820,3.67,821,3.882,822,6.526,823,3.882,824,3.882,825,6.193,826,4.654,827,5.109,828,4.44]],["title/interfaces/IPagination.html",[290,0.855,869,2.861]],["body/interfaces/IPagination.html",[3,0.265,4,0.219,5,0.159,9,0.538,10,1.318,24,0.009,26,0.485,27,1.122,61,0.249,80,0.007,81,0.008,82,0.007,97,3.385,290,1.263,292,2.537,869,4.975,870,5.918,871,5.742,872,5.742]],["title/interfaces/IRoleProperties.html",[290,0.855,873,3.393]],["body/interfaces/IRoleProperties.html",[0,0.163,3,0.21,4,0.173,5,0.126,7,1.598,8,2.809,9,0.606,10,1.141,24,0.009,25,0.982,26,0.508,27,1.034,30,2.719,34,1.349,35,4.307,39,1.202,51,0.302,52,1.114,53,3.345,55,1.386,56,1.763,57,1.322,59,2.461,61,0.281,62,1.904,63,1.808,70,2.461,76,2.543,80,0.005,81,0.007,82,0.005,197,2.675,201,3.113,290,0.999,292,2.008,298,3.396,309,3.193,354,2.63,360,3.723,387,2.543,489,3.058,491,4.793,564,4.307,726,3.345,803,3.723,833,4.304,873,5.649,874,3.968,875,3.968,876,4.683,877,3.968,878,3.52,879,4.274,880,4.274,881,4.683,882,4.683,883,4.683,884,4.683,885,5.108]],["title/interfaces/IUserProperties.html",[290,0.855,886,3.393]],["body/interfaces/IUserProperties.html",[0,0.161,3,0.207,4,0.171,5,0.125,7,1.582,8,2.791,9,0.676,10,1.134,12,1.249,24,0.009,25,0.874,26,0.518,27,1.03,30,2.872,34,1.037,35,3.312,39,1.226,51,0.332,52,1.106,53,3.312,54,2.696,55,1.372,56,1.745,57,1.309,59,2.436,61,0.252,62,1.885,70,2.436,76,3.252,80,0.005,81,0.007,82,0.005,197,2.731,290,0.989,292,1.987,298,3.699,354,2.603,369,3.276,393,2.361,424,3.312,564,4.279,833,4.164,834,2.906,885,3.927,886,5.622,887,4.23,888,5.458,889,5.458,890,5.458,891,4.636,892,4.636,893,4.636,894,4.636,895,4.23,896,4.23,897,4.23,898,4.23,899,4.636,900,4.636]],["title/modules/InterceptorModule.html",[142,1.272,328,3.184]],["body/modules/InterceptorModule.html",[0,0.184,3,0.238,4,0.196,5,0.143,24,0.009,51,0.354,61,0.224,63,2.05,80,0.006,81,0.007,82,0.006,106,1.274,120,2.159,129,4.498,142,2.072,144,2.339,149,2.546,253,4.449,328,5.187,342,4.26,343,5.615,506,3.62,515,4.904,517,3.936,556,5.954,635,3.753,783,4.449,794,3.664,805,3.467,901,6.015,902,5.954,903,5.187,904,5.528,905,4.661,906,8.346,907,3.794,908,5.528,909,5.954,910,6.242,911,3.793]],["title/injectables/JwtAuthGuard.html",[187,1.007,912,3.393]],["body/injectables/JwtAuthGuard.html",[0,0.211,3,0.272,4,0.224,5,0.163,7,2.073,24,0.009,51,0.354,61,0.256,80,0.007,81,0.008,82,0.007,106,1.458,162,5.147,187,1.778,188,2.751,912,5.991,913,6.075,914,6.075,915,6.882,916,6.882]],["title/interfaces/JwtConstants.html",[166,3.01,290,0.855]],["body/interfaces/JwtConstants.html",[3,0.235,4,0.194,5,0.141,9,0.478,10,1.228,24,0.009,26,0.512,39,1.227,51,0.263,61,0.273,63,2.031,73,5.996,79,5.495,80,0.006,81,0.007,82,0.006,132,1.63,166,5.519,185,2.855,206,3.172,290,1.122,292,2.254,295,4.235,418,2.953,832,5.156,839,4.455,840,4.799,842,4.799,843,4.799,844,4.799,845,4.799,846,4.799,847,3.952,917,4.799,918,7.542,919,6.486,920,5.957,921,5.957,922,4.799,923,3.952,924,4.799,925,4.181,926,3.757,927,5.957,928,5.957,929,5.957,930,4.799,931,5.957,932,5.957,933,5.957,934,5.259,935,5.259]],["title/interfaces/JwtPayload.html",[290,0.855,838,3.184]],["body/interfaces/JwtPayload.html",[1,3.166,3,0.217,4,0.179,5,0.13,7,2.103,9,0.441,10,1.167,12,1.307,16,1.412,24,0.009,26,0.524,39,1.261,51,0.243,61,0.26,63,2.754,80,0.005,81,0.007,82,0.005,97,3.227,206,2.925,214,3.855,290,1.315,292,2.079,298,2.47,393,3.14,829,3.942,830,4.425,831,4.425,832,3.855,833,2.633,834,4.249,835,3.719,836,3.855,837,4.849,838,4.901,839,5.223,840,6.509,841,6.165,842,6.509,843,6.509,844,5.626,845,6.509,846,6.509,847,5.361]],["title/injectables/JwtStrategy.html",[155,3.184,187,1.007]],["body/injectables/JwtStrategy.html",[0,0.17,3,0.219,4,0.181,5,0.132,7,1.669,9,0.444,12,1.834,18,1.414,21,0.706,23,1.173,24,0.009,25,0.817,26,0.432,27,0.911,51,0.378,61,0.206,62,1.989,63,2.763,64,1.938,80,0.005,81,0.007,82,0.005,87,2.279,91,1.633,103,1.259,106,1.174,132,1.23,139,1.094,142,1.554,155,4.929,162,4.145,166,3.677,167,4.464,187,1.558,188,2.216,190,2.499,207,2.334,220,2.492,223,1.989,254,3.886,611,3.194,835,3.74,838,5.689,904,5.252,936,4.892,937,5.542,938,5.67,939,5.542,940,7.023,941,5.542,942,4.64,943,5.542,944,4.464,945,4.892,946,4.929,947,5.542,948,5.542,949,5.542,950,5.542,951,5.542,952,5.542,953,5.542,954,5.542,955,5.542,956,5.542,957,5.542,958,5.542,959,4.145,960,5.542,961,5.542,962,5.542]],["title/classes/LessonTaskInfo.html",[0,0.139,963,2.861]],["body/classes/LessonTaskInfo.html",[0,0.17,2,1.098,3,0.22,4,0.181,5,0.132,7,2.12,8,3.573,9,0.446,10,1.176,14,2.737,15,2.98,16,1.423,17,3.07,21,0.86,24,0.009,26,0.499,28,2.34,29,2.132,30,2.767,32,1.838,33,2.12,34,1.39,39,0.76,41,2.163,42,2.288,43,3.436,44,2.855,45,2.855,46,2.288,47,2.855,48,2.757,49,2.224,50,2.855,51,0.341,52,1.148,55,1.453,56,1.849,57,1.386,59,2.581,61,0.207,76,2.666,80,0.005,81,0.007,82,0.005,353,3.078,374,4.237,379,3.507,412,3.766,413,3.078,442,4.648,444,3.245,449,4.91,828,4.057,963,4.439,964,6.817,965,5.776,966,6.214,967,5.562,968,4.91]],["title/injectables/Logger.html",[187,1.007,527,2.416]],["body/injectables/Logger.html",[0,0.183,3,0.235,4,0.194,5,0.141,7,2.213,24,0.009,32,1.556,51,0.325,61,0.222,64,2.083,75,2.598,80,0.006,81,0.007,82,0.006,91,1.385,106,1.262,187,1.63,188,2.382,216,3.757,221,4.235,513,2.855,527,4.633,533,4.09,541,4.875,568,3.433,600,2.764,630,3.952,647,3.912,787,3.952,791,4.181,794,3.642,850,6.221,853,5.286,969,5.259,970,8.318,971,5.957,972,5.957,973,4.181,974,4.181,975,5.259,976,4.455,977,5.259,978,3.757,979,3.757,980,6.486,981,3.433,982,4.455,983,5.957,984,5.957,985,5.259,986,4.181,987,5.259,988,3.585,989,5.957,990,5.957,991,5.957]],["title/modules/LoggerModule.html",[142,1.272,329,2.731]],["body/modules/LoggerModule.html",[0,0.196,3,0.253,4,0.209,5,0.152,24,0.009,51,0.339,61,0.238,80,0.006,81,0.008,82,0.006,106,1.355,142,2.304,144,2.489,145,2.877,146,3.541,147,3.541,148,3.285,149,3.48,150,3.814,156,4.247,157,3.408,158,2.877,329,5.386,527,4.9,992,5.649,993,5.649,994,5.649,995,6.4,996,6.4]],["title/modules/MongoMemoryDatabaseModule.html",[142,1.272,997,3.393]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.14,3,0.181,4,0.149,5,0.109,12,1.089,18,1.168,21,0.623,23,0.765,24,0.009,25,0.532,26,0.463,27,0.594,34,0.904,51,0.348,55,1.618,56,1.521,61,0.28,63,1.56,71,3.037,80,0.004,81,0.006,82,0.004,87,1.883,91,1.064,103,1.407,106,0.969,132,1.67,139,1.486,142,2.11,144,1.78,149,1.938,150,2.124,160,2.437,190,2.277,207,2.059,223,2.521,243,3.687,323,2.269,372,2.875,506,2.755,513,2.969,517,3.299,525,4.111,526,3.158,541,3.037,635,2.058,639,2.058,644,2.886,648,4.111,744,2.886,802,3.037,988,2.755,997,5.253,998,5.253,999,5.594,1000,5.253,1001,3.423,1002,4.577,1003,6.196,1004,7.024,1005,4.577,1006,4.746,1007,6.942,1008,7.864,1009,4.577,1010,5.469,1011,6.063,1012,6.2,1013,3.687,1014,6.2,1015,7.317,1016,2.886,1017,3.687,1018,4.041,1019,5.469,1020,4.991,1021,5.253,1022,4.041,1023,4.429,1024,3.687,1025,3.037,1026,3.212,1027,3.423,1028,3.687,1029,3.212,1030,4.041,1031,3.423,1032,5.469,1033,4.041,1034,4.041,1035,4.041,1036,3.037,1037,4.041,1038,3.037,1039,4.041,1040,4.041,1041,4.041,1042,4.577,1043,3.037,1044,4.577,1045,4.577,1046,4.991,1047,3.212,1048,3.423,1049,3.212,1050,3.423,1051,4.577,1052,4.577,1053,4.577]],["title/classes/News.html",[0,0.139,363,1.587]],["body/classes/News.html",[0,0.195,2,0.625,3,0.125,4,0.222,5,0.075,7,2.054,8,3.057,9,0.254,10,0.795,12,0.753,14,1.851,15,2.015,16,1.286,17,2.076,18,0.808,21,0.866,23,0.795,24,0.009,25,0.74,26,0.523,27,1.033,28,2.267,29,2.105,30,2.9,32,1.494,33,1.723,34,1.347,39,1.154,41,1.231,42,1.302,43,2.693,44,1.626,45,1.626,46,1.302,47,1.626,48,1.57,49,1.266,50,1.626,51,0.329,52,1.112,54,3.266,55,0.827,56,1.052,57,0.789,61,0.254,62,1.136,64,2,66,4.473,70,1.469,76,2.741,80,0.003,81,0.005,82,0.003,90,2.864,91,1.107,103,0.719,139,0.625,197,2.211,198,3.241,199,3.551,201,2.108,218,1.518,222,2.101,238,2.654,251,2.654,268,2.744,287,2.101,290,0.596,351,2.634,354,2.36,356,3.153,361,1.752,362,2.101,363,3.057,364,3.374,365,3.221,366,3.501,367,3.153,368,4.464,369,2.786,370,4.22,371,4.011,372,2.654,373,3.56,374,4.708,377,3.158,378,3.632,379,3.607,380,3.158,383,3.341,384,4.22,385,3.341,386,3.158,387,2.282,388,3.002,389,3.341,392,3.387,393,2.14,395,3.165,396,3.443,400,3.002,402,3.002,404,3.341,410,3.341,412,1.469,413,3.52,414,2.222,415,2.634,416,1.752,417,2.222,418,1.57,419,2.222,420,2.222,421,2.222,422,2.222,423,2.222,424,1.997,425,2.222,426,2.222,427,3.341,428,2.654,429,2.741,430,2.654,431,2.572,432,2.654,433,3.443,434,3.046,435,2.222,436,3.341,437,2.222,438,2.222,439,4.014,440,1.825,441,1.825,1054,4.76,1055,3.167,1056,3.167,1057,3.167,1058,3.167,1059,3.167,1060,3.167,1061,3.167,1062,3.167,1063,3.167,1064,3.167,1065,3.167,1066,3.167]],["title/controllers/NewsController.html",[493,1.979,1067,3.393]],["body/controllers/NewsController.html",[0,0.115,3,0.148,4,0.122,5,0.089,9,0.301,12,1.642,16,1.09,21,0.735,23,1.222,24,0.009,25,0.85,26,0.45,27,0.948,29,1.822,34,0.741,39,1.117,51,0.367,52,0.879,61,0.14,80,0.004,81,0.005,82,0.004,87,1.543,91,1.254,103,1.661,106,0.795,132,1.814,139,1.444,173,1.798,190,2.815,205,2.502,207,2.757,220,1.687,221,3.108,223,2.624,311,4.033,363,2.901,369,2.097,387,2.585,461,4.579,464,3.639,486,1.798,493,1.637,609,3.13,625,2.366,643,4.582,647,3.362,747,2.985,782,3.023,829,4.485,942,2.259,1067,4.033,1068,3.313,1069,3.023,1070,4.844,1071,4.722,1072,6.314,1073,4.431,1074,3.753,1075,4.722,1076,3.753,1077,5.085,1078,3.753,1079,5.394,1080,3.753,1081,7.613,1082,3.313,1083,4.844,1084,4.154,1085,4.579,1086,3.753,1087,3.753,1088,5.394,1089,3.753,1090,4.761,1091,4.154,1092,5.394,1093,3.401,1094,4.761,1095,3.753,1096,4.844,1097,5.394,1098,3.753,1099,4.722,1100,3.313,1101,3.023,1102,5.131,1103,3.753,1104,3.753,1105,2.49,1106,3.313,1107,3.981,1108,3.313,1109,2.633,1110,3.023,1111,2.49,1112,2.633,1113,2.806,1114,3.753,1115,3.753,1116,3.023,1117,3.753,1118,3.313,1119,3.313,1120,6.455,1121,3.313,1122,3.313,1123,6.093,1124,3.023,1125,4.033,1126,3.753,1127,3.753,1128,3.753,1129,3.753,1130,3.753,1131,2.806,1132,3.023,1133,3.753,1134,6.314,1135,3.753,1136,3.753,1137,3.753,1138,5.394,1139,3.753]],["title/classes/NewsFilterQuery.html",[0,0.139,1083,3.184]],["body/classes/NewsFilterQuery.html",[0,0.211,2,1.058,3,0.212,4,0.175,5,0.127,9,0.43,10,1.149,16,1.39,21,0.763,24,0.009,26,0.467,27,1.099,29,1.892,39,1.094,51,0.354,52,0.874,61,0.199,68,4.819,80,0.005,81,0.007,82,0.005,120,2.971,132,1.189,198,3.611,200,4.375,205,3.19,218,3.638,363,2.963,364,3.39,476,4.825,477,4.825,480,5.327,481,5.538,482,3.963,486,2.569,488,5.538,489,3.089,490,3.762,491,3.762,492,3.38,827,4.787,828,3.963,1083,4.825,1140,6.45,1141,4.318,1142,5.36,1143,5.538,1144,6.069,1145,5.36,1146,5.36,1147,5.36,1148,5.36,1149,6.069,1150,6.876,1151,4.825,1152,5.36,1153,5.988,1154,6.876,1155,5.36,1156,6.876,1157,7.068,1158,5.538,1159,5.36,1160,5.36]],["title/classes/NewsMapper.html",[0,0.139,1113,3.393]],["body/classes/NewsMapper.html",[0,0.14,2,0.904,3,0.181,4,0.149,5,0.109,9,0.367,12,1.089,21,0.757,23,1.258,24,0.009,25,0.875,26,0.463,27,0.976,34,0.904,51,0.333,52,0.746,61,0.17,80,0.004,81,0.006,82,0.004,90,2.477,91,1.44,103,1.709,132,1.67,139,1.486,198,2.702,199,3.481,200,3.571,363,2.75,364,1.938,365,2.786,367,3.071,369,1.78,372,4.075,461,4.993,464,3.912,609,3.071,643,3.729,815,4.66,824,4.929,826,4.993,827,2.886,1083,5.282,1096,5.282,1112,5.282,1113,4.634,1161,4.041,1162,6.196,1163,6.196,1164,4.348,1165,6.196,1166,6.196,1167,4.577,1168,6.196,1169,4.577,1170,6.196,1171,4.577,1172,6.196,1173,4.577,1174,2.886,1175,3.423,1176,6.196,1177,3.423,1178,3.212,1179,4.041,1180,4.577,1181,4.577,1182,4.577,1183,4.577,1184,4.577,1185,4.041,1186,4.577,1187,4.577,1188,4.577,1189,4.577,1190,4.577,1191,4.577,1192,4.577,1193,4.041,1194,4.577,1195,4.577,1196,4.577,1197,4.577,1198,4.577,1199,4.577,1200,4.577,1201,3.687,1202,4.577,1203,3.687,1204,4.577,1205,4.041,1206,4.041,1207,6.196,1208,4.577,1209,4.577,1210,4.577,1211,4.577,1212,6.196,1213,6.196,1214,6.196,1215,4.577,1216,4.577]],["title/modules/NewsModule.html",[142,1.272,1217,3.393]],["body/modules/NewsModule.html",[0,0.171,3,0.221,4,0.182,5,0.133,24,0.009,51,0.379,61,0.208,80,0.005,81,0.007,82,0.005,106,1.182,142,2.168,144,2.171,145,2.51,146,3.089,147,3.089,148,2.866,149,3.275,150,3.589,156,3.904,157,2.972,158,2.51,160,3.757,173,3.381,174,5.68,249,2.767,329,5.153,790,3.703,1047,3.917,1067,6.078,1073,3.917,1107,5.703,1108,4.928,1217,6.793,1218,4.928,1219,4.928,1220,4.928,1221,5.582,1222,5.399,1223,5.582,1224,4.928,1225,5.582,1226,5.582,1227,4.928,1228,5.582,1229,3.917,1230,3.703,1231,6.228,1232,5.582,1233,5.582,1234,5.582,1235,3.703]],["title/injectables/NewsRepo.html",[187,1.007,1222,2.861]],["body/injectables/NewsRepo.html",[0,0.129,3,0.166,4,0.137,5,0.1,9,0.337,16,1.18,18,1.071,21,0.794,23,1.319,24,0.009,25,0.918,26,0.486,27,1.024,32,1.097,33,1.265,34,0.829,51,0.358,52,0.685,55,1.097,57,1.047,61,0.156,63,1.431,80,0.004,81,0.006,82,0.004,87,1.727,91,1.357,103,1.732,106,0.889,132,1.693,139,1.433,187,1.296,188,1.679,190,2.862,197,2.353,207,2.824,220,1.888,221,3.87,223,2.834,242,2.156,297,4.368,363,3.129,364,1.778,366,2.998,369,2.822,371,3.683,466,3.11,526,3.019,551,2.42,606,4.712,609,2.895,639,2.626,647,3.11,827,4.577,828,3.87,869,5.108,1070,4.098,1071,5.021,1084,5.049,1093,3.683,1094,5.155,1124,4.704,1125,4.367,1222,3.683,1236,3.707,1237,5.84,1238,5.84,1239,4.704,1240,2.947,1241,4.2,1242,3.683,1243,5.84,1244,4.2,1245,4.2,1246,4.815,1247,4.2,1248,5.84,1249,4.2,1250,5.84,1251,4.2,1252,5.84,1253,5.155,1254,5.84,1255,4.098,1256,5.84,1257,4.2,1258,2.786,1259,3.141,1260,4.098,1261,4.2,1262,4.2,1263,4.2,1264,4.2,1265,4.2,1266,4.2,1267,5.84,1268,4.2,1269,4.2,1270,4.2,1271,4.2,1272,4.2,1273,4.2]],["title/classes/NewsResponse.html",[0,0.139,1112,3.184]],["body/classes/NewsResponse.html",[0,0.114,2,0.734,3,0.147,4,0.261,5,0.088,9,0.298,10,0.895,12,1.861,15,2.659,16,1.581,17,2.739,21,0.866,24,0.009,26,0.542,27,0.984,28,2.522,29,2.147,39,1.192,51,0.304,52,1.462,61,0.138,68,4.136,80,0.004,81,0.005,82,0.004,90,2.912,120,3.176,132,1.393,198,2.739,200,3.619,201,2.684,205,2.485,211,4.006,218,3.01,363,3.127,364,2.909,365,3.275,366,3.224,367,3.113,369,2.951,370,4.166,371,3.96,395,2.057,396,2.237,400,4.333,470,4.315,471,3.087,472,4.315,473,4.006,476,4.823,477,4.823,480,4.407,481,4.315,482,3.087,485,4.882,486,1.781,490,2.608,491,4.407,492,3.96,792,4.315,979,3.378,1073,3.759,1112,3.759,1153,5.139,1274,2.779,1275,6.568,1276,3.717,1277,6.066,1278,3.717,1279,5.112,1280,3.717,1281,3.717,1282,3.717,1283,4.006,1284,3.717,1285,4.407,1286,4.728,1287,3.717,1288,5.543,1289,3.717,1290,5.058,1291,3.717,1292,5.356,1293,3.717,1294,2.994,1295,3.717,1296,3.717,1297,3.717,1298,3.717,1299,3.717,1300,4.006,1301,3.717,1302,5.356,1303,3.717,1304,3.717]],["title/classes/NewsScope.html",[0,0.139,1260,3.184]],["body/classes/NewsScope.html",[0,0.146,2,0.938,3,0.188,4,0.155,5,0.113,9,0.381,10,1.062,21,0.801,23,1.196,24,0.009,25,0.832,26,0.47,27,0.928,28,1.58,32,1.241,33,1.431,34,0.938,51,0.338,52,0.775,55,1.241,56,1.58,61,0.177,80,0.006,81,0.006,82,0.005,91,1.477,103,1.626,132,1.588,139,1.573,198,2.073,203,2.63,323,3.15,363,2.222,364,2.012,367,2.356,526,3.685,543,5.024,551,2.739,606,3.335,609,4.215,613,4.195,696,3.153,827,4.007,828,4.126,1246,5.07,1260,5.752,1305,6.602,1306,4.195,1307,7.159,1308,6.355,1309,6.355,1310,6.355,1311,5.609,1312,8.504,1313,4.753,1314,6.355,1315,4.753,1316,6.355,1317,4.753,1318,6.355,1319,4.753,1320,4.753,1321,4.753,1322,5.119,1323,4.753,1324,6.355,1325,4.007,1326,4.753,1327,4.753,1328,4.216,1329,4.753,1330,4.753,1331,4.753,1332,6.355,1333,4.753,1334,4.753,1335,3.153,1336,4.753,1337,4.753,1338,6.355,1339,4.753,1340,4.753,1341,4.753]],["title/interfaces/NewsTargetFilter.html",[290,0.855,1246,3.01]],["body/interfaces/NewsTargetFilter.html",[3,0.26,4,0.215,5,0.156,9,0.528,10,1.305,24,0.009,26,0.48,51,0.345,52,1.075,57,1.642,61,0.245,80,0.006,81,0.008,82,0.006,197,2.79,198,3.753,199,4.266,290,1.241,292,2.494,364,2.79,612,6.933,1246,5.181,1305,5.308,1342,5.817]],["title/injectables/NewsUc.html",[187,1.007,1107,2.861]],["body/injectables/NewsUc.html",[0,0.077,3,0.1,4,0.082,5,0.06,9,0.203,12,1.343,16,1.514,18,0.645,21,0.753,23,1.252,24,0.009,25,0.871,26,0.47,27,0.972,28,1.65,32,0.66,33,1.495,34,0.499,39,0.678,49,1.984,51,0.314,52,0.412,57,0.63,61,0.094,80,0.002,81,0.004,82,0.002,91,0.93,103,1.815,106,0.535,120,0.907,132,1.827,139,1.479,180,4.123,187,0.887,188,1.01,190,2.783,197,2.889,198,3.267,199,2.798,200,3.949,201,2.907,205,1.172,206,4.609,207,2.656,218,1.211,220,1.136,221,4.605,223,3.036,323,1.253,356,1.982,363,3.048,364,2.769,366,1.297,367,1.982,369,0.983,372,2.303,387,3.405,388,2.522,393,2.765,428,1.172,429,1.211,430,1.172,431,1.136,482,1.456,490,1.773,526,3.593,527,3.648,540,2.231,551,1.456,574,3.531,583,3.531,606,4.808,612,3.222,616,2.036,639,1.798,643,4.402,644,2.522,647,3.783,747,2.213,805,1.456,812,1.456,815,3.744,824,3.961,826,4.545,827,3.878,828,2.861,834,2.213,869,3.559,907,2.053,979,1.593,1070,2.807,1073,3.483,1084,3.701,1107,2.522,1124,3.222,1151,3.483,1179,2.231,1185,2.231,1193,4.982,1206,3.531,1222,4.124,1224,2.231,1246,2.653,1258,1.676,1259,1.89,1343,2.036,1344,4,1345,4,1346,4,1347,4,1348,4.964,1349,2.527,1350,2.527,1351,4,1352,2.527,1353,4,1354,2.527,1355,4,1356,2.527,1357,4,1358,2.527,1359,4,1360,2.527,1361,2.527,1362,4,1363,2.527,1364,2.807,1365,2.527,1366,4.964,1367,2.527,1368,4,1369,2.527,1370,2.527,1371,2.527,1372,3.222,1373,4.546,1374,2.527,1375,2.231,1376,2.527,1377,5.644,1378,2.527,1379,2.527,1380,4,1381,2.527,1382,4.982,1383,2.527,1384,2.527,1385,2.527,1386,4,1387,2.527,1388,3.222,1389,2.527,1390,4,1391,2.527,1392,2.527,1393,1.398,1394,4.964,1395,2.527,1396,4,1397,2.527,1398,2.527,1399,5.644,1400,2.527,1401,2.231,1402,2.036,1403,2.527,1404,2.527,1405,2.527,1406,2.527,1407,2.231,1408,4,1409,2.527,1410,2.527,1411,2.527,1412,4,1413,2.527,1414,2.527,1415,2.527,1416,2.527,1417,2.527]],["title/classes/PaginationQuery.html",[0,0.139,1085,3.01]],["body/classes/PaginationQuery.html",[0,0.223,2,1.158,3,0.232,4,0.191,5,0.139,9,0.471,10,1.216,21,0.732,24,0.009,26,0.448,27,1.073,29,1.814,32,1.901,33,2.192,51,0.322,61,0.218,80,0.006,81,0.007,82,0.006,97,3.281,120,2.612,323,3.608,486,2.812,489,3.381,808,5.863,871,5.644,872,5.25,1085,4.829,1153,5.918,1253,6.425,1325,4.59,1418,5.179,1419,6.188,1420,5.867,1421,3.608,1422,6.425,1423,7.279,1424,7.279,1425,7.279,1426,5.867,1427,5.867,1428,6.425,1429,5.867,1430,7.913,1431,5.179,1432,5.867,1433,5.867,1434,5.867,1435,5.867]],["title/classes/PaginationResponse.html",[0,0.139,1105,3.01]],["body/classes/PaginationResponse.html",[0,0.173,2,1.114,3,0.223,4,0.184,5,0.134,9,0.453,10,1.187,18,1.44,21,0.846,23,0.943,24,0.009,25,0.656,26,0.517,27,1.091,29,2.034,51,0.25,61,0.21,80,0.006,81,0.007,82,0.006,97,3.466,485,5.126,486,2.705,644,4.48,692,6.774,794,4.169,871,5.782,872,5.782,1105,4.713,1436,4.981,1437,5.782,1438,7.104,1439,5.643,1440,5.643,1441,5.643,1442,5.643,1443,5.643,1444,5.643,1445,5.643,1446,5.643,1447,5.643]],["title/injectables/ParseObjectIdPipe.html",[187,1.007,1102,3.184]],["body/injectables/ParseObjectIdPipe.html",[0,0.19,3,0.245,4,0.202,5,0.147,9,0.498,21,0.624,23,1.037,24,0.009,25,0.722,26,0.382,27,0.805,33,2.269,34,1.226,39,1.182,41,2.93,51,0.359,55,1.621,57,1.547,61,0.231,80,0.006,81,0.007,82,0.006,91,1.751,103,1.41,106,1.315,132,1.377,139,1.226,187,1.672,188,2.482,197,2.012,233,3.736,242,3.187,541,4.118,795,4.999,1102,5.288,1448,6.652,1449,4.17,1450,5,1451,7.535,1452,6.208,1453,7.535,1454,6.208,1455,7.535,1456,6.208,1457,6.208]],["title/classes/ResolvedUser.html",[0,0.139,835,2.416]],["body/classes/ResolvedUser.html",[0,0.165,2,1.064,3,0.213,4,0.176,5,0.128,9,0.432,10,1.153,15,3.221,16,1.622,17,3.318,21,0.878,24,0.009,25,0.627,26,0.543,28,2.666,29,2.177,39,1.23,51,0.238,61,0.257,80,0.005,81,0.007,82,0.005,110,3.102,120,1.934,201,2.804,393,3.421,444,2.758,464,3.201,466,3.673,485,5.282,486,2.582,833,3.647,835,3.673,889,5.048,890,5.048,1458,4.34,1459,5.557,1460,3.817,1461,5.388,1462,5.388,1463,5.388,1464,5.388,1465,5.388,1466,6.717,1467,5.388,1468,5.388,1469,5.388]],["title/classes/ResolvedUserMapper.html",[0,0.139,1470,3.393]],["body/classes/ResolvedUserMapper.html",[0,0.177,2,1.139,3,0.228,4,0.188,5,0.137,9,0.463,12,2.014,16,1.166,21,0.58,23,0.964,24,0.009,25,0.837,26,0.355,27,0.748,32,1.507,33,1.738,34,1.139,39,1.073,51,0.318,52,0.941,61,0.215,80,0.006,81,0.007,82,0.006,91,1.674,103,1.31,132,1.28,139,1.139,201,3.03,298,3.698,372,3.644,464,3.342,833,3.764,835,4.379,1164,5.055,1174,3.638,1178,4.049,1201,4.647,1203,4.647,1205,5.093,1470,5.386,1471,5.093,1472,7.203,1473,5.769,1474,4.647,1475,5.093,1476,5.769,1477,5.093,1478,5.769,1479,5.769,1480,5.769,1481,5.769,1482,5.769,1483,5.769,1484,5.093,1485,5.769,1486,5.093]],["title/classes/Role.html",[0,0.139,298,2.04]],["body/classes/Role.html",[0,0.143,2,0.92,3,0.184,4,0.152,5,0.111,7,1.889,8,3.425,9,0.568,10,1.048,14,2.439,15,2.655,16,1.268,17,2.735,18,1.189,21,0.851,23,0.779,24,0.009,25,0.948,26,0.521,27,0.604,28,2.084,29,2.076,30,2.839,32,1.98,33,2.283,34,1.497,35,3.954,39,1.157,41,1.812,42,1.916,43,3.21,44,2.392,45,2.392,46,1.916,47,2.392,48,2.31,49,1.863,50,2.392,51,0.277,52,1.023,53,2.938,55,1.217,56,1.549,57,1.161,59,2.162,61,0.264,62,1.672,63,1.588,70,2.162,76,2.233,80,0.005,81,0.006,82,0.005,197,2.458,201,2.915,290,0.878,298,3.409,309,2.805,354,3.108,356,2.31,360,3.27,387,2.233,489,2.686,491,4.401,564,3.954,726,2.938,803,3.27,833,4.191,873,5.67,874,3.485,875,3.485,876,4.114,877,3.485,878,3.092,879,3.754,880,3.754,881,4.114,882,4.114,883,4.114,884,4.114,885,4.69,1487,6.271,1488,4.114,1489,4.66,1490,4.66,1491,4.66]],["title/classes/RoleCache.html",[0,0.139,303,3.184]],["body/classes/RoleCache.html",[0,0.146,2,0.941,3,0.188,4,0.156,5,0.113,9,0.382,10,1.064,16,0.964,18,1.216,21,0.842,23,1.198,24,0.009,25,1.012,26,0.49,27,0.93,33,1.436,39,1.19,49,2.546,51,0.338,52,0.777,55,1.245,57,1.188,61,0.177,63,1.625,80,0.005,81,0.006,82,0.005,91,1.48,97,1.804,103,1.628,106,1.01,132,1.698,139,1.574,187,1.058,190,2.064,197,2.324,201,1.756,207,2.116,223,2.573,242,2.447,290,0.898,291,5.032,293,3.565,297,2.869,298,4.092,299,3.84,300,3.346,301,3.565,302,3.84,303,4.469,304,5.775,305,5.775,306,3.84,307,5.129,308,3.84,309,2.869,310,5.129,311,4.762,312,3.84,313,3.84,314,5.129,315,5.129,316,3.84,317,3.565,318,5.129,319,3.84,320,3.84,321,5.129,322,3.84,323,2.363,696,4.224,1492,3.391,1493,6.329,1494,6.368,1495,4.767,1496,4.767,1497,4.767,1498,4.767,1499,6.368,1500,4.767,1501,4.767]],["title/injectables/RoleRepo.html",[187,1.007,1502,3.01]],["body/injectables/RoleRepo.html",[0,0.145,3,0.187,4,0.154,5,0.112,9,0.379,10,1.057,16,1.443,18,1.205,21,0.823,23,1.274,24,0.009,25,1,26,0.503,27,0.989,33,1.423,39,1.087,49,1.889,51,0.337,52,0.77,55,1.234,57,1.177,61,0.176,63,1.61,80,0.005,81,0.006,82,0.005,91,1.471,97,1.788,103,1.621,106,1,132,1.692,139,1.569,187,1.048,188,1.889,190,2.753,197,2.709,201,1.74,207,2.642,223,2.561,242,2.425,290,0.89,291,4.441,293,3.533,297,4.295,298,4.014,299,3.805,300,3.315,301,3.533,302,3.805,303,5.008,304,3.805,305,3.805,306,3.805,307,3.805,308,3.805,309,2.843,310,3.805,311,4.733,312,3.805,313,3.805,314,5.098,315,5.098,316,3.805,317,4.733,318,5.098,319,3.805,320,5.098,321,5.098,322,3.805,323,2.341,1240,3.315,1242,2.979,1502,3.134,1503,6.329,1504,6.329,1505,5.587,1506,6.329,1507,6.329,1508,6.329,1509,4.724,1510,4.724,1511,4.724,1512,4.724,1513,4.724]],["title/injectables/RoleUC.html",[187,1.007,1514,3.01]],["body/injectables/RoleUC.html",[0,0.179,3,0.231,4,0.191,5,0.139,9,0.469,18,1.491,21,0.73,23,1.213,24,0.009,25,0.844,26,0.447,27,0.942,34,1.154,39,0.799,51,0.365,52,0.953,57,1.457,61,0.217,80,0.006,81,0.007,82,0.006,87,2.404,91,1.688,103,1.327,106,1.238,132,1.297,139,1.154,187,1.611,188,2.337,190,2.561,197,2.679,201,3.131,207,2.413,214,4.102,220,2.628,223,2.098,833,3.48,875,4.371,1502,5.746,1514,4.818,1515,5.16,1516,7.262,1517,5.845,1518,5.845,1519,7.262,1520,5.845,1521,3.369,1522,5.845,1523,5.845,1524,5.845,1525,5.845,1526,5.845]],["title/classes/SchoolInfo.html",[0,0.139,392,2.416]],["body/classes/SchoolInfo.html",[0,0.181,2,1.165,3,0.233,4,0.192,5,0.14,7,2.2,9,0.473,10,1.22,14,2.84,16,1.476,18,1.505,21,0.834,23,0.986,24,0.009,25,0.991,26,0.534,27,0.765,29,1.977,30,2.704,39,1.133,41,2.294,42,2.427,43,3.092,46,2.427,51,0.323,52,1.191,55,1.541,56,1.961,57,1.471,59,2.738,61,0.219,62,2.118,80,0.006,81,0.007,82,0.006,238,3.953,295,4.21,309,3.551,353,3.265,354,3.621,355,5.126,356,2.925,357,4.141,358,4.141,360,4.141,392,3.889,820,3.915,1527,7.003]],["title/classes/SchoolInfoMapper.html",[0,0.139,1175,3.393]],["body/classes/SchoolInfoMapper.html",[0,0.194,2,1.251,3,0.25,4,0.207,5,0.15,9,0.508,21,0.637,23,1.058,24,0.009,25,0.737,26,0.39,27,0.821,34,1.251,51,0.337,52,1.033,61,0.236,80,0.006,81,0.007,82,0.006,91,1.773,103,1.439,132,1.405,139,1.251,372,3.797,392,4.629,464,3.539,1164,5.353,1174,3.994,1175,5.704,1178,4.445,1285,5.962,1528,6.733,1529,5.102,1530,7.628,1531,5.592,1532,6.334,1533,5.592,1534,6.334]],["title/classes/SchoolInfoResponse.html",[0,0.139,1285,3.184]],["body/classes/SchoolInfoResponse.html",[0,0.191,2,1.233,3,0.247,4,0.204,5,0.148,9,0.501,10,1.264,16,1.75,21,0.76,24,0.009,25,1.007,26,0.465,29,1.885,39,1.156,51,0.276,52,1.379,61,0.232,80,0.006,81,0.007,82,0.006,120,2.919,369,3.288,476,5.307,477,5.307,485,4.688,486,2.993,492,3.938,1275,5.031,1285,5.307,1294,5.031,1535,7.181,1536,5.031,1537,5.513,1538,5.513]],["title/classes/SchoolNews.html",[0,0.139,440,2.615]],["body/classes/SchoolNews.html",[0,0.188,2,0.58,3,0.116,4,0.215,5,0.07,7,1.987,8,2.862,9,0.235,10,0.751,12,0.698,14,2.38,15,2.591,16,1.406,17,2.669,21,0.874,23,0.491,24,0.009,25,0.635,26,0.524,27,0.993,28,2.407,29,2.146,30,2.883,32,1.723,33,1.987,34,1.43,39,1.148,41,1.748,42,1.849,43,3.663,44,1.507,45,1.507,46,1.849,47,1.507,48,2.228,49,1.797,50,1.507,51,0.32,52,1.076,54,3.142,55,0.767,56,0.976,57,0.732,61,0.245,62,1.054,64,1.91,66,3.97,70,1.362,76,2.618,80,0.003,81,0.004,82,0.003,90,2.782,91,1.045,103,0.667,139,0.58,197,2.138,198,3.158,199,3.449,201,2.012,218,1.407,222,1.948,238,2.534,251,2.534,268,2.591,287,1.948,290,0.553,351,2.487,354,1.455,356,2.707,361,1.625,362,1.948,363,3.163,364,3.413,365,3.129,366,3.386,367,3.033,368,4.295,369,2.706,370,4.06,371,3.859,372,2.534,373,3.361,374,4.703,376,2.365,377,2.982,378,3.513,379,3.444,380,2.982,381,2.365,382,2.365,383,3.154,384,4.06,385,3.154,386,2.982,387,2.154,388,2.834,389,3.154,390,2.365,391,2.365,392,3.513,393,2.021,394,2.365,395,3.022,396,3.287,397,2.365,398,2.365,399,2.365,400,2.834,401,2.365,402,2.834,403,2.365,404,3.154,405,2.365,406,2.365,407,2.365,408,2.365,409,2.365,410,3.154,411,2.365,412,1.362,413,3.386,414,2.06,415,2.487,416,1.625,417,2.06,418,1.455,419,2.06,420,2.06,421,2.06,422,2.06,423,2.06,424,1.851,425,2.06,426,2.06,427,3.154,428,2.534,429,2.618,430,2.534,431,2.456,432,2.534,433,3.287,434,2.908,435,2.06,436,3.154,437,2.06,438,2.06,439,3.833,440,2.591,441,1.692,1539,2.936]],["title/controllers/ServerController.html",[493,1.979,1540,3.393]],["body/controllers/ServerController.html",[0,0.199,3,0.257,4,0.212,5,0.155,9,0.522,21,0.654,24,0.009,29,1.622,32,2.024,39,1.06,51,0.288,61,0.242,80,0.006,81,0.008,82,0.006,91,1.802,103,1.478,106,1.378,110,2.926,139,1.285,173,3.119,493,3.38,497,7.566,499,5.44,500,3.842,501,5.44,502,4.127,512,4.866,513,3.119,1540,5.797,1541,5.744,1542,6.507]],["title/modules/ServerModule.html",[142,1.272,1543,3.184]],["body/modules/ServerModule.html",[0,0.147,1,3.685,3,0.19,4,0.156,5,0.114,12,1.711,24,0.009,26,0.295,34,0.947,39,0.656,51,0.391,55,1.67,56,1.594,61,0.178,63,1.635,65,2.462,69,2.554,71,3.182,80,0.005,81,0.006,82,0.005,106,1.016,132,1.596,139,0.947,142,2.016,143,5.767,144,1.865,145,2.157,146,2.654,147,2.654,148,2.462,149,2.031,150,2.226,154,5.452,156,3.538,157,2.554,158,2.157,160,3.405,173,3.064,298,2.875,324,5.767,351,3.538,361,3.538,363,2.236,378,3.405,392,3.405,415,3.538,428,2.226,429,2.299,430,2.226,431,2.157,432,2.226,440,3.685,441,3.685,442,3.848,444,2.556,453,3.848,591,4.234,668,4.242,676,5.644,677,5.644,678,5.644,758,3.864,759,3.864,760,3.864,963,4.032,1006,4.032,1011,3.864,1013,3.864,1021,3.587,1023,4.032,1492,2.554,1540,5.378,1543,6.21,1544,4.234,1545,4.234,1546,5.767,1547,3.864,1548,6.394,1549,6.394,1550,4.797,1551,4.797,1552,3.182,1553,4.797,1554,4.797,1555,4.797,1556,4.797,1557,3.685,1558,4.797,1559,4.797,1560,5.15,1561,5.15,1562,5.15,1563,4.234,1564,3.182,1565,4.797,1566,4.797,1567,6.394,1568,4.797,1569,3.864,1570,3.366]],["title/classes/Submission.html",[0,0.139,1557,2.615]],["body/classes/Submission.html",[0,0.138,2,0.888,3,0.178,4,0.147,5,0.145,7,1.844,8,3.394,9,0.361,10,1.023,12,1.07,14,2.381,15,2.592,16,1.238,17,2.67,18,1.148,19,4.062,20,4.162,21,0.881,23,0.752,24,0.009,25,0.523,26,0.539,27,0.583,28,2.035,29,2.166,30,2.862,32,1.951,33,2.25,34,1.592,35,4.712,36,4.932,39,1.068,41,1.749,42,1.85,43,3.163,44,2.309,45,2.309,46,1.85,47,2.309,48,2.229,49,1.798,50,2.309,51,0.346,52,0.998,53,4.389,54,2.309,55,1.175,56,1.495,57,1.121,59,2.087,61,0.167,62,1.614,70,2.087,76,3.581,80,0.004,81,0.006,82,0.004,97,2.317,374,4.189,379,3.861,413,3.388,444,3.357,453,4.189,668,5.186,1557,3.529,1571,3.97,1572,6.961,1573,6.145,1574,6.961,1575,7.817,1576,5.244,1577,6.961,1578,4.498,1579,4.498,1580,4.498,1581,4.498,1582,4.498,1583,6.123,1584,4.498,1585,6.123,1586,4.498,1587,6.123,1588,4.498,1589,4.498,1590,3.364,1591,5.405,1592,3.623]],["title/injectables/SubmissionRepo.html",[187,1.007,1593,3.01]],["body/injectables/SubmissionRepo.html",[0,0.171,3,0.221,4,0.182,5,0.133,9,0.448,18,1.424,21,0.778,23,1.293,24,0.009,25,0.899,26,0.476,27,1.003,51,0.359,52,0.91,55,1.458,57,1.391,61,0.208,80,0.005,81,0.007,82,0.005,87,2.296,91,1.64,103,1.602,106,1.182,132,1.565,139,1.393,187,1.565,188,2.232,190,2.775,207,2.701,220,2.51,223,2.532,242,2.866,297,4.892,444,3.575,1125,6.078,1240,3.917,1242,4.449,1258,3.703,1557,3.217,1590,6.078,1593,4.681,1594,4.928,1595,7.055,1596,7.055,1597,5.582,1598,7.055,1599,5.582,1600,7.055,1601,5.582,1602,4.449,1603,7.055]],["title/classes/Task.html",[0,0.139,444,1.814]],["body/classes/Task.html",[0,0.152,2,0.977,3,0.196,4,0.161,5,0.118,7,1.966,8,3.477,9,0.397,10,1.091,14,2.539,15,2.764,16,1.32,17,2.847,18,1.263,19,4.331,20,4.299,21,0.881,23,0.827,24,0.009,25,0.903,26,0.528,27,1.096,28,2.581,29,2.164,30,2.925,32,1.705,33,1.966,34,1.289,39,0.998,41,1.925,42,2.036,43,3.288,44,2.541,45,2.541,46,2.036,47,2.541,48,2.454,49,1.979,50,2.541,51,0.343,52,1.064,55,1.293,56,1.645,57,1.234,59,2.297,61,0.184,62,1.776,70,2.297,76,3.129,80,0.005,81,0.006,82,0.005,374,4.396,379,4.117,412,3.603,413,3.612,442,4.396,444,3.105,526,3.284,828,3.762,963,4.606,966,5.763,1604,4.37,1605,5.884,1606,6.256,1607,4.95,1608,4.95,1609,4.95,1610,6.528,1611,4.95,1612,4.95,1613,4.95,1614,4.37]],["title/controllers/TaskController.html",[493,1.979,1615,3.393]],["body/controllers/TaskController.html",[0,0.161,3,0.207,4,0.171,5,0.125,9,0.42,21,0.527,23,0.876,24,0.009,25,0.61,26,0.322,27,0.879,29,1.307,34,1.035,51,0.388,61,0.195,63,1.787,80,0.007,81,0.007,82,0.005,87,2.156,91,1.575,103,1.191,106,1.11,132,1.824,139,1.035,173,2.513,190,2.435,207,2.253,220,2.357,223,2.432,444,2.096,464,2.432,486,2.513,493,2.286,609,3.936,809,3.306,812,3.021,829,4.076,871,4.497,872,4.497,942,3.155,1069,4.223,1071,5.617,1077,4.576,1082,4.628,1085,5.872,1091,3.155,1101,4.223,1105,3.478,1106,4.628,1109,3.679,1110,4.223,1111,3.478,1116,4.223,1131,3.921,1437,4.983,1449,2.901,1602,4.274,1615,5.069,1616,4.628,1617,6.778,1618,5.243,1619,5.243,1620,4.983,1621,4.628,1622,3.679,1623,4.628,1624,3.478,1625,3.921,1626,5.243,1627,4.628,1628,4.628,1629,3.306,1630,6.778,1631,5.243,1632,5.243,1633,5.243,1634,5.243,1635,5.243,1636,4.628,1637,4.628,1638,5.243]],["title/classes/TaskMapper.html",[0,0.139,1622,3.184]],["body/classes/TaskMapper.html",[0,0.183,2,1.181,3,0.236,4,0.195,5,0.142,9,0.48,21,0.601,23,0.999,24,0.009,25,0.695,26,0.368,27,0.776,34,1.181,51,0.326,52,0.975,61,0.222,80,0.006,81,0.007,82,0.006,91,1.712,103,1.358,132,1.327,139,1.181,372,3.703,444,3.42,450,5.508,464,3.417,644,3.771,1164,5.169,1174,3.771,1178,4.197,1201,4.817,1203,4.817,1533,5.279,1622,5.169,1624,5.526,1639,5.279,1640,7.365,1641,5.846,1642,6.71,1643,5.98,1644,5.98,1645,5.98,1646,5.98,1647,5.98,1648,5.98,1649,5.98,1650,5.98,1651,5.98,1652,5.98,1653,5.98,1654,5.98]],["title/modules/TaskModule.html",[142,1.272,1546,3.184]],["body/modules/TaskModule.html",[0,0.187,3,0.241,4,0.199,5,0.145,24,0.009,51,0.38,61,0.227,80,0.006,81,0.007,82,0.006,106,1.291,142,2.257,144,2.371,145,2.742,146,3.374,147,3.374,148,3.13,149,3.408,150,2.829,156,4.124,157,3.247,158,2.742,173,3.572,1546,6.363,1593,5.806,1615,6.02,1620,5.806,1621,5.383,1655,5.383,1656,5.383,1657,5.806,1658,6.098,1659,6.098,1660,5.383,1661,5.383]],["title/injectables/TaskRepo.html",[187,1.007,1657,3.01]],["body/injectables/TaskRepo.html",[0,0.107,3,0.138,4,0.114,5,0.083,9,0.281,12,0.833,15,1.483,16,0.708,18,0.894,21,0.672,23,1.117,24,0.009,25,0.777,26,0.411,27,0.867,28,1.164,32,1.34,33,1.545,34,0.692,49,2.051,51,0.329,52,0.571,55,1.34,56,1.164,57,0.873,61,0.13,63,2.784,64,1.225,65,1.798,80,0.003,81,0.005,82,0.003,87,1.441,91,1.193,103,1.379,106,0.742,132,1.783,139,1.32,187,1.138,188,1.4,190,2.604,197,2.647,206,4.089,207,2.471,220,1.575,223,2.756,242,1.798,297,4.022,363,1.225,412,3.449,418,2.543,442,2.108,444,2.672,446,2.458,447,3.092,448,2.821,500,1.736,526,2.307,551,3.499,609,3.009,611,2.957,616,5.384,869,4.843,871,4.434,872,4.434,959,4.54,963,2.209,965,3.837,974,2.458,978,2.209,1043,2.324,1084,3.088,1091,2.108,1125,3.837,1240,2.458,1242,3.235,1258,2.324,1259,2.619,1260,2.458,1283,2.619,1388,2.821,1437,3.404,1460,1.938,1492,1.865,1521,2.019,1557,2.019,1576,2.458,1602,2.209,1605,5.384,1606,5.384,1657,3.404,1662,3.092,1663,5.13,1664,6.071,1665,5.13,1666,3.503,1667,5.13,1668,3.503,1669,5.13,1670,3.503,1671,5.13,1672,3.503,1673,3.503,1674,4.54,1675,2.821,1676,7.875,1677,3.503,1678,3.092,1679,1.938,1680,3.503,1681,3.092,1682,2.619,1683,3.503,1684,2.458,1685,3.092,1686,3.092,1687,2.209,1688,2.324,1689,2.821,1690,3.503,1691,2.458,1692,2.458,1693,3.503,1694,5.13,1695,3.503,1696,5.13,1697,5.13,1698,4.529,1699,5.13,1700,3.503,1701,3.503,1702,5.13,1703,3.503,1704,2.821,1705,6.683,1706,5.13,1707,5.13,1708,2.324,1709,3.092,1710,3.503,1711,3.503,1712,5.13,1713,3.503,1714,3.092,1715,3.092,1716,3.503,1717,5.13,1718,5.13,1719,3.503,1720,2.821,1721,3.503,1722,5.13,1723,3.503]],["title/classes/TaskResponse.html",[0,0.139,1624,3.01]],["body/classes/TaskResponse.html",[0,0.163,2,1.053,3,0.211,4,0.174,5,0.127,9,0.428,10,1.145,15,3.206,16,1.531,17,3.302,21,0.876,24,0.009,25,0.88,26,0.541,27,1.13,28,2.812,29,2.172,39,1.191,51,0.236,61,0.198,80,0.005,81,0.007,82,0.005,97,2.865,110,3.081,120,1.914,295,3.073,444,2.74,464,3.179,466,3.649,485,5.276,486,2.556,1459,5.52,1460,3.792,1605,6.1,1624,4.546,1641,5.314,1724,4.707,1725,7.572,1726,7.572,1727,5.333,1728,5.333,1729,5.333,1730,5.333,1731,5.333,1732,5.333,1733,5.333,1734,5.333,1735,4.707,1736,4.707,1737,4.707]],["title/injectables/TaskUC.html",[187,1.007,1620,3.01]],["body/injectables/TaskUC.html",[0,0.115,3,0.148,4,0.122,5,0.089,9,0.301,10,0.9,12,0.892,18,0.956,21,0.735,23,1.153,24,0.009,25,0.802,26,0.424,27,0.895,32,0.979,33,1.129,34,1.246,39,0.512,51,0.361,52,0.611,57,0.934,61,0.139,63,2.735,80,0.004,81,0.005,82,0.004,91,1.253,103,1.433,106,0.794,122,3.976,132,1.914,139,1.584,187,1.196,188,1.498,190,2.649,197,2.542,201,2.325,206,3.36,207,2.529,217,4.341,220,1.685,223,2.623,233,2.256,253,2.256,323,1.858,444,2.922,446,2.63,471,2.16,526,1.685,551,3.106,829,3.541,833,1.796,869,5.23,878,2.487,907,2.766,942,2.256,1077,3.636,1084,5.152,1111,2.487,1174,2.363,1258,3.575,1259,2.803,1325,3.398,1437,5.049,1492,1.996,1521,2.16,1557,3.976,1590,2.803,1593,5.202,1602,4.609,1620,3.575,1622,2.63,1623,3.309,1624,2.487,1636,4.757,1637,4.757,1642,4.341,1657,5.049,1660,3.309,1661,3.309,1674,2.803,1675,3.019,1685,3.309,1686,3.309,1687,3.398,1735,3.309,1736,3.309,1737,3.309,1738,3.309,1739,6.31,1740,5.389,1741,5.389,1742,5.389,1743,3.748,1744,3.748,1745,5.389,1746,3.748,1747,5.389,1748,3.748,1749,5.389,1750,3.748,1751,3.748,1752,5.389,1753,3.748,1754,3.748,1755,3.748,1756,3.748,1757,3.748,1758,3.748,1759,3.748,1760,3.748,1761,3.748,1762,3.748,1763,3.748,1764,3.748,1765,3.748,1766,3.748,1767,5.389,1768,3.748,1769,3.748,1770,3.748,1771,2.803,1772,2.803,1773,3.309,1774,3.748,1775,3.748,1776,3.748,1777,6.899,1778,3.748,1779,3.748,1780,3.748,1781,5.389,1782,3.748,1783,3.748,1784,3.748]],["title/classes/TeamInfo.html",[0,0.139,415,2.511]],["body/classes/TeamInfo.html",[0,0.181,2,1.165,3,0.233,4,0.192,5,0.14,7,2.2,9,0.473,10,1.22,14,2.84,16,1.476,18,1.505,21,0.834,23,0.986,24,0.009,25,0.991,26,0.534,27,0.765,29,1.977,30,2.704,39,1.133,41,2.294,42,2.427,43,3.092,46,2.427,51,0.323,52,1.191,55,1.541,56,1.961,57,1.471,59,2.738,61,0.219,62,2.118,80,0.006,81,0.007,82,0.006,238,3.953,295,4.21,309,3.551,353,3.265,354,3.621,355,5.126,356,2.925,357,4.141,358,4.141,360,4.141,415,4.042,821,4.141,1785,7.003]],["title/classes/TeamNews.html",[0,0.139,441,2.615]],["body/classes/TeamNews.html",[0,0.188,2,0.58,3,0.116,4,0.215,5,0.07,7,1.987,8,2.862,9,0.235,10,0.751,12,0.698,14,2.38,15,2.591,16,1.406,17,2.669,21,0.874,23,0.491,24,0.009,25,0.635,26,0.524,27,0.993,28,2.407,29,2.146,30,2.883,32,1.723,33,1.987,34,1.43,39,1.148,41,1.748,42,1.849,43,3.663,44,1.507,45,1.507,46,1.849,47,1.507,48,2.228,49,1.797,50,1.507,51,0.32,52,1.076,54,3.142,55,0.767,56,0.976,57,0.732,61,0.245,62,1.054,64,1.91,66,3.97,70,1.362,76,2.618,80,0.003,81,0.004,82,0.003,90,2.782,91,1.045,103,0.667,139,0.58,197,2.138,198,3.158,199,3.449,201,2.012,218,1.407,222,1.948,238,2.534,251,2.534,268,2.591,287,1.948,290,0.553,351,2.487,354,1.455,356,2.707,361,1.625,362,1.948,363,3.163,364,3.413,365,3.129,366,3.386,367,3.033,368,4.295,369,2.706,370,4.06,371,3.859,372,2.534,373,3.361,374,4.703,376,2.365,377,2.982,378,3.513,379,3.444,380,2.982,381,2.365,382,2.365,383,3.154,384,4.06,385,3.154,386,2.982,387,2.154,388,2.834,389,3.154,390,2.365,391,2.365,392,3.259,393,2.021,394,2.365,395,3.022,396,3.287,397,2.365,398,2.365,399,2.365,400,2.834,401,2.365,402,2.834,403,2.365,404,3.154,405,2.365,406,2.365,407,2.365,408,2.365,409,2.365,410,3.154,411,2.365,412,1.362,413,3.386,414,2.06,415,3.022,416,1.625,417,2.06,418,1.455,419,2.06,420,2.06,421,2.06,422,2.06,423,2.06,424,1.851,425,2.06,426,2.06,427,3.154,428,2.534,429,2.618,430,2.534,431,2.456,432,2.534,433,3.287,434,2.908,435,2.06,436,3.154,437,2.06,438,2.06,439,3.833,440,1.692,441,2.591,1786,2.936]],["title/injectables/TimeoutInterceptor.html",[187,1.007,910,3.393]],["body/injectables/TimeoutInterceptor.html",[0,0.153,3,0.197,4,0.163,5,0.118,9,0.399,10,1.095,21,0.813,23,1.095,24,0.009,25,0.762,26,0.451,27,1.01,32,1.301,33,1.5,51,0.344,61,0.185,80,0.005,81,0.006,82,0.005,91,1.524,97,3.143,103,1.489,106,1.055,120,1.788,139,1.537,167,4.013,187,1.455,188,1.992,372,3.4,428,2.311,429,2.388,430,3.612,431,2.24,432,2.311,433,2.998,493,2.859,503,4.903,508,5.281,515,4.349,526,3.295,528,5.787,529,5.787,530,5.823,531,6.873,533,2.557,534,6.469,537,4.013,539,4.398,541,3.305,627,3.491,628,3.25,654,4.013,696,3.305,707,4.013,907,2.557,908,6.211,910,4.903,1049,4.601,1311,5.787,1787,4.398,1788,6.556,1789,4.601,1790,4.601,1791,4.349,1792,5.281,1793,7.328,1794,7.328,1795,7.328,1796,4.982,1797,4.982,1798,5.48,1799,4.982,1800,4.982,1801,4.982,1802,4.982,1803,4.982,1804,6.556,1805,6.556,1806,4.982,1807,6.556,1808,4.982,1809,4.982,1810,4.982,1811,4.982,1812,4.982,1813,4.982,1814,4.982,1815,6.556,1816,4.982,1817,4.982]],["title/classes/UpdateNewsParams.html",[0,0.139,1096,3.184]],["body/classes/UpdateNewsParams.html",[0,0.248,2,1.087,3,0.217,4,0.18,5,0.131,9,0.441,10,1.351,21,0.773,24,0.009,26,0.473,27,0.907,28,2.324,29,1.915,39,1.105,51,0.309,52,1.391,61,0.205,80,0.005,81,0.007,82,0.005,90,3.337,120,2.902,363,3.067,365,3.753,367,3.809,463,4.115,464,3.244,466,3.723,468,4.858,470,5.632,471,4.03,472,5.632,473,5.229,486,2.637,487,6.172,488,6.19,489,3.171,787,4.639,823,4.907,923,4.639,1096,4.907,1153,6.047,1157,7.137,1818,7.137,1819,6.992,1820,6.992,1821,5.229,1822,6.172,1823,6.992,1824,5.503,1825,5.503,1826,5.503]],["title/classes/User.html",[0,0.139,12,1.079]],["body/classes/User.html",[0,0.14,2,0.9,3,0.18,4,0.149,5,0.108,7,1.861,8,3.405,9,0.649,10,1.032,12,1.47,14,2.402,15,2.615,16,1.249,17,2.694,18,1.163,21,0.868,23,0.761,24,0.009,25,0.874,26,0.525,27,1.018,28,2.053,29,2.128,30,2.91,32,1.83,33,2.111,34,1.384,35,2.874,39,1.18,41,1.772,42,1.874,43,3.181,44,2.339,45,2.339,46,1.874,47,2.339,48,2.259,49,1.822,50,2.339,51,0.31,52,1.007,53,2.874,54,2.339,55,1.19,56,1.515,57,1.136,59,2.114,61,0.23,62,1.635,70,2.114,76,2.961,80,0.004,81,0.006,82,0.004,197,2.624,290,0.858,298,3.151,354,3.062,356,2.259,369,3.053,393,2.777,424,2.874,564,3.895,833,3.968,834,2.522,885,3.408,886,5.618,887,3.671,888,4.984,889,4.984,890,4.984,891,4.023,892,4.023,893,4.023,894,4.023,895,3.671,896,3.671,897,3.671,898,3.671,899,4.023,900,4.023,1488,4.023,1827,6.177,1828,4.557,1829,4.557,1830,4.557,1831,4.557,1832,6.177,1833,4.557,1834,4.557,1835,4.557]],["title/controllers/UserController.html",[493,1.979,1836,3.393]],["body/controllers/UserController.html",[0,0.186,3,0.239,4,0.198,5,0.144,9,0.486,12,1.442,21,0.61,23,1.013,24,0.009,25,0.705,26,0.373,27,0.786,29,1.511,51,0.386,61,0.225,80,0.006,81,0.007,82,0.006,87,2.493,91,1.726,103,1.377,106,1.284,139,1.197,173,2.905,190,2.603,207,2.468,220,2.726,486,2.905,493,2.644,829,4.296,835,3.228,942,3.648,1069,4.883,1077,4.628,1101,4.883,1109,4.254,1110,4.883,1111,4.022,1116,4.883,1687,3.823,1836,5.554,1837,5.351,1838,6.062,1839,7.427,1840,6.062,1841,5.063,1842,6.062,1843,6.062,1844,6.062,1845,6.062,1846,6.062]],["title/injectables/UserFacade.html",[187,1.007,938,3.01]],["body/injectables/UserFacade.html",[0,0.186,3,0.24,4,0.198,5,0.144,9,0.487,18,1.55,21,0.748,23,1.242,24,0.009,25,0.865,26,0.457,27,0.964,51,0.37,61,0.226,80,0.006,81,0.007,82,0.006,87,2.498,91,1.728,103,1.379,106,1.286,132,1.348,139,1.199,187,1.65,188,2.428,190,2.605,207,2.471,220,2.731,223,2.18,829,4.299,835,4.279,938,4.933,942,3.656,1077,3.501,1111,4.03,1174,3.83,1841,5.513,1847,5.362,1848,7.436,1849,6.074,1850,6.074,1851,7.436,1852,6.074,1853,6.074,1854,6.074]],["title/classes/UserInfo.html",[0,0.139,378,2.416]],["body/classes/UserInfo.html",[0,0.175,2,1.124,3,0.225,4,0.186,5,0.135,7,2.152,9,0.457,10,1.194,14,2.778,16,1.444,18,1.453,21,0.848,23,0.952,24,0.009,25,0.662,26,0.537,27,0.739,29,2.04,30,2.874,39,1.194,41,2.214,42,2.342,43,3.025,46,2.342,51,0.316,52,1.165,55,1.487,56,1.893,57,1.419,59,2.642,61,0.212,62,2.044,80,0.006,81,0.007,82,0.006,238,3.912,295,4.118,353,3.151,354,3.541,355,3.997,356,2.823,357,3.997,358,3.997,378,3.804,834,3.151,889,5.431,890,5.431,895,4.587,896,4.587,897,4.587,898,4.587,1855,7.227,1856,6.307]],["title/classes/UserInfoMapper.html",[0,0.139,1177,3.393]],["body/classes/UserInfoMapper.html",[0,0.193,2,1.243,3,0.249,4,0.205,5,0.15,9,0.505,21,0.633,23,1.052,24,0.009,25,0.732,26,0.387,27,0.816,34,1.243,51,0.336,52,1.027,61,0.234,80,0.006,81,0.007,82,0.006,91,1.766,103,1.43,132,1.397,139,1.243,372,3.787,378,4.621,464,3.526,1164,5.333,1174,3.97,1177,5.683,1178,4.418,1279,5.949,1475,5.558,1477,5.558,1529,5.071,1531,5.558,1857,6.709,1858,7.6,1859,6.296,1860,6.296,1861,6.296]],["title/classes/UserInfoResponse.html",[0,0.139,1279,3.184]],["body/classes/UserInfoResponse.html",[0,0.183,2,1.181,3,0.236,4,0.195,5,0.142,9,0.48,10,1.231,12,2.072,16,1.729,21,0.802,24,0.009,25,0.968,26,0.491,29,1.989,39,1.191,51,0.264,52,1.201,61,0.222,80,0.006,81,0.007,82,0.006,120,2.989,476,5.169,477,5.169,485,4.801,486,2.866,492,3.771,889,5.295,890,5.295,1275,5.933,1279,5.169,1294,4.817,1536,4.817,1537,5.279,1538,5.279,1862,7.353,1863,4.886,1864,6.502,1865,5.98]],["title/modules/UserModule.html",[142,1.272,154,3.01]],["body/modules/UserModule.html",[0,0.177,3,0.228,4,0.188,5,0.137,24,0.009,51,0.374,61,0.215,80,0.006,81,0.007,82,0.006,106,1.222,142,2.201,144,2.243,145,2.594,146,3.192,147,3.192,148,2.961,149,3.325,150,3.644,154,6.09,156,3.986,157,3.072,158,2.594,173,3.452,493,2.516,938,6.027,1502,5.727,1514,5.727,1521,3.325,1687,3.638,1836,5.873,1841,5.444,1866,5.093,1867,5.093,1868,5.093,1869,5.444,1870,5.769,1871,5.769]],["title/injectables/UserRepo.html",[187,1.007,1869,2.861]],["body/injectables/UserRepo.html",[0,0.185,3,0.239,4,0.197,5,0.143,9,0.484,12,1.907,16,1.498,18,1.541,21,0.745,23,1.238,24,0.009,25,0.861,26,0.456,27,0.961,51,0.37,52,0.985,55,1.577,57,1.505,61,0.225,80,0.006,81,0.007,82,0.006,87,2.483,91,1.722,103,1.371,106,1.279,132,1.34,139,1.192,187,1.644,188,2.414,190,2.598,197,2.709,207,2.462,220,2.715,223,2.167,242,3.1,297,5.03,317,5.541,1240,4.238,1242,4.672,1505,6.54,1869,4.672,1872,5.33,1873,6.038,1874,6.038,1875,6.038]],["title/classes/UserTaskInfo.html",[0,0.139,453,2.731]],["body/classes/UserTaskInfo.html",[0,0.177,2,1.139,3,0.228,4,0.188,5,0.137,7,2.169,9,0.463,10,1.203,14,2.801,16,1.456,18,1.472,19,4.779,20,4.507,21,0.851,23,0.964,24,0.009,25,0.671,26,0.521,27,0.748,29,2.05,30,2.885,39,1.157,41,2.243,42,2.373,43,3.049,46,2.373,51,0.318,52,1.174,55,1.507,56,1.917,57,1.438,59,2.677,61,0.215,62,2.07,70,2.677,80,0.006,81,0.007,82,0.006,238,3.927,353,3.192,355,4.049,357,4.049,358,4.049,444,3.288,453,4.335,834,3.192,889,5.21,890,5.21,1856,6.358,1876,7.26]],["title/injectables/UserUC.html",[187,1.007,1841,2.861]],["body/injectables/UserUC.html",[0,0.176,3,0.227,4,0.188,5,0.137,9,0.462,12,1.37,18,1.469,21,0.723,23,1.202,24,0.009,25,0.837,26,0.442,27,0.933,51,0.382,61,0.214,80,0.006,81,0.007,82,0.006,87,2.959,91,1.672,103,1.308,106,1.22,132,1.596,139,1.137,187,1.596,188,2.302,190,2.544,207,2.391,220,2.589,223,2.066,526,2.589,829,4.219,835,4.178,942,3.466,1077,3.319,1111,3.82,1388,4.638,1470,4.306,1514,5.808,1521,3.319,1841,4.537,1869,5.441,1877,5.083,1878,7.194,1879,5.758,1880,5.758,1881,7.194,1882,5.758,1883,4.638,1884,5.758,1885,5.758,1886,5.083,1887,5.758,1888,5.758,1889,5.083,1890,5.758,1891,5.758]],["title/classes/ValidationErrorDetailResponse.html",[0,0.139,127,3.393]],["body/classes/ValidationErrorDetailResponse.html",[0,0.205,2,1.318,3,0.264,4,0.218,5,0.159,18,1.703,21,0.671,23,1.115,24,0.009,25,0.776,26,0.411,27,0.866,39,1.221,61,0.248,80,0.007,81,0.008,82,0.007,87,2.745,108,5.892,112,3.432,124,4.296,127,5.885,1892,6.947,1893,5.892,1894,6.675,1895,6.675,1896,6.339]],["title/modules/ValidationModule.html",[142,1.272,330,3.184]],["body/modules/ValidationModule.html",[0,0.205,3,0.264,4,0.218,5,0.159,24,0.009,51,0.37,61,0.249,80,0.007,81,0.008,82,0.007,106,1.417,142,2.209,144,2.601,149,2.832,330,5.53,344,6.956,506,4.026,517,3.562,556,5.388,779,5.893,1897,6.689,1898,6.689,1899,6.689]],["title/changelog.html",[1900,2.846,1901,2.671,1902,3.359]],["body/changelog.html",[0,0.069,1,2.091,2,0.818,3,0.027,4,0.022,5,0.109,9,0.054,12,1.683,13,1.021,16,0.452,20,0.361,21,0.225,24,0.003,25,0.207,27,0.231,28,0.879,32,0.585,33,0.382,34,1.119,51,0.079,54,1.149,60,1.976,64,1.601,65,0.348,68,0.763,69,1.192,71,0.841,72,0.599,73,0.476,74,0.799,75,0.296,80,0.001,81,0.003,82,0.002,88,1.202,89,0.375,97,0.479,103,0.405,110,2.492,111,1.775,112,2.472,114,1.251,115,0.799,124,2.127,139,0.134,142,0.5,145,0.57,150,0.315,157,0.675,158,0.57,185,0.854,190,0.22,201,1.108,203,0.375,205,0.315,206,0.675,207,0.421,208,0.45,211,0.507,214,1.251,221,0.391,223,0.243,233,0.408,244,0.507,248,0.428,249,2.269,252,0.546,254,2.157,256,2.923,258,0.889,259,0.841,270,0.375,271,0.476,272,0.73,273,1.591,290,0.128,298,0.57,300,0.889,323,0.628,332,0.428,336,0.546,338,2.749,340,2.408,359,1.411,365,0.57,366,0.915,369,2.618,386,0.45,387,1.868,393,0.305,395,0.986,402,0.428,412,1.395,416,1.463,418,0.336,428,0.827,429,0.607,432,0.588,434,0.361,444,0.507,446,2.547,448,3.338,465,1.333,466,0.675,471,1.733,482,1.29,499,3.471,500,2.166,501,0.889,502,1.601,512,0.507,513,1.986,517,0.675,525,0.45,533,0.348,543,4.769,551,1.027,552,0.336,562,0.889,564,0.428,566,1.347,567,0.553,568,0.73,569,0.45,595,1.118,600,3.425,609,1.31,611,0.73,626,0.391,627,0.361,628,1.799,629,2.006,631,1.994,635,1.352,639,1.006,643,0.408,647,0.361,649,0.428,651,0.546,653,2.288,667,0.476,673,2.006,679,0.546,682,1.29,683,0.45,687,0.546,708,0.546,709,0.948,711,0.45,713,0.476,715,0.799,726,0.428,730,1.021,740,1.485,742,0.889,747,2.157,761,0.507,762,1.333,771,0.546,783,1.809,785,0.546,786,1.803,787,1.754,790,2.211,791,1.251,792,2.923,794,2.054,803,2.11,805,2.247,808,0.546,809,1.124,811,1.977,812,0.391,820,3.281,821,1.571,823,0.476,833,1.267,834,3.942,836,0.889,839,0.507,847,1.183,853,1.183,877,0.507,880,1.021,888,1.183,905,0.428,907,1.543,909,3.14,911,0.428,922,0.546,923,1.183,925,0.476,926,1.667,930,0.546,942,1.073,944,2.685,946,1.571,959,0.507,968,1.574,974,5.449,976,0.507,979,1.124,981,4.701,985,0.599,988,2.006,999,0.841,1006,0.428,1016,0.799,1023,0.428,1029,0.476,1031,0.507,1036,1.754,1038,0.841,1046,1.021,1047,1.571,1048,2.493,1049,0.476,1050,0.948,1070,1.855,1073,2.11,1084,0.763,1091,1.073,1093,1.124,1100,2.654,1131,0.507,1143,0.546,1149,2.654,1230,0.45,1231,4.21,1235,0.841,1255,0.476,1283,1.333,1300,2.493,1325,1.124,1328,0.841,1335,1.183,1364,0.476,1393,0.986,1401,0.599,1402,2.129,1419,4.41,1421,1.109,1422,0.599,1431,0.599,1449,1.239,1459,0.546,1460,1.239,1492,3.951,1521,0.73,1552,1.994,1557,0.73,1564,1.754,1569,1.436,1570,0.476,1573,1.118,1576,0.476,1590,1.333,1591,0.599,1592,0.546,1602,0.799,1606,1.021,1614,1.574,1625,0.948,1629,0.799,1641,0.889,1674,2.248,1678,0.599,1679,1.463,1682,0.507,1684,0.889,1688,1.183,1692,0.889,1704,1.021,1708,0.841,1709,1.118,1789,0.889,1790,0.889,1798,0.507,1821,2.248,1863,0.841,1864,1.574,1896,1.021,1902,2.654,1903,0.678,1904,1.251,1905,1.021,1906,0.599,1907,1.571,1908,0.678,1909,0.678,1910,1.783,1911,1.021,1912,3.471,1913,5.668,1914,7.566,1915,4.241,1916,0.678,1917,8.12,1918,0.678,1919,0.678,1920,0.678,1921,1.118,1922,0.678,1923,0.678,1924,1.783,1925,1.118,1926,4.946,1927,0.678,1928,3.629,1929,3.338,1930,1.783,1931,0.678,1932,0.599,1933,1.183,1934,0.599,1935,0.799,1936,0.599,1937,0.678,1938,7.343,1939,5.786,1940,2.248,1941,1.783,1942,0.678,1943,0.678,1944,0.678,1945,0.678,1946,0.45,1947,1.667,1948,0.678,1949,2.238,1950,0.678,1951,3.204,1952,0.678,1953,0.599,1954,0.599,1955,1.783,1956,0.678,1957,3.52,1958,0.678,1959,6.97,1960,1.118,1961,2.11,1962,0.889,1963,1.118,1964,0.599,1965,0.678,1966,1.574,1967,0.678,1968,2.334,1969,3.857,1970,6.899,1971,0.678,1972,4.769,1973,0.678,1974,0.678,1975,0.678,1976,4.144,1977,3.629,1978,0.678,1979,4.946,1980,0.678,1981,0.678,1982,3.006,1983,0.678,1984,2.643,1985,0.678,1986,1.976,1987,0.678,1988,0.678,1989,1.783,1990,0.678,1991,1.976,1992,0.678,1993,1.976,1994,0.678,1995,1.783,1996,1.118,1997,1.118,1998,1.267,1999,1.267,2000,1.976,2001,1.267,2002,0.678,2003,0.599,2004,0.678,2005,2.942,2006,0.678,2007,3.566,2008,0.678,2009,1.267,2010,0.678,2011,0.678,2012,1.118,2013,1.976,2014,0.678,2015,1.118,2016,0.678,2017,0.678,2018,0.599,2019,0.678,2020,5.111,2021,2.942,2022,3.006,2023,1.267,2024,1.267,2025,0.678,2026,0.507,2027,0.599,2028,0.678,2029,0.678,2030,0.678,2031,0.599,2032,0.678,2033,1.783,2034,0.678,2035,0.599,2036,2.643,2037,2.334,2038,0.678,2039,0.678,2040,0.678,2041,0.678,2042,1.783,2043,0.678,2044,0.678,2045,1.118,2046,0.678,2047,1.267,2048,0.678,2049,1.267,2050,3.441,2051,0.678,2052,1.574,2053,1.021,2054,0.678,2055,0.678,2056,1.267,2057,1.267,2058,0.678,2059,5.256,2060,2.493,2061,0.678,2062,1.183,2063,0.678,2064,0.678,2065,2.422,2066,0.678,2067,0.678,2068,2.238,2069,3.898,2070,0.678,2071,3.338,2072,0.678,2073,0.678,2074,1.574,2075,1.118,2076,0.546,2077,0.678,2078,0.678,2079,0.678,2080,2.923,2081,1.267,2082,1.267,2083,1.267,2084,1.118,2085,1.267,2086,0.678,2087,1.436,2088,0.678,2089,0.678,2090,0.678,2091,2.184,2092,0.678,2093,1.267,2094,0.678,2095,0.678,2096,1.118,2097,0.678,2098,0.678,2099,1.574,2100,1.976,2101,0.678,2102,0.678,2103,1.021,2104,0.678,2105,4.769,2106,0.678,2107,0.678,2108,0.678,2109,0.678,2110,5.111,2111,3.006,2112,1.267,2113,0.678,2114,0.678,2115,0.678,2116,0.678,2117,0.678,2118,0.678,2119,1.118,2120,0.678,2121,0.678,2122,1.783,2123,2.654,2124,0.678,2125,1.574,2126,0.678,2127,0.678,2128,1.118,2129,0.678,2130,0.678,2131,2.334,2132,1.118,2133,0.678,2134,1.783,2135,0.678,2136,0.599,2137,0.678,2138,0.678,2139,1.267,2140,1.803,2141,0.678,2142,0.678,2143,1.118,2144,0.678,2145,0.678,2146,0.599,2147,0.948,2148,1.267,2149,1.977,2150,3.006,2151,0.678,2152,0.678,2153,0.678,2154,0.546,2155,1.267,2156,0.678,2157,1.267,2158,1.803,2159,1.267,2160,0.678,2161,0.678,2162,0.678,2163,0.678,2164,2.643,2165,0.599,2166,0.678,2167,1.118,2168,0.678,2169,0.599,2170,2.238,2171,1.021,2172,0.678,2173,1.267,2174,1.783,2175,1.994,2176,0.678,2177,0.678,2178,0.476,2179,0.678,2180,0.678,2181,1.267,2182,0.678,2183,1.667,2184,0.546,2185,0.678,2186,1.783,2187,0.678,2188,0.678,2189,1.783,2190,0.678,2191,0.678,2192,1.267,2193,1.783,2194,0.678,2195,0.678,2196,0.678,2197,0.678,2198,1.267,2199,0.678,2200,1.783,2201,0.507,2202,1.976,2203,0.678,2204,0.546,2205,0.678,2206,1.251,2207,1.267,2208,1.674,2209,0.678,2210,0.678,2211,0.678,2212,0.678,2213,1.783,2214,1.803,2215,0.678,2216,0.599,2217,0.678,2218,1.783,2219,2.654,2220,0.678,2221,0.678,2222,0.678,2223,1.783,2224,0.678,2225,0.678,2226,0.678,2227,1.267,2228,0.678,2229,1.574,2230,1.267,2231,0.678,2232,0.678,2233,0.678,2234,0.678,2235,0.678,2236,0.507,2237,0.948,2238,0.507,2239,0.678,2240,0.678,2241,0.599,2242,1.118,2243,0.678,2244,0.678,2245,0.678,2246,4.946,2247,0.678,2248,1.783,2249,0.678,2250,0.678,2251,0.678,2252,2.238,2253,0.678,2254,1.267,2255,1.267,2256,0.678,2257,0.678,2258,0.678,2259,1.267,2260,0.678,2261,0.678,2262,0.678,2263,0.599,2264,0.599,2265,0.678,2266,0.678,2267,0.599,2268,0.678,2269,1.267,2270,0.599,2271,0.678,2272,0.678,2273,0.678,2274,0.678,2275,0.678,2276,0.678,2277,0.678,2278,0.678,2279,2.654,2280,0.678,2281,0.678,2282,0.678,2283,0.678,2284,0.678,2285,0.678,2286,0.678,2287,1.267,2288,0.678,2289,0.678,2290,1.783,2291,0.599,2292,1.267,2293,0.678,2294,1.485,2295,0.678,2296,1.267,2297,0.599,2298,0.678,2299,0.599,2300,0.678,2301,1.267,2302,0.678,2303,0.678,2304,0.678,2305,2.643,2306,0.678,2307,0.678,2308,0.546,2309,0.678,2310,0.678,2311,0.599,2312,0.678,2313,0.678,2314,0.678,2315,0.678,2316,0.678,2317,0.507,2318,0.678,2319,1.783,2320,0.678,2321,0.507,2322,0.678,2323,0.678,2324,0.678,2325,0.678,2326,1.027,2327,0.799,2328,1.783,2329,1.267,2330,0.678,2331,1.783,2332,0.678,2333,1.976,2334,0.678,2335,0.678,2336,2.643,2337,3.006,2338,0.678,2339,0.678,2340,0.678,2341,3.006,2342,0.678,2343,1.267,2344,0.678,2345,0.678,2346,1.267,2347,0.546,2348,1.267,2349,0.599,2350,1.436,2351,0.678,2352,0.678,2353,0.546,2354,0.678,2355,7.953,2356,3.333,2357,0.678,2358,0.678,2359,0.546,2360,0.678,2361,0.678,2362,0.678,2363,0.678,2364,0.678,2365,3.006,2366,0.678,2367,1.333,2368,0.678,2369,0.678,2370,0.678,2371,0.678,2372,0.678,2373,2.238,2374,2.238,2375,2.334,2376,1.571,2377,1.574,2378,2.643,2379,1.267,2380,1.267,2381,3.204,2382,1.674,2383,3.333,2384,1.118,2385,1.267,2386,1.251,2387,1.267,2388,1.021,2389,1.021,2390,1.267,2391,0.678,2392,0.678,2393,2.942,2394,0.546,2395,0.45,2396,2.643,2397,1.021,2398,0.678,2399,0.546,2400,0.476,2401,0.507,2402,0.678,2403,0.678,2404,0.599,2405,1.118,2406,0.678,2407,1.267,2408,0.678,2409,0.678,2410,1.118,2411,0.678,2412,0.678,2413,1.267,2414,0.678,2415,0.678,2416,1.267,2417,0.678,2418,0.678,2419,0.678,2420,0.599,2421,1.571,2422,0.678,2423,0.678,2424,1.118,2425,0.507,2426,0.678,2427,1.783,2428,2.129,2429,0.678,2430,0.599,2431,1.267,2432,0.678,2433,0.678,2434,0.599,2435,0.678,2436,3.441,2437,1.267,2438,0.678,2439,0.678,2440,0.678,2441,0.678,2442,0.678,2443,1.118,2444,1.118,2445,2.238,2446,1.803,2447,0.678,2448,1.783,2449,0.678,2450,0.678,2451,1.436,2452,0.678,2453,0.678,2454,0.678,2455,1.267,2456,1.783,2457,0.546,2458,0.678,2459,0.678,2460,0.678,2461,0.678,2462,1.267,2463,0.678,2464,1.021,2465,0.599,2466,1.267,2467,0.678,2468,0.599,2469,0.678,2470,0.678,2471,0.678,2472,1.267,2473,0.678,2474,1.267,2475,0.678,2476,0.678,2477,0.678,2478,0.678,2479,1.783,2480,1.783,2481,1.674,2482,0.476,2483,2.129,2484,0.678,2485,1.783,2486,1.267,2487,0.45,2488,0.599,2489,0.678,2490,0.678,2491,0.599,2492,1.267,2493,1.251,2494,1.783,2495,1.118,2496,0.678,2497,0.678,2498,0.599,2499,0.678,2500,0.678,2501,0.678,2502,1.855,2503,0.678,2504,0.678,2505,0.678,2506,0.678,2507,0.948,2508,0.678,2509,0.678,2510,0.678,2511,0.678,2512,0.678,2513,0.678,2514,1.267,2515,0.599,2516,0.546,2517,0.599,2518,0.678,2519,0.599,2520,0.678,2521,0.546,2522,1.118,2523,0.678,2524,1.436,2525,0.678,2526,0.678,2527,0.678,2528,1.267,2529,0.678,2530,0.678,2531,0.678,2532,0.678,2533,0.678,2534,1.021,2535,0.678,2536,0.678,2537,0.678,2538,0.678,2539,0.678,2540,2.238,2541,0.599,2542,0.678,2543,1.267,2544,0.678,2545,0.678,2546,1.267,2547,1.267,2548,1.267,2549,1.783,2550,1.783,2551,1.976,2552,1.267,2553,1.436,2554,1.021,2555,0.599,2556,0.476,2557,0.678,2558,0.546,2559,0.599,2560,0.678,2561,0.889,2562,0.678,2563,1.574,2564,0.678,2565,0.678,2566,0.678,2567,0.678,2568,1.855,2569,0.599,2570,1.436,2571,0.678,2572,1.267,2573,1.021,2574,1.783,2575,1.118,2576,0.678,2577,0.678,2578,0.678,2579,1.267,2580,1.118,2581,1.267,2582,0.678,2583,0.678,2584,0.678,2585,0.678,2586,0.678,2587,0.678,2588,0.678,2589,0.678,2590,0.678,2591,0.599,2592,0.599,2593,0.678,2594,0.678,2595,1.783,2596,0.678,2597,1.267,2598,0.678,2599,1.118,2600,0.678,2601,1.267,2602,0.678,2603,1.267,2604,0.678,2605,1.021,2606,0.599,2607,0.678,2608,0.599,2609,0.678,2610,0.678,2611,0.599,2612,1.783,2613,1.267,2614,0.841,2615,1.118,2616,1.267,2617,1.118,2618,1.267,2619,0.889,2620,0.678,2621,1.267,2622,0.599,2623,0.678,2624,1.267,2625,1.118,2626,0.678,2627,0.678,2628,0.678,2629,0.599,2630,0.678,2631,0.678,2632,1.267,2633,0.678,2634,0.678,2635,2.654,2636,1.021,2637,0.678,2638,3.629,2639,0.678,2640,0.599,2641,0.599,2642,0.678,2643,0.678,2644,0.678,2645,0.678,2646,2.238,2647,0.678,2648,0.678,2649,1.436,2650,0.678,2651,0.678,2652,0.678,2653,0.678,2654,0.678,2655,1.118,2656,0.678,2657,0.678,2658,0.678,2659,0.678,2660,1.021,2661,0.678,2662,0.678,2663,0.678,2664,0.678,2665,0.678,2666,0.678,2667,0.678,2668,0.678,2669,1.976,2670,0.678,2671,0.678,2672,0.546,2673,0.678,2674,0.546,2675,0.678,2676,0.678,2677,0.599,2678,0.678,2679,0.507,2680,0.678,2681,0.678,2682,0.599,2683,0.678,2684,0.678,2685,0.678,2686,0.678,2687,0.678,2688,0.678,2689,0.678,2690,1.783,2691,0.546,2692,0.678,2693,0.546,2694,0.678,2695,0.678,2696,0.678,2697,0.678,2698,1.783,2699,0.678,2700,1.267,2701,1.783,2702,1.267,2703,1.267,2704,1.267,2705,1.267,2706,0.678,2707,1.267,2708,1.267,2709,0.678,2710,0.678,2711,0.678,2712,0.678,2713,0.678,2714,0.599,2715,0.678,2716,1.267,2717,0.678,2718,0.678,2719,0.507,2720,0.678,2721,0.546,2722,0.678,2723,1.267,2724,0.678,2725,0.599,2726,0.678,2727,0.678,2728,0.678,2729,0.678,2730,0.546,2731,0.678,2732,0.678,2733,1.783,2734,1.783,2735,0.678,2736,0.678,2737,0.678,2738,1.118,2739,0.678,2740,0.678,2741,0.678,2742,0.678,2743,0.599,2744,0.678,2745,0.678,2746,1.267,2747,0.599,2748,0.678,2749,0.599,2750,0.678,2751,0.678,2752,0.678,2753,0.678,2754,0.678,2755,0.678,2756,0.678,2757,0.678,2758,0.678,2759,1.267,2760,1.267,2761,0.678,2762,0.599,2763,0.678,2764,0.678,2765,0.678,2766,1.267,2767,0.678,2768,0.678,2769,1.267,2770,0.678,2771,1.574,2772,1.267,2773,0.678,2774,0.678,2775,1.267,2776,0.428,2777,2.238,2778,0.678,2779,0.678,2780,0.678,2781,0.678,2782,0.546,2783,0.678,2784,0.948,2785,0.599,2786,1.267,2787,0.678,2788,0.678,2789,1.267,2790,0.678,2791,0.678,2792,0.678,2793,0.678,2794,0.678,2795,1.267,2796,0.678,2797,0.678,2798,0.678,2799,0.678,2800,0.678,2801,0.678,2802,0.678,2803,1.783,2804,0.678,2805,0.678,2806,0.678,2807,0.678,2808,0.678,2809,0.678,2810,0.678,2811,0.678,2812,1.267,2813,1.267,2814,0.678,2815,0.678,2816,0.678,2817,2.238,2818,4.577,2819,1.267,2820,1.021,2821,1.118,2822,1.267,2823,2.238,2824,1.118,2825,1.267,2826,0.678,2827,1.267,2828,1.118,2829,1.267,2830,1.267,2831,1.267,2832,1.118,2833,1.267,2834,2.238,2835,1.267,2836,2.238,2837,1.267,2838,1.267,2839,1.118,2840,1.118,2841,1.783,2842,1.267,2843,0.678,2844,0.678,2845,1.267,2846,0.948,2847,0.507,2848,1.267,2849,0.678,2850,2.643,2851,1.267,2852,0.678,2853,0.546,2854,0.678,2855,2.238,2856,0.678,2857,0.678,2858,0.678,2859,0.678,2860,0.678,2861,0.476,2862,0.599,2863,0.678,2864,0.678,2865,0.678,2866,1.267,2867,1.267,2868,1.267,2869,0.678,2870,0.678,2871,0.678,2872,0.599,2873,0.546,2874,0.678,2875,0.678,2876,1.267,2877,1.267,2878,0.678,2879,0.678,2880,0.678,2881,0.507,2882,0.678,2883,0.678,2884,0.678,2885,1.267,2886,0.678,2887,1.783,2888,1.574,2889,0.678,2890,0.678,2891,0.546,2892,1.267,2893,1.267,2894,0.678,2895,0.507,2896,0.678,2897,0.678,2898,1.783,2899,1.267,2900,0.599,2901,1.267,2902,0.546,2903,0.678,2904,1.267,2905,0.678,2906,0.678,2907,0.678,2908,2.238,2909,0.678,2910,0.678,2911,0.678,2912,0.678,2913,0.678,2914,0.678,2915,0.678,2916,1.267,2917,0.678,2918,0.678,2919,0.678,2920,0.599,2921,1.267,2922,0.678,2923,1.267,2924,0.678,2925,0.678,2926,0.546,2927,0.678,2928,1.267,2929,2.238,2930,0.678,2931,0.599,2932,0.678,2933,1.267,2934,1.267,2935,0.678,2936,0.678,2937,0.599,2938,1.267,2939,0.678,2940,0.678,2941,1.267,2942,0.546,2943,0.546,2944,1.267,2945,0.678,2946,0.678,2947,0.678,2948,1.267,2949,1.267,2950,0.678,2951,0.678,2952,1.267,2953,0.678,2954,0.678,2955,0.678,2956,0.678,2957,1.267,2958,0.678,2959,0.678,2960,0.546,2961,0.678,2962,2.238,2963,0.546,2964,0.678,2965,0.678,2966,1.267,2967,0.599,2968,0.507,2969,1.267,2970,0.678,2971,2.643,2972,1.267,2973,0.507,2974,0.507,2975,0.678,2976,0.678,2977,0.546,2978,0.678,2979,0.678,2980,0.678,2981,0.678,2982,0.678,2983,0.678,2984,0.678,2985,0.678,2986,0.678,2987,0.678,2988,0.678,2989,0.678,2990,1.118,2991,0.678,2992,0.678,2993,0.678,2994,0.678,2995,0.678,2996,0.546,2997,0.678,2998,0.678,2999,0.599,3000,0.678,3001,0.678,3002,0.678,3003,0.678,3004,0.678,3005,0.546,3006,0.476,3007,0.678,3008,0.678,3009,0.599,3010,1.783,3011,0.678,3012,0.599,3013,0.599,3014,0.678,3015,0.599,3016,0.678,3017,0.678,3018,0.678,3019,0.678,3020,0.678,3021,2.238,3022,0.678,3023,0.678,3024,0.599,3025,0.678,3026,1.574,3027,0.678,3028,0.678,3029,0.678,3030,0.678,3031,0.599,3032,0.678,3033,1.267,3034,0.678,3035,0.678,3036,0.678,3037,0.546,3038,1.267,3039,0.678,3040,0.678,3041,0.678,3042,0.678,3043,1.783,3044,1.267,3045,1.267,3046,0.678,3047,0.599,3048,0.678,3049,1.267,3050,0.599,3051,1.783,3052,0.678,3053,0.678,3054,0.678,3055,0.678,3056,0.678,3057,1.267,3058,1.267,3059,1.267,3060,1.267,3061,1.574,3062,1.267,3063,0.678,3064,1.267,3065,0.678,3066,1.267,3067,0.45,3068,0.599,3069,1.783,3070,0.678,3071,0.599,3072,0.678,3073,0.678,3074,0.678,3075,2.643,3076,0.678,3077,0.599,3078,0.678,3079,0.678,3080,0.678,3081,0.599,3082,0.678,3083,1.118,3084,0.678,3085,0.599,3086,0.507,3087,0.678,3088,0.678,3089,0.678,3090,0.678,3091,1.267,3092,0.678,3093,0.678,3094,0.678,3095,0.678,3096,0.599,3097,0.678,3098,0.678,3099,0.546,3100,0.678,3101,0.678,3102,0.507,3103,0.678,3104,0.678,3105,0.678,3106,1.267,3107,0.599]],["title/coverage.html",[2327,3.884]],["body/coverage.html",[0,0.274,1,1.35,5,0.056,6,2.067,8,0.963,12,0.896,24,0.009,26,0.144,34,0.462,66,1.41,80,0.002,81,0.004,82,0.002,83,1.477,84,2.067,85,2.067,86,1.554,104,1.35,111,1.247,112,2.357,117,1.887,118,2.067,119,2.067,127,1.751,148,1.202,155,1.644,166,2.497,180,1.41,181,1.477,187,1.829,189,2.067,218,1.122,238,1.087,239,3.032,267,2.067,276,1.644,290,1.527,291,1.644,293,3.529,298,1.053,303,1.644,323,4.616,351,1.296,352,2.067,353,3.947,361,1.296,362,3.929,363,0.819,364,0.991,378,1.247,392,1.247,415,1.296,440,1.35,441,1.35,442,1.41,443,3.032,444,2.529,450,1.751,453,1.41,461,1.554,462,3.032,463,3.529,480,3.312,493,2.583,494,1.751,495,3.802,496,3.802,507,1.887,514,1.887,520,1.887,521,2.067,522,2.067,527,1.247,553,1.644,557,2.067,561,1.887,571,3.323,572,3.032,579,1.41,617,1.644,618,2.067,619,2.067,636,1.751,637,2.815,638,2.642,668,1.554,669,2.067,674,1.751,675,3.802,681,1.887,684,5.595,685,5.25,688,1.887,704,1.887,706,1.887,712,1.887,716,1.887,726,3.734,754,1.751,755,1.887,768,1.887,779,1.751,780,2.067,781,2.067,815,1.554,816,3.312,826,1.554,829,1.202,830,3.032,831,3.032,835,1.247,838,1.644,848,2.067,849,2.067,850,1.751,851,2.067,869,1.477,870,2.067,873,1.751,874,2.815,886,1.751,887,3.032,910,1.751,912,1.751,913,2.067,914,2.067,917,3.802,936,2.067,938,1.554,963,1.477,964,2.067,969,2.067,998,1.751,999,2.497,1000,1.751,1001,1.751,1017,1.887,1067,1.751,1068,2.067,1077,1.35,1083,1.644,1085,1.554,1096,1.644,1102,1.644,1105,1.554,1107,1.477,1109,1.644,1112,1.644,1113,1.751,1140,3.032,1141,3.032,1158,1.887,1161,2.067,1175,1.751,1177,1.751,1222,1.477,1236,2.067,1246,1.554,1260,1.644,1274,3.529,1279,1.644,1285,1.644,1290,1.887,1305,3.032,1306,2.067,1322,1.887,1342,2.067,1343,1.887,1418,2.067,1436,2.067,1448,2.067,1449,1.296,1450,1.887,1458,1.887,1470,1.751,1471,2.067,1502,1.554,1514,1.554,1515,2.067,1527,2.067,1528,2.067,1529,3.032,1535,2.067,1536,3.032,1540,1.751,1541,2.067,1547,3.802,1552,2.497,1557,1.35,1560,1.887,1561,1.887,1562,1.887,1571,2.067,1593,1.554,1594,2.067,1604,2.067,1615,1.751,1616,2.067,1620,1.554,1622,1.644,1624,1.554,1639,2.067,1657,1.554,1662,2.067,1724,2.067,1738,2.067,1785,2.067,1787,2.067,1798,1.751,1818,2.067,1836,1.751,1837,2.067,1841,1.477,1847,2.067,1855,2.067,1857,2.067,1862,2.067,1869,1.477,1872,2.067,1876,2.067,1877,2.067,1892,2.067,1893,2.067,1940,2.815,1957,3.032,1966,2.067,2080,1.887,2125,3.323,2143,2.067,2167,2.067,2294,1.554,2327,1.477,2649,1.887,2900,4.166,2960,7.262,3108,1.887,3109,7.134,3110,9.016,3111,6.102,3112,6.913,3113,4.166,3114,2.067,3115,1.887,3116,2.067,3117,5.406,3118,5.406,3119,5.406,3120,5.406,3121,6.913,3122,2.067,3123,2.067,3124,4.166,3125,4.166,3126,2.067,3127,2.067,3128,6.325,3129,2.067,3130,7.621,3131,3.802,3132,1.887,3133,2.342,3134,2.342,3135,2.342,3136,2.342,3137,2.067,3138,2.342,3139,5.406,3140,3.764,3141,2.342,3142,3.764,3143,6.648,3144,4.72,3145,2.342,3146,5.922,3147,2.342,3148,2.342,3149,3.764,3150,3.764,3151,2.342,3152,5.868,3153,2.067,3154,2.067,3155,2.067,3156,2.067,3157,3.764,3158,2.067,3159,2.067,3160,2.342,3161,3.323,3162,3.323,3163,2.067,3164,2.067,3165,2.067,3166,1.887,3167,2.067,3168,2.067,3169,2.067,3170,4.166,3171,2.342]],["title/dependencies.html",[145,2.449,2672,3.065]],["body/dependencies.html",[0,0.171,4,0.128,5,0.132,16,0.795,24,0.009,26,0.242,55,1.693,56,1.307,69,2.094,80,0.004,81,0.005,82,0.004,106,0.833,110,1.768,145,1.768,162,2.941,164,3.472,185,3.106,190,1.808,207,2.344,242,2.019,273,3.901,332,2.48,334,2.48,377,3.7,396,2.367,428,2.588,486,1.885,489,3.735,506,2.367,537,3.168,600,1.825,628,2.765,649,4.447,650,3.168,701,3.472,888,2.609,926,2.48,945,5.721,946,2.76,1013,3.168,1016,2.48,1091,2.367,1099,2.941,1564,5.391,1625,4.171,1935,3.517,1960,3.472,2053,4.493,2084,3.472,2178,2.76,2241,3.472,2242,3.472,2297,3.472,2420,3.472,2443,3.472,2444,3.472,2487,2.609,2488,3.472,2491,3.472,2498,3.472,2541,3.472,2556,2.76,2561,3.914,2575,3.472,2785,3.472,3047,3.472,3085,3.472,3172,5.578,3173,7.952,3174,3.933,3175,3.933,3176,3.933,3177,3.933,3178,3.933,3179,5.578,3180,5.578,3181,3.933,3182,5.578,3183,3.933,3184,3.933,3185,3.933,3186,3.933,3187,3.933,3188,3.933,3189,3.933,3190,3.933,3191,3.933,3192,5.578,3193,3.933,3194,3.933,3195,3.933,3196,3.933,3197,3.933,3198,3.933,3199,5.578,3200,3.933,3201,3.933,3202,5.578,3203,3.933,3204,3.933,3205,7.445,3206,3.933,3207,3.933,3208,3.933,3209,3.933,3210,3.933,3211,3.933,3212,3.933,3213,3.933,3214,3.933,3215,3.933,3216,5.578,3217,3.933,3218,2.941,3219,3.933,3220,3.933,3221,5.578,3222,3.933,3223,5.578,3224,5.578,3225,3.933,3226,3.933,3227,3.933,3228,3.168,3229,3.933,3230,3.933,3231,3.933,3232,3.933,3233,3.933,3234,5.578,3235,3.933,3236,3.933,3237,3.933,3238,3.933,3239,3.933,3240,3.933,3241,3.933,3242,3.933,3243,3.933,3244,3.933,3245,3.933,3246,3.933,3247,3.933,3248,3.933,3249,3.933,3250,3.933,3251,3.933,3252,5.578,3253,4.924,3254,3.933,3255,3.933,3256,3.933,3257,3.933,3258,3.933,3259,3.472,3260,3.933,3261,3.933,3262,5.578,3263,3.933,3264,3.933,3265,3.933,3266,3.933,3267,3.933,3268,3.933,3269,3.933,3270,3.933,3271,3.933,3272,3.933,3273,3.933,3274,3.933,3275,5.578,3276,3.933,3277,3.933,3278,3.933,3279,3.933,3280,3.933,3281,5.578,3282,3.933,3283,3.472,3284,3.168,3285,3.933,3286,3.933,3287,3.933,3288,3.933,3289,3.933,3290,3.933,3291,3.933,3292,3.933,3293,3.933,3294,3.933,3295,3.933,3296,3.933,3297,3.933,3298,3.933,3299,3.933,3300,3.933,3301,3.933,3302,3.168,3303,3.933,3304,3.933,3305,3.933,3306,3.933,3307,3.933,3308,3.933,3309,3.933,3310,3.933,3311,3.933,3312,3.933,3313,3.933,3314,3.933,3315,3.933]],["title/miscellaneous/functions.html",[3316,2.525,3317,3.823]],["body/miscellaneous/functions.html",[9,0.501,23,1.359,24,0.009,25,0.946,26,0.384,27,1.055,33,1.881,39,1.034,80,0.006,81,0.007,82,0.006,103,1.847,104,4.359,112,3.548,148,4.176,323,3.095,418,3.095,611,3.599,644,3.938,684,4.67,685,5.933,727,5.031,729,5.031,734,5.031,754,5.656,795,4.143,828,3.599,1158,6.553,1325,3.938,3009,5.513,3122,6.676,3123,6.676,3129,5.513,3164,5.513,3165,6.676,3316,4.143,3317,4.383,3318,6.245,3319,7.181,3320,6.245,3321,5.031,3322,6.245,3323,6.245]],["title/index.html",[9,0.305,1900,2.846,1901,2.671]],["body/index.html",[5,0.146,16,0.914,24,0.008,25,0.715,32,1.182,34,0.893,64,1.582,65,3.584,75,1.973,80,0.004,81,0.006,82,0.004,88,2.791,89,2.503,90,1.809,91,1.052,97,2.834,115,2.853,120,1.624,123,3.001,185,2.168,248,4.723,249,4.004,253,3.699,254,3.401,273,2.723,412,2.099,434,2.409,466,2.409,471,2.607,500,3.882,513,2.946,552,3.047,569,3.001,600,2.099,628,3.047,629,2.723,639,2.034,653,2.853,683,3.001,740,3.001,747,4.573,783,4.202,802,3.001,805,2.607,812,3.543,907,2.322,911,2.853,922,3.644,981,3.543,1016,2.853,1020,3.644,1091,2.723,1393,2.503,1428,3.994,1625,3.383,1691,3.175,1720,3.644,1791,3.001,1863,3.001,1904,3.175,1905,5.624,1907,4.314,1917,3.994,1935,3.876,1946,4.969,1947,5.529,1963,3.994,1964,3.994,2007,4.597,2060,3.383,2091,4.202,2099,3.994,2136,7.295,2140,3.644,2149,3.383,2175,3.001,2267,3.994,2294,4.078,2326,2.607,2327,2.853,2347,4.951,2376,3.175,2425,3.383,2482,3.175,2487,3.001,2519,6.163,2521,4.951,2524,3.644,2559,3.994,2749,3.994,2846,4.597,2847,3.383,2891,3.644,3005,3.644,3006,3.175,3081,3.994,3102,3.383,3111,3.994,3302,3.644,3324,3.383,3325,6.147,3326,6.507,3327,4.524,3328,3.994,3329,4.524,3330,3.175,3331,3.175,3332,3.994,3333,3.175,3334,4.524,3335,4.524,3336,3.175,3337,3.175,3338,4.524,3339,3.994,3340,4.314,3341,3.994,3342,4.524,3343,3.644,3344,4.524,3345,6.163,3346,5.601,3347,3.876,3348,3.994,3349,6.147,3350,6.147,3351,7.832,3352,7.49,3353,4.524,3354,4.524,3355,6.147,3356,3.994,3357,4.524,3358,3.994,3359,6.147,3360,4.524,3361,3.994,3362,6.147,3363,6.147,3364,3.383,3365,3.994,3366,4.524,3367,4.524,3368,4.524,3369,4.524,3370,4.524,3371,2.853,3372,4.524,3373,4.524,3374,3.644,3375,4.524,3376,3.383,3377,3.644,3378,4.524,3379,3.994,3380,4.524,3381,3.644,3382,3.644,3383,4.597,3384,4.524,3385,4.524,3386,3.994,3387,4.524]],["title/license.html",[1900,2.846,1901,2.671,3388,3.359]],["body/license.html",[0,0.028,4,0.265,5,0.04,12,1.401,21,0.093,24,0.002,28,0.306,30,0.314,34,0.87,51,0.041,52,0.274,64,2.315,65,1.468,71,0.611,75,0.402,79,0.689,80,0.002,81,0.002,82,0.002,88,3.071,91,0.214,97,0.636,115,0.581,123,1.115,139,0.182,158,0.414,201,1.819,203,1.582,205,1.326,211,1.256,215,2.045,216,3.506,244,3.058,259,5.791,270,0.509,272,0.968,290,0.77,292,0.877,334,0.581,339,0.689,365,0.414,369,0.358,384,0.611,387,2.367,388,0.581,430,0.427,431,0.414,460,0.742,466,1.234,471,1.648,473,0.689,482,0.531,501,5.12,502,2.345,513,2.476,517,1.987,526,0.414,533,0.473,562,0.646,566,1.721,567,2.5,569,2.922,600,0.779,625,1.461,629,2.246,635,1.285,639,0.755,647,0.49,649,1.059,673,1.721,696,0.611,715,1.059,761,1.256,787,0.611,790,0.611,794,1.148,798,0.689,803,2.006,805,0.968,806,1.179,809,1.803,812,0.968,834,2.858,871,1.115,878,2.476,879,2.679,903,3.77,926,1.461,973,0.646,978,0.581,981,1.335,982,0.689,1006,0.581,1025,0.611,1026,2.869,1028,0.742,1029,2.619,1031,1.733,1048,2.138,1050,4.017,1093,1.059,1099,0.689,1132,0.742,1143,4.327,1151,2.006,1230,0.611,1255,0.646,1325,2.097,1364,0.646,1393,2.065,1402,0.742,1419,1.733,1449,3.663,1492,1.522,1493,0.813,1570,0.646,1627,2.045,1629,1.461,1641,0.646,1679,2.973,1688,1.897,1692,1.179,1704,1.353,1771,0.689,1772,4.158,1773,2.936,1790,1.626,1791,1.897,1822,4.136,1863,0.611,1886,0.813,1906,0.813,1907,1.626,1912,2.006,1914,1.483,1925,1.483,1933,0.611,1940,1.256,1947,2.578,1951,1.483,1953,2.936,1957,1.353,1962,0.646,1996,1.483,2007,0.689,2013,0.813,2026,0.689,2031,0.813,2053,1.353,2062,0.611,2080,0.742,2087,0.742,2091,2.246,2100,0.813,2103,0.742,2119,0.813,2140,6.085,2147,2.487,2149,1.256,2158,0.742,2169,1.483,2171,0.742,2184,1.353,2201,3.058,2204,2.679,2206,0.646,2214,0.742,2216,0.813,2219,0.813,2236,0.689,2237,2.487,2263,0.813,2299,0.813,2317,0.689,2327,1.059,2349,1.483,2353,1.353,2359,0.742,2376,0.646,2382,3.058,2389,2.303,2397,0.742,2399,5.923,2400,3.465,2401,1.733,2404,6.147,2421,2.334,2425,1.256,2465,0.813,2481,3.294,2493,4.773,2502,3.091,2507,0.689,2516,0.742,2534,0.742,2551,0.813,2553,1.353,2554,1.353,2558,3.548,2591,0.813,2614,1.897,2615,0.813,2617,0.813,2649,0.742,2655,0.813,2660,0.742,2679,1.256,2682,0.813,2693,0.742,2719,1.256,2738,0.813,2776,2.353,2782,1.353,2820,1.353,2846,2.138,2847,1.733,2853,1.353,2861,2.006,2873,0.742,2891,1.353,2895,1.733,2931,1.483,2942,0.742,2968,1.733,2974,0.689,2977,3.006,2996,4.161,2999,0.813,3006,0.646,3012,5.446,3013,1.483,3015,1.483,3024,0.813,3061,0.813,3068,1.483,3071,0.813,3086,3.863,3096,2.045,3137,0.813,3228,0.742,3326,0.742,3333,2.334,3336,2.006,3337,0.646,3340,0.646,3341,2.524,3343,1.866,3347,0.581,3361,0.813,3364,1.733,3371,3.257,3383,1.733,3388,7.759,3389,6.17,3390,6.035,3391,0.921,3392,2.317,3393,7.237,3394,4.862,3395,5.149,3396,3.326,3397,0.921,3398,0.921,3399,1.68,3400,2.317,3401,2.317,3402,5.372,3403,0.921,3404,0.921,3405,1.483,3406,3.326,3407,3.293,3408,1.68,3409,1.68,3410,5.06,3411,4.404,3412,0.921,3413,0.921,3414,3.732,3415,1.483,3416,0.813,3417,0.813,3418,4.56,3419,7.864,3420,2.317,3421,2.045,3422,0.921,3423,0.921,3424,2.859,3425,4.686,3426,0.921,3427,4.686,3428,1.256,3429,0.921,3430,2.859,3431,0.742,3432,2.859,3433,0.742,3434,5.199,3435,0.813,3436,0.813,3437,4.938,3438,5.166,3439,3.326,3440,5.372,3441,0.921,3442,1.68,3443,0.921,3444,0.921,3445,2.045,3446,0.921,3447,0.921,3448,0.921,3449,0.921,3450,0.921,3451,0.921,3452,2.859,3453,0.921,3454,2.317,3455,0.921,3456,0.921,3457,5.163,3458,1.733,3459,0.921,3460,0.921,3461,1.866,3462,2.317,3463,0.921,3464,0.689,3465,1.68,3466,1.68,3467,2.317,3468,6.97,3469,0.921,3470,3.326,3471,3.326,3472,3.732,3473,0.742,3474,2.317,3475,4.794,3476,1.68,3477,0.921,3478,0.921,3479,0.921,3480,2.317,3481,0.921,3482,0.921,3483,1.68,3484,3.732,3485,0.921,3486,1.68,3487,0.921,3488,3.465,3489,0.921,3490,2.859,3491,0.813,3492,1.68,3493,7.83,3494,2.317,3495,4.686,3496,2.524,3497,1.256,3498,0.921,3499,1.68,3500,2.317,3501,4.686,3502,4.938,3503,0.921,3504,2.859,3505,1.68,3506,2.859,3507,2.524,3508,0.921,3509,2.317,3510,7.038,3511,1.483,3512,0.921,3513,4.404,3514,0.921,3515,2.045,3516,2.476,3517,0.921,3518,5.89,3519,2.045,3520,1.68,3521,3.609,3522,5.166,3523,3.732,3524,0.921,3525,1.68,3526,4.089,3527,0.921,3528,5.56,3529,1.68,3530,0.921,3531,0.921,3532,0.921,3533,2.317,3534,0.921,3535,0.921,3536,0.921,3537,0.742,3538,2.317,3539,2.524,3540,0.921,3541,0.921,3542,0.921,3543,1.483,3544,4.938,3545,0.813,3546,0.742,3547,2.045,3548,2.317,3549,1.733,3550,2.317,3551,0.921,3552,2.936,3553,0.813,3554,1.115,3555,2.045,3556,0.921,3557,0.921,3558,0.921,3559,0.921,3560,1.483,3561,0.921,3562,6.274,3563,1.483,3564,2.045,3565,0.646,3566,1.68,3567,2.859,3568,0.813,3569,0.921,3570,1.68,3571,2.679,3572,0.921,3573,0.921,3574,0.921,3575,1.68,3576,0.921,3577,1.353,3578,0.921,3579,2.679,3580,0.921,3581,0.742,3582,4.089,3583,2.303,3584,0.921,3585,2.936,3586,0.921,3587,1.68,3588,0.921,3589,0.921,3590,0.921,3591,0.921,3592,0.921,3593,2.317,3594,0.921,3595,1.68,3596,1.68,3597,1.68,3598,0.921,3599,5.56,3600,1.483,3601,0.921,3602,0.921,3603,0.813,3604,0.921,3605,0.646,3606,0.921,3607,0.921,3608,2.317,3609,0.813,3610,0.921,3611,5.199,3612,0.689,3613,0.921,3614,0.921,3615,3.326,3616,3.294,3617,0.921,3618,0.921,3619,2.317,3620,0.921,3621,0.921,3622,2.859,3623,0.921,3624,0.921,3625,0.921,3626,0.921,3627,0.921,3628,0.921,3629,1.68,3630,0.921,3631,2.317,3632,0.921,3633,0.921,3634,1.68,3635,0.921,3636,0.921,3637,0.921,3638,0.921,3639,0.921,3640,1.68,3641,1.179,3642,4.136,3643,0.921,3644,3.732,3645,0.921,3646,0.921,3647,1.483,3648,2.317,3649,2.859,3650,2.859,3651,2.859,3652,0.921,3653,2.936,3654,2.936,3655,0.921,3656,2.317,3657,0.921,3658,1.68,3659,0.921,3660,1.483,3661,3.326,3662,1.68,3663,2.859,3664,2.859,3665,0.921,3666,2.317,3667,3.326,3668,0.921,3669,0.921,3670,3.293,3671,2.317,3672,2.317,3673,1.68,3674,0.646,3675,0.921,3676,0.813,3677,0.921,3678,0.921,3679,2.045,3680,0.921,3681,0.921,3682,0.921,3683,0.921,3684,0.921,3685,2.317,3686,0.921,3687,0.813,3688,2.045,3689,1.68,3690,3.732,3691,5.843,3692,2.317,3693,1.68,3694,1.68,3695,1.68,3696,0.813,3697,0.921,3698,0.921,3699,0.921,3700,3.294,3701,1.68,3702,0.921,3703,0.921,3704,0.921,3705,0.921,3706,1.68,3707,0.921,3708,1.68,3709,0.921,3710,0.921,3711,3.091,3712,0.921,3713,4.56,3714,0.921,3715,0.921,3716,0.921,3717,1.68,3718,0.921,3719,2.859,3720,1.68,3721,0.813,3722,0.921,3723,0.921,3724,0.921,3725,0.921,3726,1.68,3727,0.921,3728,0.921,3729,0.742,3730,2.524,3731,0.921,3732,1.68,3733,0.921,3734,0.921,3735,2.045,3736,0.921,3737,0.921,3738,0.921,3739,0.921,3740,2.859,3741,0.921,3742,0.921,3743,0.813,3744,0.813,3745,0.813,3746,0.921,3747,0.921,3748,0.921,3749,3.326,3750,0.921,3751,0.921,3752,2.859,3753,0.921,3754,0.921,3755,0.921,3756,0.921,3757,0.921,3758,0.921,3759,2.859,3760,0.921,3761,0.921,3762,2.317,3763,0.921,3764,0.742,3765,2.317,3766,0.921,3767,0.921,3768,0.921,3769,0.921,3770,0.921,3771,0.921,3772,0.921,3773,0.813,3774,1.483,3775,0.921,3776,0.646,3777,1.68,3778,0.813,3779,0.921,3780,2.859,3781,0.921,3782,0.921,3783,1.68,3784,2.317,3785,2.317,3786,0.742,3787,1.68,3788,0.921,3789,2.317,3790,4.089,3791,0.921,3792,0.921,3793,1.68,3794,0.921,3795,0.921,3796,0.921,3797,0.921,3798,2.859,3799,2.317,3800,0.921,3801,3.326,3802,0.921,3803,0.921,3804,0.921,3805,0.921,3806,0.813,3807,0.921,3808,1.68,3809,1.68,3810,1.483,3811,2.317,3812,0.813,3813,0.921,3814,1.353,3815,2.317,3816,0.921,3817,1.483,3818,0.921,3819,1.68,3820,0.921,3821,0.921,3822,1.68,3823,6.802,3824,2.317,3825,0.921,3826,3.326,3827,4.938,3828,2.317,3829,0.921,3830,0.813,3831,0.921,3832,0.921,3833,2.859,3834,0.921,3835,2.317,3836,0.921,3837,0.921,3838,0.921,3839,0.921,3840,0.921,3841,0.921,3842,0.921,3843,2.859,3844,1.68,3845,0.921,3846,0.921,3847,2.317,3848,0.921,3849,1.68,3850,2.317,3851,1.68,3852,0.921,3853,0.921,3854,0.921,3855,1.68,3856,2.317,3857,0.921,3858,0.813,3859,0.921,3860,0.921,3861,1.68,3862,0.921,3863,0.813,3864,0.921,3865,0.921,3866,0.921,3867,0.921,3868,2.317,3869,1.68,3870,0.813,3871,0.921,3872,0.921,3873,2.859,3874,0.921,3875,2.317,3876,0.921,3877,0.921,3878,1.68,3879,0.921,3880,0.921,3881,0.921,3882,2.317,3883,1.68,3884,1.68,3885,0.921,3886,1.68,3887,4.089,3888,1.483,3889,2.317,3890,2.859,3891,0.813,3892,0.921,3893,1.68,3894,0.921,3895,2.317,3896,0.921,3897,0.921,3898,0.921,3899,0.921,3900,0.921,3901,0.921,3902,2.317,3903,1.68,3904,0.921,3905,1.68,3906,0.813,3907,0.921,3908,0.921,3909,1.68,3910,1.68,3911,0.921,3912,1.483,3913,0.921,3914,0.921,3915,0.742,3916,0.921,3917,2.317,3918,0.921,3919,0.921,3920,0.921,3921,0.921,3922,1.68,3923,2.317,3924,0.921,3925,0.921,3926,0.921,3927,0.921,3928,0.742,3929,1.68,3930,0.921,3931,0.921,3932,0.921,3933,0.921,3934,0.921,3935,0.921,3936,0.921,3937,0.921,3938,0.689,3939,0.921,3940,0.921,3941,0.921,3942,2.859,3943,0.921,3944,0.921,3945,1.68,3946,0.921,3947,0.921,3948,0.921,3949,0.921,3950,0.921,3951,0.921,3952,0.921,3953,0.742,3954,0.921,3955,0.921,3956,0.921,3957,0.813,3958,1.68,3959,0.921,3960,0.921,3961,0.921,3962,0.921,3963,1.68,3964,0.921,3965,0.921,3966,0.813,3967,0.813,3968,0.611,3969,0.921,3970,1.68,3971,1.68,3972,2.936,3973,0.921,3974,0.921,3975,0.813,3976,0.921,3977,0.921,3978,2.317,3979,1.483,3980,0.921,3981,1.68,3982,1.68,3983,1.68,3984,0.921,3985,0.813,3986,0.813,3987,0.921,3988,0.813,3989,0.921,3990,0.921,3991,1.68,3992,0.921,3993,2.317,3994,0.921,3995,0.921,3996,0.921,3997,0.921,3998,0.921,3999,0.921,4000,0.921,4001,0.921,4002,0.921,4003,0.921,4004,0.813,4005,0.921,4006,0.742,4007,0.921,4008,0.921,4009,0.813,4010,0.921,4011,0.921,4012,0.921,4013,0.921,4014,0.921,4015,0.921,4016,0.921,4017,0.921,4018,0.921,4019,0.921,4020,0.921,4021,0.689,4022,0.813,4023,1.68,4024,1.483,4025,0.921,4026,0.921,4027,0.921,4028,0.921,4029,0.921,4030,0.921,4031,1.68,4032,0.921,4033,0.921,4034,0.813,4035,0.742,4036,0.921,4037,0.921,4038,0.742,4039,0.921,4040,0.921,4041,0.921,4042,0.921]],["title/modules.html",[144,2.395]],["body/modules.html",[24,0.008,80,0.006,81,0.008,82,0.006,143,4.454,144,2.468,154,4.211,174,4.211,179,4.211,324,4.454,327,4.454,328,4.454,329,3.82,330,4.454,926,5.72,997,4.747,1217,4.747,1543,4.454,1546,4.454,3371,5.36,4043,9.071,4044,9.071,4045,8.142,4046,8.501]],["title/overview.html",[4047,4.961]],["body/overview.html",[2,0.92,24,0.009,80,0.005,81,0.006,82,0.005,142,1.306,143,5.844,144,1.812,145,2.095,146,2.579,147,2.579,148,2.392,149,1.973,150,2.162,151,4.114,152,4.114,153,4.114,154,5.94,155,4.974,156,3.47,157,2.481,158,2.095,173,2.233,174,5.751,175,4.114,176,4.114,177,4.114,178,4.114,179,5.407,180,5.012,181,4.469,188,1.863,292,1.763,324,6.137,325,4.114,326,4.114,327,4.974,328,4.974,329,5.012,330,4.974,527,4.434,579,5.012,621,4.114,622,4.114,623,4.114,938,5.525,992,4.114,993,4.114,994,4.114,1107,5.251,1217,6.54,1218,4.114,1219,4.114,1220,4.114,1222,4.469,1502,4.702,1514,4.702,1543,6.083,1544,4.114,1545,4.114,1546,6.019,1593,4.702,1620,4.702,1655,4.114,1656,4.114,1657,4.702,1841,4.469,1866,4.114,1867,4.114,1868,4.114,1869,4.469,2026,3.485,2087,3.754,2103,3.754,2131,4.114,4047,3.754,4048,4.66]],["title/todo.html",[63,1.297,1900,2.846,1901,2.671]],["body/todo.html",[0,0.13,5,0.101,10,0.711,12,1.013,16,1.192,24,0.008,25,0.686,26,0.363,32,1.54,39,0.582,52,1.293,57,1.061,63,1.451,64,2.553,65,3.935,69,2.267,80,0.006,81,0.006,82,0.004,88,1.702,110,2.651,111,2.267,112,2.571,114,2.988,124,2.185,142,2.046,150,1.975,158,2.651,160,2.267,185,2.826,190,2.192,205,1.975,245,5.448,248,3.718,249,4.03,254,3.743,269,4.137,292,1.611,332,3.718,338,3.911,342,2.454,343,2.988,346,3.184,363,1.489,366,2.185,429,2.826,434,2.267,464,2.735,466,3.139,493,1.857,500,4.03,513,2.04,527,2.267,533,3.026,550,2.562,551,2.454,568,3.398,626,3.898,628,2.922,635,1.914,639,3.041,648,2.824,667,2.988,673,4.394,682,2.454,683,2.824,685,2.988,711,2.824,714,2.684,744,4.604,745,3.911,783,2.562,784,6.175,790,2.824,805,4.686,853,3.911,908,3.184,924,3.429,926,2.684,973,2.988,988,2.562,1006,4.265,1010,5.97,1023,2.684,1025,2.824,1026,2.988,1038,2.824,1043,2.824,1047,4.746,1048,3.184,1093,2.684,1230,2.824,1242,2.684,1300,3.184,1393,2.356,1449,2.356,1521,2.454,1564,4.487,1687,2.684,1691,2.988,1907,4.137,1912,2.988,1933,2.824,1934,3.758,1935,2.684,1936,3.758,1946,2.824,1969,3.758,1970,3.758,2005,3.758,2059,5.881,2060,3.184,2065,3.429,2183,2.684,2294,2.824,2308,3.429,2377,3.758,2381,3.758,2389,3.429,2428,3.429,2464,3.429,2481,3.184,2482,2.988,2573,4.749,2660,3.429,2672,3.429,2674,3.429,2776,2.684,3006,2.988,3037,3.429,3067,3.911,3099,3.429,3102,3.184,3253,3.758,3283,3.758,3284,3.429,3347,2.684,3358,3.758,3376,3.184,3428,3.184,3431,3.429,3565,2.988,3603,3.758,3647,3.758,3729,3.429,3975,5.204,4021,4.409,4049,3.429,4050,4.257,4051,3.758,4052,3.758,4053,3.184,4054,3.429,4055,4.257,4056,4.257,4057,3.758,4058,5.204,4059,4.257,4060,4.746,4061,4.257,4062,4.257,4063,4.257,4064,4.257,4065,3.758,4066,4.257,4067,3.429,4068,4.257,4069,4.257,4070,4.257,4071,3.758,4072,3.758,4073,4.257,4074,4.257,4075,4.257,4076,4.257,4077,4.257,4078,2.988,4079,3.758,4080,4.257,4081,4.257,4082,3.758,4083,3.758,4084,3.758,4085,4.257,4086,3.758,4087,4.257,4088,4.257,4089,4.257,4090,4.257,4091,5.97,4092,4.257,4093,4.257,4094,4.257,4095,4.257,4096,4.257,4097,4.257,4098,3.429,4099,4.257,4100,5.896,4101,3.758,4102,4.257]],["title/miscellaneous/typealiases.html",[3316,2.525,4103,5.448]],["body/miscellaneous/typealiases.html",[9,0.427,12,1.267,16,1.076,20,3.645,24,0.009,26,0.541,39,0.728,52,1.116,71,3.532,80,0.005,81,0.007,82,0.005,97,2.015,197,2.219,199,3.393,205,2.47,251,3.176,290,1.003,295,4.762,363,2.793,364,2.898,387,3.281,635,2.394,637,3.981,638,5.31,639,2.394,641,5.514,655,5.514,656,5.514,692,6.095,802,3.532,816,3.736,818,5.514,819,6.433,822,5.514,823,3.736,824,4.804,874,3.981,875,5.119,877,3.981,998,3.981,999,5.299,1000,3.981,1001,5.119,1006,3.357,1021,3.981,1023,3.357,1036,3.532,1037,4.699,1038,3.532,1039,6.043,1040,4.699,1041,4.699,1258,5.02,1274,3.981,1288,6.043,1343,4.288,1372,4.288,1373,4.288,1437,3.532,1458,4.288,1466,6.043,1642,5.514,2074,4.699,2076,4.288,3131,4.288,3132,5.514,3166,4.288,3316,3.532,3721,4.699,4104,5.324,4105,5.324,4106,5.324,4107,6.845,4108,6.845,4109,7.05,4110,4.699,4111,5.324,4112,5.324,4113,5.324,4114,5.324,4115,6.845,4116,6.043,4117,6.845,4118,4.699,4119,4.699,4120,5.324,4121,6.845,4122,5.324,4123,5.324,4124,5.324,4125,3.532,4126,5.324,4127,5.324,4128,5.324,4129,5.324,4130,5.324]],["title/miscellaneous/variables.html",[1961,3.823,3316,2.525]],["body/miscellaneous/variables.html",[1,1.119,9,0.156,10,0.324,12,1.717,14,0.755,24,0.009,25,0.375,26,0.488,29,0.484,30,0.662,32,2.321,33,2.672,34,1.358,39,0.791,49,0.776,61,0.154,63,0.662,64,0.679,73,1.363,80,0.003,81,0.003,82,0.002,83,2.036,86,2.142,88,1.291,90,1.657,97,1.222,103,0.441,104,2.389,110,1.864,111,1.034,112,3.797,113,1.452,121,2.036,122,2.784,124,0.997,132,1.837,139,1.537,149,1.367,166,2.75,173,0.931,185,1.987,190,0.629,201,1.527,203,1.075,206,1.034,207,0.645,217,1.564,218,1.548,223,0.697,233,1.944,249,1.601,253,1.169,270,1.787,274,3.339,276,1.363,295,1.119,298,2.172,323,0.963,342,1.119,343,1.363,351,1.075,353,1.787,359,1.224,361,1.075,363,0.679,369,1.256,378,1.034,392,1.034,393,1.864,395,1.075,396,1.169,412,0.901,415,1.075,416,1.075,418,1.601,428,0.901,429,0.931,430,0.901,431,0.873,432,0.901,440,1.119,441,1.119,442,1.169,443,1.564,444,1.657,450,2.415,453,1.169,459,1.714,462,1.564,463,2.415,466,1.72,480,4.062,485,1.119,490,2.909,493,0.847,494,1.452,495,1.564,496,3.339,499,1.363,500,1.601,503,1.452,507,2.601,508,2.601,509,1.714,510,1.714,513,1.548,514,2.601,515,2.142,516,1.564,517,2.207,518,1.564,519,1.452,527,3.267,530,1.452,533,1.658,550,2.908,552,1.601,568,1.119,609,1.601,611,1.861,617,2.266,626,1.119,627,1.034,628,1.601,635,0.873,639,0.873,648,1.288,667,1.363,668,1.288,673,1.169,674,1.452,675,1.564,679,1.564,681,3.339,682,1.119,683,1.288,684,1.452,685,4.508,687,1.564,688,2.601,696,2.142,704,2.601,705,1.714,706,2.601,707,4.662,708,1.564,709,1.452,710,1.714,711,2.75,712,2.601,713,1.363,714,2.614,715,1.224,716,2.601,717,1.714,718,2.851,719,1.714,720,1.564,721,1.714,722,1.714,723,1.714,724,1.714,725,1.714,727,1.564,729,1.564,730,4.32,734,1.564,740,1.288,741,2.851,742,1.363,743,1.714,744,1.224,745,2.75,746,2.851,747,2.294,748,1.564,749,2.851,750,1.714,751,2.601,752,1.714,753,1.714,754,1.452,755,2.601,756,1.714,757,1.714,758,1.564,759,1.564,760,1.564,761,1.452,762,1.452,763,1.714,764,1.714,765,1.714,766,1.714,767,4.734,768,2.601,769,4.734,770,1.714,771,1.564,772,1.714,783,1.169,786,2.601,795,1.288,798,1.452,809,1.224,816,1.363,820,1.288,821,1.363,829,2.128,832,2.266,833,2.774,835,1.72,836,1.363,878,1.288,888,1.288,903,1.363,907,0.997,917,1.564,918,1.714,919,1.714,923,1.288,930,1.564,934,1.714,935,1.714,944,1.564,946,3.764,963,1.224,978,1.224,981,1.119,988,1.169,998,1.452,999,2.75,1000,1.452,1001,2.415,1006,2.036,1007,2.851,1011,2.601,1012,2.851,1015,4.734,1017,2.601,1018,1.714,1019,2.851,1020,1.564,1021,2.415,1022,1.714,1023,1.224,1024,1.564,1025,1.288,1026,1.363,1027,1.452,1028,1.564,1029,1.363,1030,1.714,1031,1.452,1032,2.851,1033,1.714,1034,1.714,1035,1.714,1077,3.336,1109,2.266,1140,1.564,1141,2.601,1229,1.363,1274,1.452,1283,1.452,1290,2.601,1322,2.601,1335,1.288,1419,1.452,1449,1.075,1460,1.787,1474,1.564,1484,1.714,1486,1.714,1492,2.207,1547,1.564,1552,4.07,1557,1.119,1560,2.601,1561,2.601,1562,2.601,1569,1.564,1570,2.266,1628,1.714,1789,1.363,1798,2.415,1889,1.714,1933,1.288,1935,2.036,1946,3.205,1947,2.614,1961,1.363,1968,1.714,2003,1.714,2012,2.851,2065,2.601,2175,1.288,2237,1.452,2327,1.224,2395,1.288,2464,1.564,2487,1.288,2516,1.564,2524,1.564,2555,1.714,2556,2.909,2568,4.062,2592,2.851,2636,1.564,2743,2.851,2747,1.714,3099,1.564,3108,1.564,3113,1.714,3114,2.851,3115,2.601,3116,2.851,3124,1.714,3125,4.265,3126,2.851,3127,3.66,3131,1.564,3132,3.892,3152,1.714,3153,3.66,3154,3.66,3155,3.66,3156,3.66,3158,1.714,3159,2.851,3161,1.714,3162,1.714,3163,2.851,3166,1.564,3167,2.851,3168,1.714,3169,2.851,3170,4.265,3218,1.452,3316,1.288,3317,2.266,3319,5.416,3321,1.564,3324,2.415,3379,1.714,3565,1.363,4054,1.564,4067,3.339,4072,1.714,4078,1.363,4082,2.851,4091,2.851,4109,1.714,4110,1.714,4116,1.714,4118,2.851,4119,3.66,4131,6.135,4132,3.229,4133,1.942,4134,4.146,4135,6.135,4136,1.942,4137,4.146,4138,1.942,4139,4.146,4140,1.942,4141,3.229,4142,1.942,4143,1.942,4144,1.942,4145,2.851,4146,1.942,4147,1.942,4148,1.942,4149,1.942,4150,1.942,4151,1.942,4152,1.942,4153,1.942,4154,1.714,4155,1.942,4156,1.942,4157,1.942,4158,1.942,4159,1.942,4160,2.601,4161,1.714,4162,1.714,4163,1.714,4164,1.942,4165,1.942,4166,1.942,4167,2.851,4168,1.942,4169,1.942,4170,1.942,4171,1.942,4172,1.942,4173,1.714,4174,1.942,4175,4.146,4176,1.942,4177,1.942,4178,1.942,4179,1.942,4180,1.942,4181,1.942,4182,1.942,4183,1.942,4184,1.942,4185,1.942,4186,1.942,4187,1.942,4188,1.942,4189,1.942,4190,1.942,4191,1.942,4192,1.942,4193,1.942,4194,1.942,4195,1.942,4196,1.942,4197,1.942,4198,1.942,4199,1.942,4200,1.714,4201,1.942,4202,1.942,4203,1.942,4204,1.942,4205,1.942,4206,1.942,4207,1.942,4208,3.229,4209,3.229,4210,1.942,4211,1.942,4212,1.942,4213,1.942,4214,3.229,4215,3.229]],["title/additional-documentation/nestjs-application.html",[75,1.429,552,1.624,567,1.429,1421,1.624]],["body/additional-documentation/nestjs-application.html",[7,1.311,24,0.008,32,1.137,63,1.484,64,2.393,68,2.62,75,3.634,80,0.004,81,0.006,82,0.006,88,3.192,142,1.22,144,1.693,185,2.086,203,2.409,216,2.745,249,4.055,254,3.313,272,2.509,292,1.647,301,3.255,365,1.957,372,2.778,428,2.778,432,2.778,500,2.967,513,2.869,519,3.255,552,3.958,567,1.898,568,2.509,569,3.972,570,3.506,600,2.019,626,2.509,629,3.603,635,1.957,639,2.692,649,2.745,673,2.62,711,4.54,740,2.888,744,4.315,751,3.506,794,2.157,798,3.255,805,2.509,852,3.842,902,3.506,903,4.201,911,2.745,923,4.889,974,3.055,976,3.255,978,2.745,981,2.509,1027,3.255,1151,4.201,1229,4.802,1230,4.54,1235,2.888,1239,3.506,1300,3.255,1421,2.967,1570,3.055,1688,2.888,1932,3.842,1935,2.745,1946,4.889,1947,5.254,2059,3.506,2062,2.888,2132,3.842,2158,3.506,2183,2.745,2294,5.427,2308,3.506,2321,3.255,2326,2.509,2327,3.775,2350,5.512,2487,2.888,2502,4.201,2677,5.285,2784,3.255,2824,5.285,2840,3.842,2873,5.512,3115,5.512,3218,3.255,3324,3.255,3326,3.506,3328,3.842,3330,3.055,3332,5.285,3346,5.117,3347,4.315,3371,2.745,3394,3.506,3549,3.255,3553,3.842,3554,2.888,3564,3.842,3565,4.802,3611,3.842,3641,3.055,3711,3.055,3776,3.055,3863,3.842,3870,3.842,4006,3.506,4045,3.842,4065,3.842,4078,3.055,4079,6.041,4083,5.285,4084,5.285,4125,3.972,4145,3.842,4160,4.822,4161,3.842,4162,3.842,4163,3.842,4200,3.842,4216,4.353,4217,3.506,4218,4.353,4219,4.353,4220,3.506,4221,4.353,4222,6.843,4223,4.353,4224,3.842,4225,4.353,4226,4.353,4227,4.353,4228,7.727,4229,4.353,4230,4.353,4231,3.842,4232,4.353,4233,4.353,4234,4.353,4235,4.353,4236,5.987,4237,4.353,4238,4.353,4239,4.353,4240,4.353,4241,4.353,4242,4.353,4243,4.353,4244,4.353,4245,4.353,4246,4.353,4247,4.353,4248,4.353,4249,4.353,4250,3.255,4251,4.353,4252,4.353,4253,3.842,4254,4.353,4255,5.987,4256,3.842,4257,4.353,4258,5.987,4259,4.353,4260,4.822,4261,3.842,4262,3.842,4263,4.353,4264,6.843,4265,5.987,4266,4.353,4267,4.353,4268,4.353,4269,3.842,4270,4.353,4271,3.506,4272,3.842,4273,4.353,4274,4.353,4275,4.353,4276,4.353,4277,4.353]],["title/additional-documentation/nestjs-application/software-architecture.html",[567,1.429,1421,1.624,3395,2.451,4278,2.174]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.595,4,0.073,5,0.072,12,1.588,16,1.001,21,0.461,23,0.503,24,0.004,25,0.261,32,0.332,33,0.908,34,0.595,52,0.491,62,0.805,63,0.433,64,2.493,65,1.547,68,2.759,69,0.677,73,0.892,75,3.066,79,0.95,80,0.002,81,0.002,82,0.001,88,2.767,89,0.703,97,0.481,110,3.112,111,2.211,112,2.621,114,0.892,115,1.9,121,1.415,122,1.293,124,1.867,139,0.251,145,1.867,150,0.59,158,1.009,160,0.677,201,0.827,203,1.667,205,3.553,208,0.843,216,2.293,226,1.024,233,0.765,248,4.749,249,0.63,251,0.59,254,1.242,258,0.892,259,1.999,268,0.732,270,4.711,271,0.892,272,2.096,273,3.837,290,1.091,292,0.849,298,0.571,300,0.892,334,3.325,335,1.807,338,3.287,339,0.95,340,3.844,342,0.732,359,1.9,364,0.95,365,1.009,387,1.075,395,1.667,400,0.801,412,0.59,416,0.703,418,0.63,431,0.571,434,1.195,446,1.575,465,0.95,471,1.293,482,1.293,492,0.801,500,1.493,501,0.892,502,3.891,517,2.955,524,4.333,525,3.498,533,3.608,543,0.892,550,0.765,566,2.982,567,1.314,569,3.844,600,3.391,609,1.802,626,1.737,627,2.638,628,3.923,629,2.499,631,1.489,635,1.635,647,0.677,653,1.9,657,2.115,682,3.199,713,0.892,714,3.79,715,0.801,720,1.024,742,0.892,745,0.843,747,2.012,783,1.35,794,3.965,795,0.843,805,0.732,809,1.415,811,3.943,812,1.293,820,0.843,833,1.075,834,2.741,836,0.892,847,0.843,853,1.999,859,3.693,872,0.843,878,1.999,904,0.95,905,2.293,907,1.867,908,0.95,909,4.471,911,0.801,925,3.218,965,0.95,973,2.115,974,0.892,978,1.415,979,0.801,981,0.732,982,2.719,986,1.575,1016,0.801,1024,1.024,1025,0.843,1026,2.914,1029,2.115,1047,2.914,1049,0.892,1050,3.105,1084,0.765,1090,1.981,1091,0.765,1235,0.843,1255,0.892,1328,0.843,1335,0.843,1364,0.892,1393,0.703,1421,0.63,1449,0.703,1460,2.537,1492,1.195,1576,0.892,1592,1.807,1602,1.9,1629,2.293,1679,2.918,1681,1.981,1682,3.105,1684,0.892,1688,3.287,1689,1.024,1691,0.892,1692,0.892,1708,5.596,1715,2.66,1771,2.253,1789,0.892,1791,0.843,1792,1.024,1821,1.678,1904,1.575,1905,1.807,1911,1.024,1912,2.115,1915,2.427,1929,1.807,1933,0.843,1935,1.9,1940,0.95,1954,1.122,1961,0.892,1962,2.914,1986,1.122,1993,1.122,1997,1.122,2000,1.122,2035,1.122,2037,2.66,2060,0.95,2062,0.843,2071,1.024,2075,1.122,2076,1.807,2091,2.189,2128,1.981,2147,6.323,2149,0.95,2154,1.807,2175,1.489,2178,2.115,2183,2.293,2202,1.122,2206,2.552,2208,5.632,2229,1.122,2236,1.678,2270,1.981,2294,1.489,2317,1.678,2321,0.95,2326,0.732,2333,2.66,2347,1.024,2353,1.024,2367,3.105,2375,1.122,2376,2.115,2382,2.719,2386,0.892,2393,3.21,2400,3.218,2401,0.95,2405,1.122,2421,4.683,2424,1.122,2425,1.678,2428,1.024,2430,1.122,2436,1.122,2446,1.807,2451,2.427,2468,5.114,2481,2.253,2482,0.892,2483,1.024,2487,1.999,2493,3.218,2502,1.575,2521,1.024,2554,1.024,2561,0.892,2568,0.892,2569,3.665,2570,1.024,2580,1.981,2611,2.66,2614,2.754,2619,0.892,2629,1.981,2635,2.66,2669,1.122,2674,1.024,2679,0.95,2691,2.427,2693,1.024,2719,2.719,2721,1.024,2730,1.024,2776,2.891,2782,1.024,2784,0.95,2821,1.122,2828,1.122,2839,1.981,2861,2.115,2862,3.665,2872,1.981,2881,1.678,2895,1.678,2926,1.024,2960,1.024,2963,1.024,2967,3.21,2968,0.95,2974,2.253,2977,1.024,2990,1.122,2996,1.807,3026,1.122,3037,3.991,3050,1.122,3067,0.843,3077,1.122,3086,1.678,3107,1.981,3302,1.807,3324,2.253,3330,1.575,3331,1.575,3333,2.115,3336,3.477,3337,2.552,3340,0.892,3343,1.807,3345,1.122,3346,0.95,3364,0.95,3371,1.415,3383,1.678,3394,1.807,3395,0.95,3405,1.981,3407,1.024,3410,1.122,3415,1.122,3418,1.122,3421,1.122,3431,1.024,3434,1.122,3445,1.122,3457,1.807,3458,3.429,3461,3.693,3464,1.678,3475,2.719,3488,2.914,3491,1.122,3496,1.122,3497,4.333,3516,0.843,3519,1.122,3521,1.981,3537,1.024,3539,2.66,3543,1.122,3545,1.122,3552,1.122,3554,1.999,3562,1.122,3563,1.122,3571,5.136,3577,1.024,3579,1.024,3581,1.807,3583,1.024,3585,1.122,3605,0.892,3612,2.719,3616,1.122,3641,0.892,3642,1.122,3660,1.122,3670,1.024,3674,0.892,3688,1.122,3691,1.122,3696,1.122,3700,1.981,3711,0.892,3713,1.122,3730,1.122,3743,1.981,3744,3.665,3764,1.024,3773,3.21,3774,1.122,3776,0.892,3778,1.122,3786,1.024,3806,1.122,3810,1.122,3812,1.122,3814,4.471,3817,1.122,3830,1.122,3858,4.047,3888,1.122,3906,1.122,3915,3.991,3938,4.639,3953,1.024,3966,1.122,3967,1.122,3968,3.844,3979,1.122,4009,1.981,4022,1.122,4038,1.024,4047,1.024,4049,1.807,4052,1.122,4053,3.429,4058,1.122,4086,1.981,4101,1.122,4220,1.024,4250,0.95,4261,1.122,4278,5.08,4279,1.271,4280,1.271,4281,5.305,4282,5.55,4283,2.244,4284,3.013,4285,2.66,4286,4.247,4287,2.244,4288,2.66,4289,4.954,4290,1.271,4291,1.271,4292,2.719,4293,3.21,4294,1.271,4295,1.271,4296,1.271,4297,1.271,4298,1.271,4299,2.244,4300,2.244,4301,1.271,4302,1.271,4303,4.152,4304,1.271,4305,1.271,4306,3.013,4307,2.244,4308,1.271,4309,1.271,4310,1.271,4311,1.271,4312,6.505,4313,1.271,4314,1.271,4315,1.271,4316,1.271,4317,2.244,4318,4.585,4319,1.271,4320,1.271,4321,2.244,4322,2.244,4323,3.636,4324,3.013,4325,3.636,4326,1.271,4327,3.21,4328,3.21,4329,1.271,4330,1.271,4331,1.271,4332,1.271,4333,1.271,4334,1.271,4335,2.929,4336,2.244,4337,1.024,4338,2.66,4339,1.271,4340,1.271,4341,1.271,4342,6.921,4343,1.271,4344,6.512,4345,1.271,4346,1.981,4347,1.271,4348,1.271,4349,2.244,4350,1.024,4351,3.895,4352,5.55,4353,1.271,4354,2.66,4355,1.981,4356,2.244,4357,1.271,4358,1.271,4359,1.271,4360,1.271,4361,1.271,4362,1.271,4363,3.21,4364,2.244,4365,1.271,4366,1.122,4367,1.271,4368,1.271,4369,1.271,4370,1.122,4371,1.271,4372,2.427,4373,1.271,4374,1.271,4375,1.271,4376,1.271,4377,1.271,4378,1.271,4379,1.271,4380,1.122,4381,1.271,4382,3.013,4383,1.271,4384,1.271,4385,1.271,4386,2.929,4387,2.244,4388,1.271,4389,2.244,4390,3.013,4391,1.271,4392,1.271,4393,1.271,4394,1.981,4395,2.244,4396,3.013,4397,1.271,4398,1.271,4399,1.271,4400,1.271,4401,1.271,4402,1.271,4403,1.122,4404,1.271,4405,2.244,4406,1.271,4407,1.271,4408,5.55,4409,1.271,4410,1.122,4411,1.024,4412,1.271,4413,1.271,4414,1.271,4415,0.95,4416,1.271,4417,1.271,4418,1.271,4419,1.271,4420,1.271,4421,2.244,4422,3.013,4423,1.271,4424,1.271,4425,1.271,4426,1.271,4427,2.244,4428,1.271,4429,1.271,4430,1.271,4431,1.981,4432,1.271,4433,1.271,4434,1.271,4435,2.244,4436,1.271,4437,1.122,4438,1.271,4439,2.244,4440,1.271,4441,1.271,4442,1.122,4443,1.271,4444,1.271,4445,1.122,4446,1.271,4447,1.271,4448,2.244,4449,1.271,4450,1.271,4451,1.271,4452,1.271,4453,1.271,4454,1.122,4455,1.271,4456,1.271,4457,1.271,4458,1.122,4459,1.122,4460,3.013,4461,1.271,4462,1.271,4463,1.271,4464,1.271,4465,1.271,4466,1.271,4467,2.244,4468,1.271,4469,1.122,4470,1.271,4471,3.013,4472,1.122,4473,1.271,4474,1.271,4475,2.244,4476,1.271,4477,2.244,4478,1.271,4479,1.271,4480,1.271,4481,1.271,4482,1.271,4483,1.271,4484,1.271,4485,2.244,4486,1.271,4487,1.271,4488,1.271,4489,1.271,4490,1.271,4491,1.271,4492,1.271,4493,1.271,4494,7.462,4495,1.271,4496,1.271,4497,4.152,4498,1.122,4499,1.271,4500,1.271,4501,2.244,4502,1.271,4503,1.271,4504,1.271,4505,1.271,4506,1.271,4507,1.271,4508,1.271,4509,1.122,4510,1.271,4511,1.271,4512,1.271,4513,1.122,4514,1.271,4515,1.271,4516,1.271,4517,1.271,4518,2.244,4519,1.271,4520,1.271,4521,2.253,4522,1.271,4523,1.271,4524,1.024,4525,1.271,4526,1.271,4527,1.271,4528,4.152,4529,1.271,4530,1.271,4531,1.271,4532,1.271,4533,1.271,4534,1.271,4535,1.271,4536,1.271,4537,1.271,4538,1.271,4539,1.271,4540,1.271,4541,1.271,4542,2.244,4543,1.271,4544,1.271,4545,2.244,4546,1.271,4547,1.271,4548,1.271,4549,2.244,4550,1.271,4551,1.271,4552,1.271,4553,1.271,4554,1.271,4555,1.122,4556,2.244,4557,1.271,4558,2.244,4559,1.271,4560,1.271,4561,1.271,4562,1.122,4563,2.244]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[88,1.15,567,1.255,1421,1.426,4278,1.909,4351,2.019]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.228,2,0.453,3,0.091,4,0.075,5,0.177,10,0.778,12,1.394,16,0.464,18,0.585,20,1.221,21,0.69,24,0.009,25,0.798,26,0.228,29,1.46,30,0.782,32,0.599,34,0.731,51,0.164,52,1.075,61,0.233,64,2.911,65,1.9,68,2.228,69,3.771,74,2.334,75,1,80,0.005,81,0.004,82,0.002,88,1.48,110,2.817,111,2.478,122,1.322,123,3.543,124,1.177,132,1.185,139,0.919,142,2.302,144,2.891,145,1.031,149,1.567,150,2.907,160,1.971,173,2.808,174,1.522,179,3.087,180,2.228,181,3.368,185,2.808,187,0.509,190,1.2,203,1.269,205,2.478,207,1.23,208,1.522,220,1.031,223,1.328,249,2.307,251,2.907,253,3.214,260,1.715,261,1.847,268,2.133,269,1.61,270,2.955,272,2.682,290,0.432,292,1.401,332,2.934,342,2.133,363,1.627,365,1.664,369,1.81,395,2.048,432,1.064,434,1.221,444,0.917,460,1.847,461,1.522,464,3.058,466,1.221,482,1.322,489,2.682,493,2.991,500,1.835,502,3.51,513,1.099,515,1.522,524,3.48,550,1.38,552,2.904,566,3.526,567,2.029,568,1.322,570,1.847,572,1.847,577,2.025,579,3.771,600,3.516,609,1.137,625,1.446,626,3.377,627,3.336,630,3.087,631,1.522,632,1.522,633,1.522,635,2.401,638,1.61,639,1.031,643,1.38,648,2.456,653,1.446,657,1.61,673,2.801,682,1.322,700,2.025,711,1.522,714,1.446,745,3.087,747,2.955,782,3.748,784,2.982,794,3.511,795,1.522,802,1.522,806,1.61,809,1.446,811,3.48,812,2.133,829,1.9,847,1.522,904,1.715,905,2.334,912,1.715,925,1.61,946,1.61,965,2.768,981,2.682,986,2.598,988,1.38,1025,2.456,1038,1.522,1075,1.715,1077,2.133,1085,1.522,1093,3.695,1099,1.715,1102,1.61,1118,2.025,1119,2.025,1120,2.025,1121,2.025,1122,2.025,1123,2.025,1132,1.847,1151,3.266,1229,1.61,1286,2.025,1328,1.522,1393,2.048,1449,2.048,1450,1.847,1460,1.269,1492,1.221,1521,2.682,1552,1.522,1564,1.522,1629,1.446,1674,1.715,1679,3.467,1684,1.61,1687,1.446,1698,2.025,1708,4.551,1720,1.847,1790,1.61,1863,1.522,1869,1.446,1883,4.72,1911,3.748,1915,1.847,1929,4.302,1933,4.157,1961,1.61,1962,3.266,2018,2.025,2050,2.025,2091,2.228,2146,2.025,2178,2.598,2183,1.446,2206,2.598,2208,1.715,2237,1.715,2238,2.768,2326,2.133,2382,1.715,2386,1.61,2388,1.847,2394,1.847,2395,2.456,2400,1.61,2401,1.715,2421,1.61,2446,3.748,2457,1.847,2502,2.598,2507,2.768,2515,2.025,2517,2.025,2556,4.112,2568,2.598,2599,2.025,2605,1.847,2608,2.025,2614,1.522,2619,1.61,2622,2.025,2640,2.025,2641,2.025,2725,2.025,2771,2.025,2776,1.446,2846,1.715,2881,1.715,2902,2.982,2937,2.025,2943,1.847,2963,1.847,2973,1.715,3067,1.522,3321,1.847,3331,4.971,3336,1.61,3339,2.025,3340,1.61,3346,3.994,3347,1.446,3356,2.025,3364,1.715,3365,2.025,3371,1.446,3377,1.847,3382,1.847,3383,3.994,3386,2.025,3417,2.025,3433,1.847,3435,2.025,3464,1.715,3473,3.748,3475,1.715,3488,4.112,3497,1.715,3511,2.025,3516,1.522,3537,1.847,3546,1.847,3547,2.025,3549,1.715,3554,1.522,3568,2.025,3577,1.847,3583,1.847,3605,1.61,3612,1.715,3641,2.598,3653,2.025,3674,1.61,3711,1.61,3764,1.847,3776,1.61,3814,2.982,3891,4.108,3928,2.982,3938,2.768,3968,1.522,3988,2.025,4038,1.847,4053,3.994,4054,3.748,4060,4.971,4067,3.748,4098,3.748,4125,3.087,4154,2.025,4167,2.025,4173,2.025,4220,1.847,4224,2.025,4260,2.982,4278,3.087,4281,2.025,4292,1.715,4312,3.748,4328,2.025,4344,6.359,4346,2.025,4350,2.982,4351,4.112,4366,2.025,4370,2.025,4372,1.847,4380,2.025,4386,1.847,4394,2.025,4403,3.267,4410,4.108,4415,2.768,4442,2.025,4445,3.267,4459,4.108,4469,3.267,4509,3.267,4513,2.025,4521,1.715,4564,1.847,4565,2.025,4566,2.294,4567,4.654,4568,2.294,4569,5.818,4570,2.982,4571,2.294,4572,3.701,4573,5.34,4574,2.294,4575,2.294,4576,2.294,4577,2.294,4578,2.294,4579,2.294,4580,2.294,4581,3.701,4582,2.294,4583,2.294,4584,2.294,4585,2.025,4586,3.701,4587,4.654,4588,2.294,4589,2.294,4590,2.294,4591,2.294,4592,2.294,4593,2.294,4594,2.025,4595,3.701,4596,2.294,4597,1.847,4598,2.294,4599,2.294,4600,2.294,4601,2.294,4602,2.294,4603,2.294,4604,2.294,4605,2.294,4606,3.701,4607,3.701,4608,2.294,4609,2.294,4610,3.701,4611,2.294,4612,2.294,4613,2.294,4614,2.294,4615,2.294,4616,2.294,4617,2.294,4618,2.294,4619,2.294,4620,2.294,4621,2.294,4622,2.294,4623,2.294,4624,2.294,4625,2.294,4626,2.294,4627,2.294,4628,2.294,4629,2.294,4630,2.294,4631,2.294,4632,1.715,4633,2.294,4634,2.294,4635,2.294,4636,2.294,4637,2.294,4638,2.025,4639,2.294,4640,2.294,4641,2.294,4642,2.294,4643,2.294,4644,2.294,4645,2.294,4646,2.025,4647,2.294,4648,2.294,4649,1.847,4650,2.294,4651,2.025,4652,2.294,4653,2.294,4654,2.294,4655,2.294,4656,2.294,4657,2.294,4658,2.294,4659,2.294,4660,2.294,4661,2.025,4662,2.294]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[567,1.255,1421,1.426,4060,2.019,4292,2.152,4663,2.54]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,1.959,21,0.365,24,0.009,29,0.905,34,1.342,39,0.496,52,0.859,63,1.237,64,2.917,65,3.181,69,4.008,74,2.289,75,3.282,80,0.004,81,0.005,82,0.004,88,2.105,109,2.924,112,1.583,115,3.32,123,2.408,132,1.168,139,1.04,158,1.632,190,1.177,197,1.707,207,1.206,223,2.59,226,4.241,233,2.185,251,2.443,254,2.914,270,4.297,271,4.348,272,2.092,273,2.185,290,0.684,323,1.799,332,2.289,335,4.241,338,2.408,339,2.714,340,2.408,356,1.799,366,1.863,369,2.409,380,3.493,387,1.74,393,2.367,444,1.451,465,4.634,482,3.917,502,1.933,525,2.408,533,1.863,543,2.547,550,2.185,552,2.61,566,4.787,600,1.684,609,2.61,627,4.317,632,2.408,633,2.408,635,2.367,713,2.547,714,2.289,726,2.289,740,2.408,747,2.914,794,3.577,802,2.408,806,2.547,888,3.493,903,2.547,907,1.863,923,2.408,979,3.907,981,3.035,1036,2.408,1043,2.408,1075,2.714,1235,2.408,1335,2.408,1364,2.547,1375,3.204,1407,3.204,1474,2.924,1564,2.408,1602,2.289,1629,2.289,1679,3.429,1689,2.924,1708,2.408,1714,4.648,1772,2.714,1904,2.547,1907,2.547,1947,2.289,1991,5.47,2021,3.204,2091,2.185,2183,3.32,2201,2.714,2206,4.348,2236,2.714,2238,2.714,2359,2.924,2367,2.714,2395,2.408,2399,4.241,2457,2.924,2493,2.547,2522,3.204,2561,2.547,2614,2.408,2619,5.064,2719,2.714,2730,2.924,2861,3.695,2902,4.241,2926,2.924,2943,4.241,2968,2.714,3067,3.493,3086,2.714,3228,2.924,3317,2.547,3331,2.547,3333,3.695,3336,2.547,3337,3.695,3340,2.547,3374,2.924,3376,2.714,3428,2.714,3433,4.241,3458,5.629,3464,2.714,3475,2.714,3488,3.695,3516,2.408,3554,3.493,3605,3.695,3674,2.547,3711,3.695,3776,2.547,3915,2.924,3938,2.714,3957,3.204,3968,2.408,4006,2.924,4021,2.714,4034,4.648,4035,2.924,4049,2.924,4060,6.063,4125,2.408,4217,2.924,4250,2.714,4260,2.924,4278,4.509,4288,3.204,4292,3.938,4293,3.204,4335,2.924,4337,2.924,4344,5.397,4386,2.924,4415,3.938,4437,3.204,4458,3.204,4498,3.204,4524,2.924,4564,2.924,4569,4.648,4585,4.648,4632,2.714,4646,3.204,4649,2.924,4651,3.204,4663,3.204,4664,3.63,4665,3.63,4666,3.63,4667,3.63,4668,3.63,4669,3.63,4670,3.63,4671,3.63,4672,5.265,4673,3.63,4674,3.63,4675,3.63,4676,3.63,4677,3.63,4678,3.63,4679,3.63,4680,3.63,4681,3.63,4682,3.63,4683,3.63,4684,3.63,4685,3.63,4686,3.63,4687,3.204,4688,3.63,4689,3.63,4690,3.63,4691,3.204,4692,3.63,4693,3.63,4694,3.204,4695,3.63,4696,3.63,4697,3.63,4698,3.63,4699,3.63,4700,3.63,4701,4.648,4702,3.63,4703,3.63,4704,3.63,4705,3.63,4706,3.63,4707,3.63,4708,3.63,4709,3.63,4710,3.63,4711,3.63,4712,3.63,4713,3.63,4714,3.63,4715,3.63,4716,3.63,4717,3.63,4718,3.63,4719,3.63,4720,3.63,4721,3.63,4722,3.63,4723,3.63,4724,3.63,4725,3.63,4726,3.63,4727,3.63,4728,3.63,4729,3.63,4730,3.63,4731,3.204,4732,3.63,4733,2.924,4734,3.63,4735,3.204,4736,3.63,4737,3.63,4738,3.63,4739,3.63,4740,2.924]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[334,1.814,567,1.255,1421,1.426,3968,1.909,4286,2.318]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.184,18,1.114,24,0.009,25,0.508,26,0.454,32,2.02,39,1.156,51,0.303,61,0.162,64,2.58,75,1.904,80,0.004,81,0.006,82,0.006,88,2.74,89,2.415,90,1.745,94,4.832,97,2.27,109,3.516,110,2.697,111,3.649,112,3.373,115,2.752,121,2.752,122,2.516,124,3.971,142,2.168,160,3.194,187,0.969,190,1.415,203,2.415,216,4.321,246,3.516,249,2.164,251,3.18,253,2.627,268,2.516,270,4.28,271,3.063,272,3.457,273,2.627,290,1.13,329,3.61,332,2.752,334,3.782,338,2.896,340,4.895,346,3.264,471,3.457,513,2.092,526,1.963,527,4.44,533,4.343,549,3.853,550,3.61,551,2.516,552,2.973,553,3.063,561,3.516,562,4.209,566,2.627,567,2.616,568,3.95,600,2.783,628,2.164,630,2.896,682,2.516,714,4.321,715,5.258,744,3.782,748,3.516,794,2.164,812,3.457,853,3.979,858,3.853,859,3.516,861,3.853,865,3.853,867,3.853,868,3.853,905,2.752,907,3.079,925,3.063,973,3.063,975,3.853,978,2.752,986,4.209,988,3.61,1131,4.486,1227,3.853,1382,3.853,1393,2.415,1492,2.324,1679,3.319,1684,3.063,1896,3.516,2007,3.264,2091,2.627,2175,2.896,2326,2.516,2386,3.063,2625,3.853,2679,3.264,2832,5.295,3330,3.063,3347,2.752,3560,3.853,3687,3.853,3928,3.516,3968,2.896,3972,3.853,4256,3.853,4286,4.832,4411,3.516,4454,3.853,4570,3.516,4594,3.853,4597,3.516,4632,3.264,4638,3.853,4649,3.516,4661,3.853,4740,3.516,4741,4.365,4742,7.379,4743,4.365,4744,4.365,4745,7.379,4746,3.853,4747,4.365,4748,4.365,4749,6.853,4750,4.365,4751,4.365,4752,4.365,4753,4.365,4754,5.998,4755,4.365,4756,4.365,4757,4.365,4758,4.365,4759,3.853,4760,4.365,4761,5.998,4762,4.365,4763,4.365,4764,4.365,4765,4.365,4766,4.365,4767,4.365,4768,4.365,4769,4.365,4770,4.365,4771,4.365,4772,4.365,4773,4.365]],["title/additional-documentation/nestjs-application/testing.html",[567,1.66,911,2.4,1421,1.886]],["body/additional-documentation/nestjs-application/testing.html",[0,0.103,1,1.168,2,0.4,12,1.017,13,1.633,21,0.43,23,0.339,24,0.009,25,0.497,32,1.296,51,0.148,52,0.33,55,0.529,64,2.718,69,2.275,74,2.11,75,2.394,80,0.005,81,0.003,82,0.002,88,2.363,103,0.46,110,0.911,112,0.884,121,2.695,122,3.164,132,1.451,139,0.661,142,2.006,144,1.301,145,1.921,149,1.809,158,0.911,160,2.275,173,0.971,180,2.014,190,1.385,191,1.789,192,1.789,198,0.884,201,0.747,203,3.863,205,0.94,206,1.079,208,1.345,212,1.789,223,2.569,249,4.281,251,0.94,254,2.365,258,1.422,260,1.516,269,1.422,270,2.365,272,1.168,297,2.014,329,1.22,336,1.633,361,1.122,363,1.735,393,0.911,402,1.278,412,0.94,418,1.005,430,0.94,431,0.911,434,1.782,464,0.94,492,1.278,493,2.163,500,4.241,502,2.923,504,5.218,513,0.971,516,4.422,517,2.923,518,3.996,519,4.106,524,1.516,525,2.835,530,1.516,533,1.04,552,1.005,562,1.422,564,2.11,565,2.954,566,3.558,568,1.168,600,2.301,606,1.422,611,1.168,625,1.278,627,1.079,628,2.118,635,2.23,647,1.782,653,2.11,657,1.422,667,1.422,682,4.125,683,1.345,709,1.516,715,1.278,726,3.943,742,1.422,744,3.727,745,3.291,747,3.271,762,1.516,783,1.22,785,1.633,790,1.345,791,2.348,794,3.548,806,1.422,832,1.422,833,0.971,902,1.633,905,2.11,907,1.718,911,5.052,924,1.633,976,1.516,977,1.789,979,1.278,980,1.789,982,3.71,986,1.422,988,2.572,997,2.502,999,2.22,1014,1.789,1016,1.278,1027,1.516,1036,1.345,1038,1.345,1043,3.922,1046,2.695,1049,1.422,1070,1.422,1071,2.502,1075,2.502,1084,2.014,1091,1.22,1093,1.278,1105,1.345,1107,1.278,1144,1.789,1222,2.695,1229,3.853,1230,2.22,1235,3.291,1239,1.633,1242,2.695,1277,1.789,1325,3.128,1328,3.291,1335,2.835,1372,1.633,1373,1.633,1393,1.122,1437,1.345,1449,1.122,1460,1.852,1521,4.362,1543,2.348,1563,1.789,1576,1.422,1629,1.278,1641,1.422,1675,1.633,1679,2.745,1682,1.516,1687,1.278,1691,2.999,1692,1.422,1708,4.496,1771,1.516,1772,2.502,1789,3.853,1790,1.422,1791,1.345,1792,1.633,1863,1.345,1883,1.633,1901,1.422,1912,1.422,1921,1.789,1947,1.278,1962,3.481,2015,2.954,2026,1.516,2027,1.789,2045,1.789,2052,4.846,2062,1.345,2071,1.633,2091,1.22,2096,5.52,2123,1.789,2147,1.516,2165,1.789,2171,1.633,2175,2.22,2183,2.11,2184,1.633,2201,3.196,2204,3.996,2208,1.516,2214,1.633,2238,1.516,2279,1.789,2291,1.789,2311,1.789,2326,4.362,2367,2.502,2376,2.999,2384,1.789,2386,4.148,2388,1.633,2394,1.633,2395,1.345,2397,1.633,2400,4.148,2410,1.789,2421,2.348,2434,1.789,2451,1.633,2482,2.348,2483,1.633,2493,1.422,2507,4.421,2534,3.442,2553,1.633,2558,2.695,2561,1.422,2563,1.789,2568,2.348,2573,1.633,2606,1.789,2619,2.348,2636,3.442,2721,1.633,2762,3.772,2776,1.278,2784,1.516,2820,1.633,2847,2.502,2853,1.633,2861,3.853,2881,1.516,2888,5.218,2895,2.502,2973,1.516,2974,1.516,3005,1.633,3031,1.789,3067,1.345,3083,1.789,3108,1.633,3218,2.502,3259,1.789,3284,1.633,3317,3.853,3331,3.481,3333,2.348,3337,2.348,3371,2.11,3374,2.695,3376,1.516,3377,1.633,3382,1.633,3395,1.516,3407,1.633,3416,1.789,3428,2.502,3436,1.789,3457,1.633,3458,3.196,3461,1.633,3468,2.954,3488,1.422,3497,1.516,3507,1.789,3515,1.789,3516,1.345,3546,1.633,3549,2.502,3554,3.291,3555,1.789,3571,2.695,3579,1.633,3581,1.633,3600,1.789,3605,1.422,3609,1.789,3612,1.516,3641,1.422,3654,1.789,3670,1.633,3674,1.422,3679,1.789,3729,1.633,3735,1.789,3745,5.218,3786,1.633,3912,1.789,3985,1.789,3986,1.789,4004,4.379,4021,1.516,4053,3.196,4057,1.789,4060,1.422,4071,1.789,4078,2.348,4098,1.633,4125,1.345,4217,1.633,4231,1.789,4250,4.889,4253,1.789,4262,1.789,4285,1.789,4312,1.633,4327,1.789,4335,1.633,4338,2.954,4344,5.221,4350,1.633,4351,3.853,4354,1.789,4355,1.789,4372,1.633,4411,1.633,4415,3.71,4472,1.789,4521,1.516,4524,3.442,4562,2.954,4564,3.996,4565,1.789,4570,1.633,4597,1.633,4632,4.106,4687,1.789,4691,1.789,4694,1.789,4701,1.789,4731,4.846,4735,1.789,4740,2.695,4746,1.789,4759,1.789,4774,3.346,4775,2.027,4776,2.027,4777,2.027,4778,2.027,4779,2.027,4780,2.027,4781,2.027,4782,2.027,4783,2.027,4784,2.027,4785,2.027,4786,2.027,4787,2.027,4788,2.027,4789,3.346,4790,2.027,4791,2.027,4792,2.027,4793,2.027,4794,2.027,4795,2.027,4796,2.027,4797,2.027,4798,2.027,4799,2.027,4800,2.027,4801,2.027,4802,2.027,4803,2.027,4804,2.027,4805,2.027,4806,2.027,4807,2.027,4808,2.027,4809,2.027,4810,2.027,4811,2.027,4812,2.027,4813,2.027,4814,2.027,4815,2.027,4816,2.027,4817,2.027,4818,2.027,4819,2.027,4820,3.346,4821,2.027,4822,3.346,4823,2.027,4824,2.027,4825,2.027,4826,3.346,4827,2.027,4828,2.027,4829,2.027,4830,4.273,4831,3.346,4832,3.346,4833,2.027,4834,2.027,4835,4.96,4836,2.027,4837,2.027,4838,2.027,4839,2.027,4840,2.027,4841,2.027,4842,2.027,4843,3.346,4844,2.027,4845,3.346,4846,2.027,4847,3.346,4848,2.027,4849,2.027,4850,2.027,4851,2.027,4852,2.027,4853,3.346,4854,3.346,4855,2.027,4856,3.346,4857,2.027,4858,2.027,4859,2.027,4860,2.027,4861,3.346,4862,2.027,4863,2.027,4864,2.027,4865,2.027,4866,2.027,4867,2.027,4868,3.346,4869,3.346,4870,2.027,4871,2.027,4872,2.027,4873,2.027,4874,2.027,4875,2.027,4876,2.027,4877,2.027,4878,2.027,4879,2.027,4880,2.027,4881,2.027,4882,2.027,4883,2.027,4884,3.346,4885,2.027,4886,2.027,4887,2.027,4888,2.027,4889,2.027,4890,2.027,4891,2.027,4892,2.027,4893,2.027,4894,2.027,4895,2.027,4896,2.027,4897,2.027,4898,2.027,4899,2.027,4900,2.027,4901,2.027,4902,2.027,4903,2.027,4904,2.027,4905,2.027,4906,2.027,4907,2.027,4908,2.027,4909,2.027,4910,2.027,4911,2.027,4912,2.027,4913,2.027,4914,2.027,4915,2.027,4916,2.027]],["title/additional-documentation/nestjs-application/decisions.html",[567,1.66,1421,1.886,4733,3.065]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.429,16,1.175,24,0.008,29,1.449,52,0.948,54,2.984,55,1.518,64,2.756,69,3.853,80,0.006,81,0.007,82,0.006,110,2.613,248,3.665,259,3.856,273,3.498,432,3.357,512,4.347,513,2.786,517,3.095,552,2.881,628,2.881,632,4.801,633,3.856,647,3.095,682,3.35,787,3.856,791,4.079,794,2.881,926,4.969,959,5.412,987,5.131,1016,4.969,1023,3.665,1043,3.856,1328,4.801,1393,3.216,1460,4.004,1679,3.216,1904,4.079,2062,3.856,2154,4.682,2178,4.079,2264,5.131,2321,5.893,2326,3.35,2350,4.682,2495,5.131,2556,4.079,2570,4.682,2614,3.856,2691,5.829,2714,5.131,2776,3.665,2920,5.131,2973,4.347,3330,4.079,3516,3.856,3953,4.682,4035,4.682,4278,3.856,4337,5.829,4351,4.079,4363,5.131,4521,4.347,4555,5.131,4733,5.829,4917,5.812,4918,5.812,4919,5.812,4920,5.812,4921,5.812,4922,5.812,4923,5.812,4924,5.812,4925,5.812,4926,7.236,4927,5.812,4928,5.812,4929,5.812,4930,5.812,4931,5.812,4932,5.812,4933,5.812,4934,5.812,4935,5.812,4936,5.812,4937,5.812,4938,5.812,4939,5.812,4940,5.812]],["title/additional-documentation/nestjs-application/vscode.html",[567,1.66,1421,1.886,4271,3.065]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.182,24,0.008,65,3.93,74,4.019,75,3.339,80,0.006,81,0.008,82,0.006,249,3.795,334,4.019,500,3.159,552,3.795,639,3.442,673,4.608,1036,4.228,1255,4.473,1460,3.527,1679,3.527,1688,4.228,1791,4.228,1821,4.766,1946,4.228,2317,4.766,2326,3.673,2395,4.228,2605,6.167,2942,5.134,3347,4.019,3348,6.758,3473,5.134,3565,4.473,3676,5.626,4024,7.244,4051,5.626,4078,5.373,4125,4.228,4160,5.134,4269,5.626,4271,6.167,4272,5.626,4941,6.373,4942,6.373,4943,6.373,4944,6.373,4945,6.373,4946,6.373,4947,6.373,4948,6.373,4949,6.373,4950,6.373]],["title/additional-documentation/nestjs-application/git.html",[567,1.66,1421,1.886,3381,3.065]],["body/additional-documentation/nestjs-application/git.html",[24,0.008,80,0.007,81,0.008,82,0.007,342,4.02,431,3.136,905,4.398,907,3.581,1492,3.714,1552,4.627,3006,4.895,3102,6.038,3381,6.865,4431,6.157,4951,6.975,4952,6.975,4953,6.975,4954,6.975,4955,6.975]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":323,"title":{},"body":{"interfaces/CacheEntry.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3246,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3285,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3296,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":3208,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":3198,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3207,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3274,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3307,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3299,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3267,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3192,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3250,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3110,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3146,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3151,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3141,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3121,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3130,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3109,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3143,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3128,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3139,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3150,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3157,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4891,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4893,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1325,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3275,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3288,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3233,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3220,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3270,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":4843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3230,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3315,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3286,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":3203,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":4845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":3199,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":3236,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":3178,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3211,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3112,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3120,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3118,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3142,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3147,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3140,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3160,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3149,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1419,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":3111,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1957,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["12",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":3277,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2103,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1316",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1966,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["1499",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1951,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1940,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3231,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2131,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1735",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2087,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1996",{"_index":3628,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4934,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4933,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":2204,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.0.3",{"_index":3269,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":3234,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3248,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3271,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3295,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":3197,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":3195,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3215,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":3148,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2080,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3392,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2900,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2125,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":2167,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2649,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":4074,"title":{},"body":{"todo.html":{}}}],["3",{"_index":2201,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3281,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3290,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4884,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3278,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3291,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":3138,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2119,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":4142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":3117,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2847,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":3205,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3303,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3226,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3243,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3180,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":3209,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":3173,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":3179,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3227,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":3186,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3335,"title":{},"body":{"index.html":{}}}],["4/6",{"_index":3134,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3136,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":4086,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4771,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":748,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":4048,"title":{},"body":{"overview.html":{}}}],["4385",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2026,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":3194,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3312,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3229,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3273,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":3145,"title":{},"body":{"coverage.html":{}}}],["5/23",{"_index":3144,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3119,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4762,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":3135,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4892,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":2027,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3213,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3190,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3188,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":2084,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3292,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3279,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3137,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":306,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["6060",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":3133,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3707,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3724,"title":{},"body":{"license.html":{}}}],["7",{"_index":1704,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":3216,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":3184,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3183,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3225,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":3182,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":3181,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3310,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":3238,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":4175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8020",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1425,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3355,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":477,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":723,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":736,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":724,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":738,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1307,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1793,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":1757,"title":{},"body":{"injectables/TaskUC.html":{}}}],["a.m",{"_index":3385,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":4814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":3764,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3383,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3652,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4014,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":268,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":459,"title":{},"body":{"classes/CourseTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":3844,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3843,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4065,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":3009,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":502,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2554,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2569,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1311,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3692,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4018,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3463,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3651,"title":{},"body":{"license.html":{}}}],["according",{"_index":4009,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":832,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":60,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["achieve",{"_index":4022,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3591,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3893,"title":{},"body":{"license.html":{}}}],["act",{"_index":4813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2942,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":958,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3509,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3934,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4672,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3915,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3744,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3487,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1492,"title":{},"body":{"classes/RoleCache.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["add(selector",{"_index":1497,"title":{},"body":{"classes/RoleCache.html":{}}}],["addbearerauth",{"_index":4196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":981,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1993,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":567,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4638,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1308,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1314,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3967,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3482,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2580,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2333,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4698,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2436,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3626,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3770,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4005,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3771,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3390,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3874,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3588,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach",{"_index":4808,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4899,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":4806,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2840,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3641,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3679,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":4042,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3951,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3992,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4669,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3902,"title":{},"body":{"license.html":{}}}],["aims",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":3189,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":932,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":4104,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3881,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1036,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1629,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1821,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":4804,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":3654,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":1255,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3446,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3703,"title":{},"body":{"license.html":{}}}],["always",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":2076,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":3191,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3306,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3845,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3439,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3614,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3664,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3496,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4623,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ResolvedUser.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":3114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":109,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":4146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":485,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1275,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1296,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1294,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1153,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1292,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1289,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1101,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1115,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1631,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":1843,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":83,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":814,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":117,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":745,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4901,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4896,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":346,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":345,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":343,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":344,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":4102,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3501,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":75,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":662,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3330,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4637,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3973,"title":{},"body":{"license.html":{}}}],["apply",{"_index":903,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":4147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4905,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3521,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3646,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4013,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":4170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":4119,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":4131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":4105,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course",{"_index":4133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":4137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":4136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":4141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":4138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":4106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":4108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3319,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":4110,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":4140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":4118,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4109,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":4113,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":4114,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.entity.ts",{"_index":4111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":4139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":4134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../sorting.ts",{"_index":4116,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../status.type.ts",{"_index":4112,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../string",{"_index":3320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":4132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":4135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":4120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":4177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":4187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":675,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/constants.ts",{"_index":3113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":331,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":118,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":557,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":559,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1892,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":548,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":848,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":618,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":3124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":901,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":851,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":862,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":860,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":866,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":857,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":864,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":995,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":969,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":780,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1897,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":3129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":917,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":3131,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":913,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":830,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":936,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:19",{"_index":941,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:9",{"_index":939,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":182,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":998,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":637,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":624,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":462,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1140,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1274,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1282,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1298,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1276,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1281,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1291,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1293,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1297,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1295,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1287,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1280,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1301,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1278,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1299,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1284,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1535,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1818,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1862,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1068,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":1076,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":1086,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":1089,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":1098,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":1080,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":352,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1786,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1064,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1055,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1057,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1058,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1060,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1061,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":1062,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":1063,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":1059,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":1056,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":1065,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":1054,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":1066,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1539,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":816,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1527,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1785,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1855,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1161,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1169,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1167,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1173,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1171,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1528,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1857,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1223,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1305,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1236,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:10",{"_index":1241,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1257,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:24",{"_index":1247,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1251,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1244,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1249,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1343,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1369,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1354,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1350,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1361,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1367,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1360,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1363,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1352,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1356,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1358,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1724,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1730,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1727,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1729,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1731,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1728,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1734,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":1733,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1732,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1616,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1618,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":443,"title":{},"body":{"classes/CourseTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":669,"title":{},"body":{"classes/FileTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":964,"title":{},"body":{"classes/LessonTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/status.type.ts",{"_index":4127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1571,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:15",{"_index":1588,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:18",{"_index":1584,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:22",{"_index":1579,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:25",{"_index":1586,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":1580,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":1581,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:35",{"_index":1582,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:8",{"_index":1578,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1604,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:14",{"_index":1612,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:17",{"_index":1609,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:20",{"_index":1613,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:23",{"_index":1608,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:26",{"_index":1611,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:7",{"_index":1607,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":1876,"title":{},"body":{"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1639,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:7",{"_index":1643,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":1594,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":1599,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:17",{"_index":1601,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:7",{"_index":1597,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1662,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:13",{"_index":1672,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:32",{"_index":1670,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:78",{"_index":1668,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:9",{"_index":1666,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":3152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1658,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1738,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:13",{"_index":1744,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:17",{"_index":1751,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:48",{"_index":1750,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:57",{"_index":1748,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:68",{"_index":1746,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":1458,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:12",{"_index":1464,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:15",{"_index":1463,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:18",{"_index":1461,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:21",{"_index":1469,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:24",{"_index":1467,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:27",{"_index":1465,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:30",{"_index":1468,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:9",{"_index":1462,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":1837,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:16",{"_index":1840,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:14",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:21",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:24",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:6",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":874,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:20",{"_index":1490,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:24",{"_index":1491,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:34",{"_index":1487,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":887,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:18",{"_index":1829,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:21",{"_index":1830,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:24",{"_index":1831,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:30",{"_index":1834,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:36",{"_index":1827,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":1471,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":1473,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":293,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:12",{"_index":1495,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:14",{"_index":1496,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:16",{"_index":1494,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:23",{"_index":1501,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:29",{"_index":1498,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:36",{"_index":1500,"title":{},"body":{"classes/RoleCache.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:44",{"_index":1513,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:46",{"_index":1508,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:53",{"_index":1511,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:6",{"_index":296,"title":{},"body":{"interfaces/CacheEntry.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:64",{"_index":1509,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:75",{"_index":1512,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":1872,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:10",{"_index":1874,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:7",{"_index":1873,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":1515,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":1520,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":1518,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":1877,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":1882,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":1880,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":1847,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:10",{"_index":1852,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:7",{"_index":1850,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":1870,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":3158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1541,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1542,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1547,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/$1",{"_index":4186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":84,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":267,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":278,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":280,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":279,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":277,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":281,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":3161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":521,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":495,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1787,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1799,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1797,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1796,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1801,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1803,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1418,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1426,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1429,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1436,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1440,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1443,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1442,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1441,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1439,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1448,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":3162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":3164,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":263,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":265,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":264,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":266,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":870,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/interface/sorting.ts",{"_index":3166,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":4122,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":4126,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":4128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":3168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4278,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4635,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":4037,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4686,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":4810,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":4700,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":3193,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3996,"title":{},"body":{"license.html":{}}}],["around",{"_index":4049,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3912,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":3923,"title":{},"body":{"license.html":{}}}],["array",{"_index":880,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{}}}],["array.isarray(constraint",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":598,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3623,"title":{},"body":{"license.html":{}}}],["asc",{"_index":4214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asking",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3436,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":3863,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4609,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3572,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3988,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4650,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":4017,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3810,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":4024,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3821,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3794,"title":{},"body":{"license.html":{}}}],["aud",{"_index":840,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":839,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":914,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":186,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":580,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":588,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":590,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":584,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":582,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":586,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":921,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":935,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":934,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":1109,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":1116,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":836,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2568,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1110,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["authentication/interface/jwt",{"_index":1111,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{}}}],["authguard",{"_index":915,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":143,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3793,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1771,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":184,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1226,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1370,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":174,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":180,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3786,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3888,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3927,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3799,"title":{},"body":{"license.html":{}}}],["auto",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4774,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":2013,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2846,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4779,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":3371,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":2279,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":4858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3413,"title":{},"body":{"license.html":{}}}],["aws",{"_index":3085,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2491,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":878,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.createdat",{"_index":1758,"title":{},"body":{"injectables/TaskUC.html":{}}}],["backend",{"_index":1963,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1234,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4711,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1454,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1457,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":269,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":3309,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":629,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":238,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":358,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":357,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basic",{"_index":3581,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":2242,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":3200,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":4198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":4199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":3448,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3459,"title":{},"body":{"license.html":{}}}],["before",{"_index":434,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3356,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3601,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4879,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":336,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1792,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2553,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":3921,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3442,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":4125,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":4021,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1025,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1962,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3681,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1686,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["blackbox",{"_index":4783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":4791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":4685,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1099,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3301,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":828,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":3165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2617,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2136,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":2012,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brb",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4680,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":4045,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":4043,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1707,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1986,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":4055,"title":{},"body":{"todo.html":{}}}],["business",{"_index":270,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":86,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":100,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4761,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1309,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1316,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1310,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1318,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":879,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":304,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["cacheentry",{"_index":291,"title":{"interfaces/CacheEntry.html":{}},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["caches",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2714,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3373,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":525,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1051,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["called",{"_index":2861,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":531,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":743,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2367,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4608,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4887,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2395,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4735,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4766,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3658,"title":{},"body":{"license.html":{}}}],["case",{"_index":566,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3458,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1808,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1811,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":2169,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":983,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3825,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":817,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3783,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3836,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":3204,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1912,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":974,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1902,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1904,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2158,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":1954,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3761,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3425,"title":{},"body":{"license.html":{}}}],["chat",{"_index":2128,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":254,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":785,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3366,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3379,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":2784,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4726,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2853,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":3977,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3280,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3607,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3615,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4016,"title":{},"body":{"license.html":{}}}],["cl1",{"_index":1503,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["cl2",{"_index":1504,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["claim",{"_index":3878,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3890,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":620,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":906,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2619,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2573,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":1493,"title":{},"body":{"classes/RoleCache.html":{},"license.html":{}}}],["clearinterval",{"_index":305,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["clearly",{"_index":4740,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":2267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":273,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1021,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3380,"title":{},"body":{"index.html":{}}}],["close",{"_index":1046,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":4856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":4012,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2384,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":3324,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":1936,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":3081,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2488,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3241,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":175,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":177,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":176,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":178,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":325,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":326,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":621,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":623,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":622,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":992,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":993,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":994,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1218,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1220,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1221,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1219,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1544,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1545,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1655,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1656,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1866,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1867,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1868,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":88,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2762,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":797,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3953,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":4169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["collections",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":445,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["columnnames",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":460,"title":{},"body":{"classes/CourseTaskInfo.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1627,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3453,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3665,"title":{},"body":{"license.html":{}}}],["command",{"_index":4704,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3531,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1572,"title":{},"body":{"classes/Submission.html":{}}}],["commentschema",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3747,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2521,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3903,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3378,"title":{},"body":{"index.html":{}}}],["common",{"_index":3228,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3577,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3409,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4611,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4929,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3673,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3680,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3937,"title":{},"body":{"license.html":{}}}],["compile",{"_index":519,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3559,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3365,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":986,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":3859,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3598,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":2147,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":3210,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":1777,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":3504,"title":{},"body":{"license.html":{}}}],["computesubmissionmetadata",{"_index":1739,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":1929,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3968,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4631,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":3212,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":4795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":3931,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1772,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1552,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":4155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2060,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('request_timeout",{"_index":4213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":333,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2839,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":1048,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1997,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2669,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3847,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3995,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1766,"title":{},"body":{"injectables/TaskUC.html":{}}}],["considered",{"_index":3812,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4732,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2353,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4655,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3645,"title":{},"body":{"license.html":{}}}],["const",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3590,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":659,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1438,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1240,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":578,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1894,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(name",{"_index":307,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["constructor(newsrepo",{"_index":1349,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(private",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":354,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":108,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":664,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":1517,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(taskrepo",{"_index":1743,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":558,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":275,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":937,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":1879,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":1849,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3941,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":2031,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3938,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3361,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3814,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3900,"title":{},"body":{"license.html":{}}}],["context",{"_index":533,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4889,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2349,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3755,"title":{},"body":{"license.html":{}}}],["contract",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3809,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3947,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3416,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3887,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3889,"title":{},"body":{"license.html":{}}}],["control",{"_index":2977,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3892,"title":{},"body":{"license.html":{}}}],["controller",{"_index":493,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":1117,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1632,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('user",{"_index":1844,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1174,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":1884,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/news.controller",{"_index":1225,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1659,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3524,"title":{},"body":{"license.html":{}}}],["convention",{"_index":4787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3510,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3925,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3762,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3518,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3808,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3408,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3402,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2404,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3470,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3404,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3393,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3479,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3604,"title":{},"body":{"license.html":{}}}],["core",{"_index":332,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4955,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1553,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4767,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1227,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4744,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":324,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2386,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3990,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2888,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3562,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3214,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3701,"title":{},"body":{"license.html":{}}}],["count",{"_index":1125,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{}}}],["counted",{"_index":1258,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1267,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3879,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":4129,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3508,"title":{},"body":{"license.html":{}}}],["country",{"_index":3917,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":412,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course_default_color",{"_index":450,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/TaskMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseentities",{"_index":1560,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroups",{"_index":1685,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["courseid",{"_index":966,"title":{},"body":{"classes/LessonTaskInfo.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":351,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursemodel",{"_index":4206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1725,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":361,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":435,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":359,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":3153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofuser",{"_index":1676,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["coursetaskinfo",{"_index":442,"title":{"classes/CourseTaskInfo.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["court",{"_index":3946,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4011,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3907,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3374,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2327,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":4171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":4172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":4174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3493,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4877,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":747,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1118,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1074,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1351,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcurrenttestuser",{"_index":3159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":979,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["createerrorresponse",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":3122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":727,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":3123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":734,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":716,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":750,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":733,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":754,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":729,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":1017,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":1045,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4885,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4642,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":461,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":4152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":713,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":514,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":465,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":792,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3536,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":334,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4633,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4703,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3217,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2635,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":772,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":774,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":247,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3839,"title":{},"body":{"license.html":{}}}],["current",{"_index":1283,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1027,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1077,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1121,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1120,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":568,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4763,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3694,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3960,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3698,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":337,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":990,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":4286,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3671,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3993,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2559,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":794,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":682,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1565,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1001,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:49",{"_index":1005,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:59",{"_index":1009,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1000,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4930,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1681,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":544,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":4210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1925,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1047,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":676,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":677,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":678,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":1041,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4664,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1680,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":852,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":856,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":867,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3348,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3627,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3975,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4733,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3800,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":804,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3321,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3617,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1422,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1795,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3987,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3443,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3943,"title":{},"body":{"license.html":{}}}],["define",{"_index":251,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":260,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3473,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":507,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":511,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":494,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1070,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1079,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1353,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1243,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":1078,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2410,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1138,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":2229,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4778,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3767,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3904,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4701,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":145,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":651,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3913,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":4800,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":4801,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":4907,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":120,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":4292,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3709,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3407,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3966,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":131,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1893,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1895,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3338,"title":{},"body":{"index.html":{}}}],["details",{"_index":115,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":4181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":4180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2424,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3739,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4941,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3326,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":4788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3432,"title":{},"body":{"license.html":{}}}],["development",{"_index":2482,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3387,"title":{},"body":{"index.html":{}}}],["di",{"_index":4592,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1548,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":4093,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3965,"title":{},"body":{"license.html":{}}}],["different",{"_index":2776,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3791,"title":{},"body":{"license.html":{}}}],["digits",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3602,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3714,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3497,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1710,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":4061,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":429,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3638,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3978,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3788,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4667,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4675,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":417,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":439,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3929,"title":{},"body":{"license.html":{}}}],["display",{"_index":3672,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1726,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":473,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3520,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2785,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":4811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":3969,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3400,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4028,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3932,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3471,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":4082,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":466,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/ResolvedUser.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2294,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":4191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":1906,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1030,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1626,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":4060,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":3219,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":258,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1691,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3741,"title":{},"body":{"license.html":{}}}],["down",{"_index":4781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":3855,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4663,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":1040,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4691,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":464,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1182,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1648,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1201,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1196,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1184,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1650,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1646,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1475,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1178,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1477,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1533,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1205,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":1483,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":1194,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":1481,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":1186,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1188,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":1654,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1208,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1190,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1192,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1180,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1210,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1203,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1199,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":1842,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":1128,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":784,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":4201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1605,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":2311,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":257,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3693,"title":{},"body":{"license.html":{}}}],["duration",{"_index":523,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":520,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2428,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3738,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3573,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1007,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":761,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":248,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":763,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":764,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1229,"title":{},"body":{"modules/NewsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2400,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3492,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":652,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":4008,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3635,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3618,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4026,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":4780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":3872,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4032,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1253,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1242,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4925,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4900,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":888,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4676,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4937,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3689,"title":{},"body":{"license.html":{}}}],["employer",{"_index":4039,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1335,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1322,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4693,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":790,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":786,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":800,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":3163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3512,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3451,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2507,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4946,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4954,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":1921,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2451,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3905,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4665,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3640,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3939,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3663,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3955,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":235,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":52,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":297,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/NewsRepo.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1567,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":255,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":311,"title":{},"body":{"interfaces/CacheEntry.html":{},"controllers/NewsController.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["entry.validuntil",{"_index":313,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["enum",{"_index":491,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{}}}],["enumeration",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":481,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1960,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":4068,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2483,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3593,"title":{},"body":{"license.html":{}}}],["err",{"_index":1812,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":858,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":555,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":728,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":619,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":130,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":119,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":767,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":757,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":347,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":327,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":756,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":104,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":739,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":289,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":725,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":124,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":3221,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":428,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":433,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":758,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3555,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":3037,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4768,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4769,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2891,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2655,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1991,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3399,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2388,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3491,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3571,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2389,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":550,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":722,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":717,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":719,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":752,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":813,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":721,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":715,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3728,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2216,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2591,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3897,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3596,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3948,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3548,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1230,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1235,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3503,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1789,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":530,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3873,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3636,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1698,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":957,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":923,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4727,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2522,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":842,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expect(data.length).tobe(0",{"_index":4911,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4874,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4910,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3745,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2615,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4668,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":841,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":933,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":654,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3587,"title":{},"body":{"license.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2622,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":4058,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":649,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3980,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":760,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3820,"title":{},"body":{"license.html":{}}}],["extend",{"_index":787,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3928,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":4151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3676,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3523,"title":{},"body":{"license.html":{}}}],["external",{"_index":2208,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":919,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":368,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":892,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":1828,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":1715,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":810,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":951,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3806,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":476,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2468,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":4797,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":3961,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3597,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4773,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":2171,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":114,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4947,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":2214,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4003,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3592,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":611,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3733,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3360,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3489,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4687,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":3294,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3742,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":185,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":592,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":183,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":181,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":617,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":3172,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":3174,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":3175,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":650,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":3176,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":3177,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":179,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":636,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":641,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":579,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":656,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2007,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3359,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3656,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4702,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1896,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":4057,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":1585,"title":{},"body":{"classes/Submission.html":{}}}],["filename",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":673,"title":{},"body":{"classes/FileTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":668,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":551,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1141,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1147,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1145,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1152,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1342,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":554,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1312,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1150,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4734,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3831,"title":{},"body":{"license.html":{}}}],["find",{"_index":639,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":640,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1071,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1082,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1245,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallassignedbyteacher",{"_index":1663,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallassignedbyteacher(userid",{"_index":1667,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforuser",{"_index":1344,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1355,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopen",{"_index":1740,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopen(currentuser",{"_index":1745,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenbystudent",{"_index":1664,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1669,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbyteacher",{"_index":1741,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenbyteacher(userid",{"_index":1747,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser",{"_index":1742,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1749,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbyid",{"_index":1505,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":317,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":1506,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":1510,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finding",{"_index":825,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1237,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1248,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":822,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":1072,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1087,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1238,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1250,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1345,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1357,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1566,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4752,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1863,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":889,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3983,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2059,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1914,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2381,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1149,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3578,"title":{},"body":{"license.html":{}}}],["fly",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4708,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4876,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3346,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2968,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1688,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3634,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4646,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":4148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenoptions",{"_index":1039,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["forbidnonwhitelisted",{"_index":807,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2465,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4936,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4912,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2996,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":562,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2677,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3684,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1002,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1003,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1570,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3396,"title":{},"body":{"license.html":{}}}],["framework",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3394,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3414,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3232,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4657,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4656,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1964,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3621,"title":{},"body":{"license.html":{}}}],["full",{"_index":2062,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":726,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":335,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3756,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3317,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2493,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3569,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2397,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4200,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1088,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1617,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":1839,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":645,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(selector",{"_index":310,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["getcourseofuser",{"_index":1665,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getcourseofuser(userid",{"_index":1671,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getentitypermissions",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":209,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":497,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getnewspermissions",{"_index":1346,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1359,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":581,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":583,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1320,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1347,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1362,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":663,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":660,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getsubmissionsbytask",{"_index":1595,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytask(task",{"_index":1598,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist",{"_index":1596,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist(tasks",{"_index":1600,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["gettargetfilters",{"_index":1348,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1365,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1800,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":1900,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":585,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":587,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":589,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":1878,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":1881,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":3381,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":3240,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":3264,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":3254,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3332,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1790,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":625,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3659,"title":{},"body":{"license.html":{}}}],["global",{"_index":342,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":674,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":553,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":776,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":902,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":679,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":779,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3389,"title":{},"body":{"license.html":{}}}],["go",{"_index":3345,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3376,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3464,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4683,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4927,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3780,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3465,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1573,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1574,"title":{},"body":{"classes/Submission.html":{}}}],["graded",{"_index":1737,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskUC.html":{}}}],["gradedusers",{"_index":1754,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradedusers.add(submission.student.id",{"_index":1764,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradedusers.size",{"_index":1770,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradefileids",{"_index":1575,"title":{},"body":{"classes/Submission.html":{}}}],["grant",{"_index":3801,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3582,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3850,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4046,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3710,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4020,"title":{},"body":{"license.html":{}}}],["group",{"_index":1709,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1690,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1339,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1713,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1132,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":4154,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4595,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guide",{"_index":4913,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1820,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1684,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":271,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2674,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":742,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":338,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4630,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":72,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["haspermissions",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3595,"title":{},"body":{"license.html":{}}}],["header",{"_index":930,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3450,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":4826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":2515,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":253,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3894,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":965,"title":{},"body":{"classes/LessonTaskInfo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4709,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4651,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2291,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3253,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3827,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3787,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1683,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":2050,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1587,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1614,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1699,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2393,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2561,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":4029,"title":{},"body":{"license.html":{}}}],["host",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":773,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3716,"title":{},"body":{"license.html":{}}}],["hot",{"_index":4083,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3734,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2487,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":121,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3398,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3329,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":4031,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":274,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4760,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4596,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":4915,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/mikro",{"_index":4696,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":1934,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4706,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4634,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":301,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":4063,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":116,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4764,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":843,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4950,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":815,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":829,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1450,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1452,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":4107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3919,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4770,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":561,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identify",{"_index":4794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":4926,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/RoleUC.html":{},"changelog.html":{}}}],["ierrortype",{"_index":276,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4720,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4729,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4722,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2747,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":952,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":850,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":634,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":973,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3554,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4597,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":925,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":541,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4647,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4924,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3942,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":657,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3885,"title":{},"body":{"license.html":{}}}],["imports",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3811,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3945,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1334,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3444,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4775,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3997,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4000,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3397,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3994,"title":{},"body":{"license.html":{}}}],["include",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3550,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3507,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2558,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3683,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":793,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3449,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3962,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3737,"title":{},"body":{"license.html":{}}}],["increase",{"_index":2099,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3807,"title":{},"body":{"license.html":{}}}],["independant",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4737,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":1832,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":4054,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexable",{"_index":294,"title":{},"body":{"interfaces/CacheEntry.html":{}}}],["indexed",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1969,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3853,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3818,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2184,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3485,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3748,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":4202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":66,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":826,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4714,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":413,"title":{},"body":{"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":353,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["info.entity.ts:10",{"_index":1856,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:11",{"_index":967,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:13",{"_index":672,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:15",{"_index":452,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":671,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:18",{"_index":451,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:22",{"_index":454,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:26",{"_index":458,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:29",{"_index":456,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:6",{"_index":670,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":355,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:8",{"_index":449,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/LessonTaskInfo.html":{}}}],["info.mapper",{"_index":1176,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1529,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1531,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1302,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1536,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1538,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1865,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1537,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3721,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":569,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3851,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3882,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3500,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":246,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["inital",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4746,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":980,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3876,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":4208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":648,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":1042,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1044,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":187,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":630,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":976,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["inner",{"_index":4784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":905,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":4914,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":3564,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3752,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3765,"title":{},"body":{"license.html":{}}}],["instance",{"_index":791,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":3083,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":2183,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3339,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3648,"title":{},"body":{"license.html":{}}}],["integration",{"_index":2052,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3417,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3639,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4034,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3957,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3515,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3519,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":528,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":529,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":515,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":350,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":328,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3695,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3869,"title":{},"body":{"license.html":{}}}],["interface",{"_index":290,"title":{"interfaces/CacheEntry.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{}},"body":{"interfaces/CacheEntry.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":948,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":292,"title":{},"body":{"interfaces/CacheEntry.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3757,"title":{},"body":{"license.html":{}}}],["internal",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4712,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":1037,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["internalservererrorexception",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":732,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":4007,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3561,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3576,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4681,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":631,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2963,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2926,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":4050,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3669,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4682,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":869,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":875,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":1549,"title":{},"body":{"modules/ServerModule.html":{}}}],["iroleproperties",{"_index":873,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":3584,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1154,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":746,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":487,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":469,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":741,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1155,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1160,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1430,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1427,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1420,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1156,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":77,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":4803,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1157,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1148,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1824,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1142,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1823,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1146,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1395,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":845,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":488,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":467,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":479,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":475,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":844,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2350,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":749,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":991,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionstatus",{"_index":1642,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["it's",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["it(\"should",{"_index":4802,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":4869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3534,"title":{},"body":{"license.html":{}}}],["items",{"_index":877,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3768,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":824,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":886,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["jest",{"_index":4078,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":3170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":4189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3353,"title":{},"body":{"index.html":{}}}],["job",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2862,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":2264,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":3235,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3218,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2464,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":765,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":3237,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":846,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4883,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":946,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":912,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":166,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":955,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":950,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":918,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":838,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":155,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1907,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3556,"title":{},"body":{"license.html":{}}}],["key",{"_index":1402,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":4130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3405,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3431,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3909,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3916,"title":{},"body":{"license.html":{}}}],["known",{"_index":2238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3363,"title":{},"body":{"index.html":{}}}],["language",{"_index":2782,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3677,"title":{},"body":{"license.html":{}}}],["last",{"_index":1864,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":890,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":3972,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":3201,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3502,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3476,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3880,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":4053,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1970,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":3239,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3242,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2730,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4036,"title":{},"body":{"license.html":{}}}],["lean",{"_index":3259,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["leave",{"_index":4099,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1788,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":626,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":4090,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":4212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3438,"title":{},"body":{"license.html":{}}}],["legend",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lern",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":3026,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1606,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonid",{"_index":1610,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":4207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":968,"title":{},"body":{"classes/LessonTaskInfo.html":{},"changelog.html":{}}}],["lessonschema",{"_index":3154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1696,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["lessontaskinfo",{"_index":963,"title":{"classes/LessonTaskInfo.html":{}},"body":{"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":4606,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3455,"title":{},"body":{"license.html":{}}}],["level",{"_index":2881,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":4799,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3790,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3499,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3547,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3729,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3388,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3480,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3481,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3483,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3411,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3854,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3798,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3848,"title":{},"body":{"license.html":{}}}],["limit",{"_index":871,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3991,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3981,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3789,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":431,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":4176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2149,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3574,"title":{},"body":{"license.html":{}}}],["links",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":4079,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":295,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3877,"title":{},"body":{"license.html":{}}}],["living",{"_index":4679,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":4066,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4692,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":2053,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3327,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4644,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2517,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":853,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":861,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":4080,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":527,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":535,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":769,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":766,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":753,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":971,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":996,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":348,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":329,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4754,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":340,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":522,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":536,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":532,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1708,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1689,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2771,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4615,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":4052,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3364,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":922,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3998,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4001,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4607,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1340,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4935,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3686,"title":{},"body":{"license.html":{}}}],["made",{"_index":3445,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2738,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":4072,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2693,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2611,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2872,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3552,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1050,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3612,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1822,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":2154,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4694,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":4056,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3895,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2425,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany('role",{"_index":881,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":2178,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1162,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1166,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4589,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4590,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1163,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1168,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":1883,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1114,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1623,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["mappers",{"_index":4882,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":4351,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1164,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1170,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1530,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1640,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":1472,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1858,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1165,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1172,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3940,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3796,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3805,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3478,"title":{},"body":{"license.html":{}}}],["master",{"_index":2347,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":570,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3599,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3769,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":2000,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1431,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1435,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1424,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1736,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskUC.html":{}}}],["maybe",{"_index":1024,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":4085,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":1845,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":1838,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":3813,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3384,"title":{},"body":{"index.html":{}}}],["means",{"_index":3475,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3620,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3631,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3644,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3657,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3535,"title":{},"body":{"license.html":{}}}],["member",{"_index":595,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":999,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3532,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3982,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3514,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1720,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":2132,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3865,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3586,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4919,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3284,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":653,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2444,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2725,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3244,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2990,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1231,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1233,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1010,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":4077,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1032,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1034,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1035,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1011,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":1563,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1018,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1033,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1012,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1804,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1432,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1433,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1434,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1423,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4613,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4940,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3316,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3795,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1968,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1333,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3245,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2524,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocha's",{"_index":4807,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":4835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2873,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":482,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1407,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3472,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3538,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3012,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3662,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3440,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3505,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":142,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4895,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4898,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4897,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":4173,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4621,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4616,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":4156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":4184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1014,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":144,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1550,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4627,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4625,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4626,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1556,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1558,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1554,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/entity",{"_index":1559,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":1555,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":3247,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1023,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":1020,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":1022,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1016,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":997,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":4848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1015,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":1564,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3266,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":2091,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3837,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4777,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4880,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1674,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":508,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":718,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2828,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":811,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":3382,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1093,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":4098,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3268,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3287,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3675,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1712,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2719,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3336,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3563,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1682,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":744,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":4089,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":4161,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":4163,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":4162,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2920,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":503,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":552,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":506,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3185,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":486,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":505,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":970,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3410,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":208,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newly",{"_index":4674,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":363,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1183,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1202,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1379,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1185,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1179,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":463,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1826,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":484,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":468,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":474,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1825,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":483,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":478,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1206,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1187,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1189,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1399,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1191,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1193,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1181,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":414,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1204,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1198,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:19",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":407,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":403,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":411,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1404,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4641,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4645,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1232,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1378,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1373,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1290,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1304,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1372,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1067,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1386,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":1083,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":1081,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1124,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1392,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1129,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1389,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1113,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1122,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1127,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1123,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1137,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1217,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1222,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1112,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1260,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstarget",{"_index":818,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1246,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":427,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":436,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":1107,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1397,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1384,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":430,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1809,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":545,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1711,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":3099,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3325,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3263,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3265,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2481,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3705,"title":{},"body":{"license.html":{}}}],["none",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1412,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":2236,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3732,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":4211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":3126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":591,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":1568,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3849,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3526,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3522,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3838,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3834,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3784,"title":{},"body":{"license.html":{}}}],["november",{"_index":3391,"title":{},"body":{"license.html":{}}}],["now",{"_index":543,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":547,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":1946,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":616,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["number",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/Submission.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3971,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":4123,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2570,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3334,"title":{},"body":{"index.html":{}}}],["o",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2541,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2297,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1271,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1449,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["object.assign(this",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":1403,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":141,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":490,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["objectid().tohexstring",{"_index":4209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid.isvalid(value",{"_index":1456,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4632,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":3952,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3718,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3622,"title":{},"body":{"license.html":{}}}],["observable",{"_index":534,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3704,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":720,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3846,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2359,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1716,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["of.ts",{"_index":4121,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3437,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3723,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3708,"title":{},"body":{"license.html":{}}}],["official",{"_index":3540,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1717,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4705,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":4786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2202,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":2999,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1004,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["once",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1393,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4612,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1702,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1703,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1008,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2606,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":2556,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4004,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3712,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4776,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3557,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3068,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2375,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3460,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3959,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4921,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2005,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4653,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4928,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1031,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4765,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4756,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1006,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1692,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1718,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3861,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3486,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":2263,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":3015,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1043,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4902,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm.io/docs/caching",{"_index":302,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["orm/core",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4697,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1013,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3344,"title":{},"body":{"index.html":{}}}],["others",{"_index":806,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":1029,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4603,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":4796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2679,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3605,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2691,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4878,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overlaps",{"_index":1721,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["overridden",{"_index":4758,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2636,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4886,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4894,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":549,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":341,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":4047,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":2165,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3891,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1286,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4624,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2672,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3668,"title":{},"body":{"license.html":{}}}],["packages",{"_index":4064,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3551,"title":{},"body":{"license.html":{}}}],["page",{"_index":1421,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1428,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":610,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1084,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4643,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1085,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1105,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1130,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1638,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":3272,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4033,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3824,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3901,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":2123,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1134,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1131,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":643,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1213,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1214,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1376,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1216,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1215,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1212,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2405,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2599,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4640,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1102,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":3202,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3488,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1819,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3544,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3513,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3579,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":3713,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3867,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4604,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":802,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1628,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":945,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":947,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":949,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"classes/Account.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1100,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1097,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3823,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3886,"title":{},"body":{"license.html":{}}}],["path",{"_index":667,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":4185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2555,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":492,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":942,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"changelog.html":{}}}],["payload.ts",{"_index":831,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":962,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":3933,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3719,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3722,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3377,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":2100,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3570,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3833,"title":{},"body":{"license.html":{}}}],["permission",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1417,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1416,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.includes('task_dashboard_teacher_view_v3",{"_index":1781,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions.includes('task_dashboard_view_v3",{"_index":1782,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions.refid",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3650,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3682,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3454,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1773,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3760,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2457,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4659,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2943,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4662,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":2035,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4755,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":4789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":1996,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3950,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4673,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3690,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3702,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3429,"title":{},"body":{"license.html":{}}}],["pin",{"_index":2021,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":782,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1898,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4594,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1453,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":1953,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":4648,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3223,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3871,"title":{},"body":{"license.html":{}}}],["point",{"_index":470,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":4027,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2937,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2420,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":959,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1094,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":3115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3726,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3699,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3666,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4006,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2376,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1075,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":4070,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3633,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3351,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3412,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3906,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":4916,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":4076,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3403,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3469,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4731,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3868,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4759,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":4805,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3537,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":1069,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["preload",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4939,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4938,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":984,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2516,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3530,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3792,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":256,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2551,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3870,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3424,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3935,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["primaryrolesearchoperation",{"_index":876,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":1489,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":4837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4707,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3835,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4923,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":526,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":3005,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":2317,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3342,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3753,"title":{},"body":{"license.html":{}}}],["process",{"_index":2721,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3924,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3560,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4751,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3691,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2308,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3936,"title":{},"body":{"license.html":{}}}],["program",{"_index":3419,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3643,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4040,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3545,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3430,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":4019,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3603,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3629,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3930,"title":{},"body":{"license.html":{}}}],["project",{"_index":1905,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3276,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2443,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3533,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3525,"title":{},"body":{"license.html":{}}}],["promise",{"_index":207,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise((resolve",{"_index":509,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1388,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":1522,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":1846,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":4857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3222,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3495,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3852,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3506,"title":{},"body":{"license.html":{}}}],["proper",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4920,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":1488,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":3323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":356,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":421,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":425,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":423,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.email",{"_index":900,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.firstname",{"_index":896,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["props.lastname",{"_index":898,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["props.name",{"_index":360,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.permissions",{"_index":883,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.roles",{"_index":885,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["props.school",{"_index":424,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.target",{"_index":426,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":419,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3433,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1794,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3613,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3655,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3773,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3986,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":517,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":988,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":982,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":339,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3785,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3829,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3974,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3976,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":501,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3797,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3462,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3647,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1151,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1265,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["publishedlessons",{"_index":1722,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pull",{"_index":2519,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3567,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3735,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3922,"title":{},"body":{"license.html":{}}}],["put",{"_index":3067,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4661,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2498,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3842,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3985,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1328,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1332,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":609,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1209,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1207,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1211,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4639,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1673,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1719,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.desc",{"_index":1723,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["querys",{"_index":1630,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3224,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1091,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":3687,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3911,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3776,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4689,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reason",{"_index":3920,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3700,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3840,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3427,"title":{},"body":{"license.html":{}}}],["received",{"_index":3670,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3856,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3926,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3759,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3918,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3484,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3541,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4952,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4945,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4943,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":655,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":3282,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":4023,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2075,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2430,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":2045,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4671,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":2973,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3423,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3474,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3283,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4678,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3954,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3781,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3667,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3580,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2592,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4713,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3828,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4695,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4932,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2321,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3606,"title":{},"body":{"license.html":{}}}],["release",{"_index":2015,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3466,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3456,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3660,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3467,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4652,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":4084,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3910,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3717,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3956,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3958,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3782,"title":{},"body":{"license.html":{}}}],["remove",{"_index":805,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3999,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2299,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":300,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1038,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4743,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":4073,"title":{},"body":{"todo.html":{}}}],["repo",{"_index":1521,"title":{},"body":{"injectables/RoleUC.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1371,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1224,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/submission.repo",{"_index":1661,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["repo/task.repo",{"_index":1660,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2824,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4772,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3331,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3750,"title":{},"body":{"license.html":{}}}],["req",{"_index":4888,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4890,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":628,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4908,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1798,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1569,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":909,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1805,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":2237,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":920,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":680,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":4190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":4188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":809,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1396,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3661,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3333,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":798,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3490,"title":{},"body":{"license.html":{}}}],["reset",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":1886,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":1890,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":1891,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":835,"title":{"classes/ResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":1470,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":1889,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyidlist",{"_index":1516,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":1519,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":1507,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":320,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1252,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":1848,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":1851,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resources",{"_index":4853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3637,"title":{},"body":{"license.html":{}}}],["respond",{"_index":4094,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4881,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4909,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":778,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4636,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3858,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4658,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":2003,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":4095,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":524,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1400,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3630,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3815,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2931,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":3169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3452,"title":{},"body":{"license.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3763,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1090,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":139,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1459,"title":{},"body":{"classes/ResolvedUser.html":{},"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4593,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3367,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":4010,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3963,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4677,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3096,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3434,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3289,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3984,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2629,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":298,"title":{"classes/Role.html":{}},"body":{"interfaces/CacheEntry.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":891,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":1486,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":1485,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":1525,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":1885,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolecache",{"_index":303,"title":{"classes/RoleCache.html":{}},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"coverage.html":{}}}],["roleidbasedsearches",{"_index":893,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@property",{"_index":1833,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":2743,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["roleinfo",{"_index":1466,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["rolerepo",{"_index":1502,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":833,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":1524,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":1484,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roles>permissions",{"_index":960,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["roleuc",{"_index":1514,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3766,"title":{},"body":{"license.html":{}}}],["room",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":252,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":4157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":4182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":499,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":3116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":2065,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3875,"title":{},"body":{"license.html":{}}}],["rss",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4699,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":2206,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1947,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":4817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1791,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3558,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":537,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":539,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":4025,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3884,"title":{},"body":{"license.html":{}}}],["same",{"_index":2614,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":596,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":4649,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["samplecontroller",{"_index":4831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4610,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleservice",{"_index":4832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4748,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2241,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":4062,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1239,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1256,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3715,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1917,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2902,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":2018,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":4197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":392,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolinfo.id",{"_index":1532,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1534,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1175,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1195,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1285,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":440,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":438,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":820,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":472,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":1935,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":512,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":647,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1262,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1263,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":658,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1266,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1409,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":972,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1306,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1317,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1319,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1315,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1313,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1321,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1406,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1383,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":604,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1092,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3565,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":3196,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2071,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":894,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@property({fieldname",{"_index":1835,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":4757,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3498,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3441,"title":{},"body":{"license.html":{}}}],["secret",{"_index":73,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":953,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3611,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3685,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1915,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["seeddata",{"_index":4809,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":4087,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":4069,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":1499,"title":{},"body":{"classes/RoleCache.html":{}}}],["self",{"_index":3107,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3899,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3883,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3477,"title":{},"body":{"license.html":{}}}],["send",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4721,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":565,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":2377,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":3187,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3725,"title":{},"body":{"license.html":{}}}],["separate",{"_index":978,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3358,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2401,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4736,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":1675,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["serialization",{"_index":4059,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2495,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":3293,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3328,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":513,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1551,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":4088,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1540,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":3127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4742,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1543,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":3024,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3553,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":600,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":607,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":4872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4629,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":603,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":593,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":638,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":646,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":642,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":665,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":666,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":627,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3989,"title":{},"body":{"license.html":{}}}],["session",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":907,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(permissions",{"_index":1526,"title":{},"body":{"injectables/RoleUC.html":{}}}],["setcontext",{"_index":989,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":4193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":2434,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1802,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":510,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":4150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2605,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":4192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":783,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":4195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":3616,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3415,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1933,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1104,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1619,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":1106,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":1103,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1159,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4598,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":57,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1259,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/pipes",{"_index":4622,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1323,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/utils",{"_index":4599,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4619,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4602,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2270,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":4041,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3751,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3343,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":4101,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simulates",{"_index":4903,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3949,"title":{},"body":{"license.html":{}}}],["single",{"_index":812,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":872,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":808,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":4092,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2563,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":4949,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":735,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3297,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":3077,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3395,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3736,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3594,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3608,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4917,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":4038,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4749,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4753,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1264,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["sortedsubmissions",{"_index":1755,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortedsubmissions.foreach((submission",{"_index":1759,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sorting",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":3167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortordermap",{"_index":4115,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortordervalue",{"_index":4117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"modules/CoreModule.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":1932,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1288,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3697,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3422,"title":{},"body":{"license.html":{}}}],["spec",{"_index":4145,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":4160,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":4165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3774,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3406,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2446,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4660,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3543,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3970,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1028,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3964,"title":{},"body":{"license.html":{}}}],["split",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":4868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4931,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":4167,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":4158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":282,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":540,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":4846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sso",{"_index":78,"title":{},"body":{"classes/Account.html":{}}}],["stabilisation",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":751,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3539,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3542,"title":{},"body":{"license.html":{}}}],["start",{"_index":3347,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1901,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":737,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2625,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2534,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3585,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3817,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":3108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":372,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3649,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1641,"title":{},"body":{"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1714,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3435,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":4782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":4666,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1049,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2219,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2037,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":3132,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":4143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":944,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":985,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1158,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":3300,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":632,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4951,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":987,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1576,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student_create",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["studentfiles",{"_index":1577,"title":{},"body":{"classes/Submission.html":{}}}],["studentid",{"_index":1583,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":446,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["studentsintaskscourse",{"_index":1767,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":3350,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3386,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":847,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sub.task",{"_index":1779,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subdividing",{"_index":3864,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3857,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3896,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3610,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1557,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.grade",{"_index":1761,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.gradecomment",{"_index":1762,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.gradefileids",{"_index":1763,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.task.id",{"_index":1701,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionrepo",{"_index":1593,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["submissions",{"_index":1590,"title":{},"body":{"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["submissions.filter((sub",{"_index":1778,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionschema",{"_index":3155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1693,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1700,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submitted",{"_index":1735,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskUC.html":{}}}],["submittedusers",{"_index":1753,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.add(submission.student.id",{"_index":1765,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.has(submission.student.id",{"_index":1760,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.size",{"_index":1769,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subprograms",{"_index":3575,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3706,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3746,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3862,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":455,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["substitutionteachers",{"_index":447,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{}}}],["succesful",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2832,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3457,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3908,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3754,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":4100,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":4051,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3777,"title":{},"body":{"license.html":{}}}],["support",{"_index":926,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":929,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":3013,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":927,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":3420,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3944,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3816,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4002,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4044,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1625,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swaggermodule.createdocument(app",{"_index":4203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":4204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1401,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2421,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2967,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":4948,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":2143,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3171,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3340,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2394,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":4149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3731,"title":{},"body":{"license.html":{}}}],["tap",{"_index":538,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":614,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.targetids",{"_index":1331,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1414,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1329,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1330,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":480,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":612,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetmodel",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1366,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1410,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":602,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":606,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1413,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":613,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":444,"title":{"classes/Task.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/ResolvedUser.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course.students.length",{"_index":1768,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.course?.color",{"_index":1651,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1649,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1652,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1647,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1589,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1644,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1645,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1653,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_view_v3",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["taskcontroller",{"_index":1615,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskentities",{"_index":1561,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskmapper",{"_index":1622,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1637,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["taskmodel",{"_index":4205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1546,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1657,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1624,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["tasks",{"_index":1602,"title":{},"body":{"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1636,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["taskschema",{"_index":3156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1635,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasksubmissions",{"_index":1752,"title":{},"body":{"injectables/TaskUC.html":{}}}],["tasksubmissions].sort((a",{"_index":1756,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskuc",{"_index":1620,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":1592,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["teacherids",{"_index":457,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["teachers",{"_index":448,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["team",{"_index":416,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":415,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews",{"_index":441,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":437,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":821,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["teardown",{"_index":4071,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":714,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3619,"title":{},"body":{"license.html":{}}}],["technology",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":3527,"title":{},"body":{"license.html":{}}}],["template",{"_index":759,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3583,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3822,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3841,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3832,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3819,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2399,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":500,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":516,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":496,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":498,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":4159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3369,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4688,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":4792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":4812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":4179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":911,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":504,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":4847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":4855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":4851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":4850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":4849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":4166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":4164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":249,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":2146,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4617,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4600,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4618,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":250,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3461,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2682,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":3642,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1326,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1324,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1341,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1327,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1815,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1338,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1336,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1337,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.aud",{"_index":928,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1398,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4715,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1377,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1415,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1411,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.cache",{"_index":308,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.cache[selector",{"_index":312,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.add(id",{"_index":319,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.add(name",{"_index":316,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.get(id",{"_index":318,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.cl1.get(name",{"_index":314,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.cl2.get(id",{"_index":321,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.code",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.computesubmissionmetadata(tasksubmissions",{"_index":1780,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.content",{"_index":420,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":777,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1444,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":422,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(coursetaskinfo",{"_index":1677,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":1697,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1695,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1706,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1272,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":1603,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1269,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":315,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":1875,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1261,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1273,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1270,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.email",{"_index":899,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":236,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":237,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":615,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":601,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":605,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4628,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findallopenbyteacher(userid",{"_index":1783,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallopenforuser(userid",{"_index":1784,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":322,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1268,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":895,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["this.getcourseofuser(userid",{"_index":1694,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1390,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1385,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1408,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":594,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.lastname",{"_index":897,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["this.limit",{"_index":1447,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1375,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4750,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1381,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1391,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1382,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4724,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1374,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4747,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":542,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":546,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":288,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1053,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":309,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1405,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1387,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1394,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1380,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1119,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1139,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1126,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1135,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1136,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":1052,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.permissions",{"_index":882,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.request.app",{"_index":661,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":1523,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles",{"_index":884,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":1888,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.skip",{"_index":1446,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.submissionrepo.getsubmissionsbytaskslist(tasks",{"_index":1776,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallassignedbyteacher(userid",{"_index":1775,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1774,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopen(currentuser",{"_index":1633,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1634,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":287,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1445,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4723,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":961,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4728,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":1887,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":4719,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4717,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":1854,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":3086,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3779,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2820,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":3516,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1806,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1814,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1813,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":3352,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3354,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":471,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"injectables/TaskUC.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":908,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(milliseconds",{"_index":1817,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1810,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1807,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":910,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1816,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2821,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1277,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":3304,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":63,"title":{"todo.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1144,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3568,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4741,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1437,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":859,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3803,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3802,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3804,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2382,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3517,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3758,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3860,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4690,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":795,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1451,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":799,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":3206,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":796,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":975,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4953,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3720,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4654,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3778,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3625,"title":{},"body":{"license.html":{}}}],["tries",{"_index":3031,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":3050,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":418,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtConstants.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":740,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":4067,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2974,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":931,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"interfaces/CacheEntry.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["type.interface.ts",{"_index":849,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":4103,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4918,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1303,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4922,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1911,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":3125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1133,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":432,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3743,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":633,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":4168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1687,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4591,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1108,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1621,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["uc/user.uc",{"_index":1853,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":3302,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":560,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":234,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4684,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":4793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":771,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":564,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2326,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3372,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3305,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":730,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":731,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3749,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4875,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3589,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3494,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3071,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3775,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":827,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1228,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4738,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3830,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":2175,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1073,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1368,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1095,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1300,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":1096,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":371,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":3061,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":823,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1254,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3298,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1591,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":4670,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4605,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":563,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":683,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3308,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2640,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":556,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1679,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedglobals",{"_index":681,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1019,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":4030,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":4144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"modules/AuthModule.html":{},"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4718,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.createdat",{"_index":1479,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["user.facade",{"_index":1871,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":1476,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.id",{"_index":1474,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":1478,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.ldapdn",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":599,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":4620,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":1482,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":597,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.test.js",{"_index":3370,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4614,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":1480,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/class",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/controller/dto",{"_index":837,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["user_already_exists",{"_index":4710,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4716,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4730,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":1836,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentities",{"_index":1562,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":938,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":206,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":608,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{}}}],["userinfo",{"_index":378,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo.firstname",{"_index":1860,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1859,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1861,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1177,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1197,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1200,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1279,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":154,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":1869,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":834,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4725,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1705,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["usertaskinfo",{"_index":453,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useruc",{"_index":1841,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":2895,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":518,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":635,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":2641,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2608,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":3047,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":4194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":4091,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":4096,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":803,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":904,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":940,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":85,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":95,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1899,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":781,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":789,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":349,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":127,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":140,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":96,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":330,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":788,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":489,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4601,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1455,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["validuntil",{"_index":299,"title":{},"body":{"interfaces/CacheEntry.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/CacheEntry.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/RoleCache.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":819,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":2074,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":2960,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1961,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3401,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":854,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":863,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":868,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4906,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4904,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":2096,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2140,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3418,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1460,"title":{},"body":{"classes/ResolvedUser.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1364,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3772,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3826,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":4075,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3349,"title":{},"body":{"index.html":{}}}],["void",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"classes/RoleCache.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3678,"title":{},"body":{"license.html":{}}}],["vor",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":924,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4271,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4944,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":4097,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4942,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3311,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3632,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4015,"title":{},"body":{"license.html":{}}}],["want",{"_index":3428,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":855,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":865,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1678,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3529,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3528,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4081,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1026,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3688,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":4035,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3337,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":4790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3866,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":977,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":3740,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":801,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":956,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3549,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3727,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3546,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":3447,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2660,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":3102,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2575,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3362,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3624,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3375,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3426,"title":{},"body":{"license.html":{}}}],["within",{"_index":272,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2502,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3357,"title":{},"body":{"index.html":{}}}],["work",{"_index":259,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3566,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4739,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":3006,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":4785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1143,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3898,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":4844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":4798,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":768,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":775,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":755,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":770,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3979,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3341,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":762,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":4178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3696,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":644,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskMapper.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3368,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3914,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4745,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lasttriedFailedLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/account.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: User})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/account.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/account.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\t// TODO not use partial see INewsProperties, use Object.assign for related entities only.\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { UserModule } from '../user';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheEntry.html":{"url":"interfaces/CacheEntry.html","title":"interface - CacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\ninterface CacheEntry {\n\t[name: string]: { value: Role; validUntil: number };\n}\n\n// TODO: replace with https://mikro-orm.io/docs/caching/\nexport class RoleCache {\n\tcache: CacheEntry;\n\n\tname: string;\n\n\tclearInterval: 60000;\n\n\tconstructor(name = '') {\n\t\tthis.cache = {};\n\t\tthis.name = name;\n\t}\n\n\tget(selector: string): Role | undefined {\n\t\tconst entry = this.cache[selector];\n\t\tif (!entry || entry.validUntil  {\n\t\tif (this.cl1.get(name)) {\n\t\t\treturn this.cl1.get(name) as Role;\n\t\t}\n\n\t\tconst role = await this.em.findOneOrFail(Role, { name });\n\t\tthis.cl1.add(name, role);\n\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tif (this.cl1.get(id)) {\n\t\t\treturn this.cl1.get(id) as Role;\n\t\t}\n\n\t\tconst role = await this.em.findOneOrFail(Role, { id });\n\t\tthis.cl1.add(id, role);\n\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tif (this.cl2.get(id)) {\n\t\t\treturn this.cl2.get(id) as Role;\n\t\t}\n\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseTaskInfo.html":{"url":"classes/CourseTaskInfo.html","title":"class - CourseTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : COURSE_DEFAULT_COLOR\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            substitutionTeachers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'substitutionIds', type: UserTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teachers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'teacherIds', type: UserTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\nexport const COURSE_DEFAULT_COLOR = '#ACACAC';\n\n@Entity({ tableName: 'courses' })\nexport class CourseTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string = COURSE_DEFAULT_COLOR;\n\n\t// TODO: @Property() ?\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t// TODO: combine teachers and substitutionTeachers\n\t@ManyToMany({ fieldName: 'teacherIds', type: UserTaskInfo })\n\tteachers = new Collection(this);\n\n\t@ManyToMany({ fieldName: 'substitutionIds', type: UserTaskInfo })\n\tsubstitutionTeachers = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DB_PASSWORD\n                                \n                                \n                                        DB_URL\n                                \n                                \n                                            Optional\n                                        DB_USERNAME\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        user\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         ResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResolvedUser } from '../../user/controller/dto';\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: ResolvedUser;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                        roles\n                                \n                                \n                                        school\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResolvedUser } from '../../user/controller/dto';\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: ResolvedUser;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { UserFacade } from '../../user';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// TODO: check jwt is whitelisted\n\t\t// TODO: use user module for:\n\t\t// TODO: --> check user exist/is active\n\t\t// TODO: --> populate roles>permissions\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser;\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { CourseTaskInfo } from './course-task-info.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: Omit)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Omit\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n/** options we not allow to pass as they are internally replaced by using the in memory mongo  */\ntype ForbiddenOptions = 'type' | 'driver' | 'clientUrl' | 'dbName' | 'user' | 'password';\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: Omit): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: IPagination = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: IPagination): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleInfo[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schoolId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport type RoleInfo = { name: string; id: string };\n/**\n * DTO for returning a task document via api.\n */\nexport class ResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: RoleInfo[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResolvedUser } from '../controller/dto';\nimport { User, Role } from '../entity';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/role.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/role.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityId[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleCache.html":{"url":"classes/RoleCache.html","title":"class - RoleCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                            \n                                clearInterval\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CacheEntry\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearInterval\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(selector: string, role: Role)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(selector: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Role | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\ninterface CacheEntry {\n\t[name: string]: { value: Role; validUntil: number };\n}\n\n// TODO: replace with https://mikro-orm.io/docs/caching/\nexport class RoleCache {\n\tcache: CacheEntry;\n\n\tname: string;\n\n\tclearInterval: 60000;\n\n\tconstructor(name = '') {\n\t\tthis.cache = {};\n\t\tthis.name = name;\n\t}\n\n\tget(selector: string): Role | undefined {\n\t\tconst entry = this.cache[selector];\n\t\tif (!entry || entry.validUntil  {\n\t\tif (this.cl1.get(name)) {\n\t\t\treturn this.cl1.get(name) as Role;\n\t\t}\n\n\t\tconst role = await this.em.findOneOrFail(Role, { name });\n\t\tthis.cl1.add(name, role);\n\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tif (this.cl1.get(id)) {\n\t\t\treturn this.cl1.get(id) as Role;\n\t\t}\n\n\t\tconst role = await this.em.findOneOrFail(Role, { id });\n\t\tthis.cl1.add(id, role);\n\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tif (this.cl2.get(id)) {\n\t\t\treturn this.cl2.get(id) as Role;\n\t\t}\n\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cl1\n                            \n                            \n                                cl2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolvePermissionsFromSubRolesById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cl1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleCache\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cl2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleCache\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/repo/role.repo.ts:46\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\ninterface CacheEntry {\n\t[name: string]: { value: Role; validUntil: number };\n}\n\n// TODO: replace with https://mikro-orm.io/docs/caching/\nexport class RoleCache {\n\tcache: CacheEntry;\n\n\tname: string;\n\n\tclearInterval: 60000;\n\n\tconstructor(name = '') {\n\t\tthis.cache = {};\n\t\tthis.name = name;\n\t}\n\n\tget(selector: string): Role | undefined {\n\t\tconst entry = this.cache[selector];\n\t\tif (!entry || entry.validUntil  {\n\t\tif (this.cl1.get(name)) {\n\t\t\treturn this.cl1.get(name) as Role;\n\t\t}\n\n\t\tconst role = await this.em.findOneOrFail(Role, { name });\n\t\tthis.cl1.add(name, role);\n\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tif (this.cl1.get(id)) {\n\t\t\treturn this.cl1.get(id) as Role;\n\t\t}\n\n\t\tconst role = await this.em.findOneOrFail(Role, { id });\n\t\tthis.cl1.add(id, role);\n\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tif (this.cl2.get(id)) {\n\t\t\treturn this.cl2.get(id) as Role;\n\t\t}\n\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolvePermissionsByIdList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { IPermissionsAndRoles } from '../entity';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\nimport { Task, LessonTaskInfo, CourseTaskInfo, Submission, FileTaskInfo, UserTaskInfo } from './modules/task/entity';\nimport { User, Role, Account } from './modules/user/entity';\n\nconst courseEntities = [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo];\nconst taskEntities = [Task, LessonTaskInfo, CourseTaskInfo, Submission, FileTaskInfo, UserTaskInfo];\nconst userEntities = [User, Role, Account];\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tUserModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [...courseEntities, ...taskEntities, ...userEntities],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFileIds\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradeComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradeFileIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo;\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number;\n\n\t@Property()\n\tgradeComment: string;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFileIds = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSubmissionsByTask\n                            \n                            \n                                    Async\n                                getSubmissionsByTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSubmissionsByTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSubmissionsByTasksList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTasksList(tasks: Task[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Counted } from '../../../shared/domain';\nimport { Submission, Task } from '../entity';\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getSubmissionsByTask(task: Task): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask,\n\t\t});\n\t\treturn [submissions, count];\n\t}\n\n\tasync getSubmissionsByTasksList(tasks: Task[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: tasks },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LessonTaskInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { CourseTaskInfo } from './course-task-info.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskMapper } from '../mapper/task.mapper';\n\nimport { TaskResponse } from './dto';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\t// const [tasks, total] = await this.taskUc.findAllOpen(currentUser, paginationQuery);\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task, status?: ISubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ISubmissionStatus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task, COURSE_DEFAULT_COLOR, ISubmissionStatus } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task, status?: ISubmissionStatus): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color || COURSE_DEFAULT_COLOR;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = status || {};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubmissionRepo\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\nimport { SubmissionRepo } from './repo/submission.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, SubmissionRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllAssignedByTeacher\n                            \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                            \n                                    Async\n                                getCourseOfUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAssignedByTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAssignedByTeacher(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourseOfUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseOfUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { Task, Submission, CourseTaskInfo, LessonTaskInfo } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// TODO: move to seperate repo\n\tasync getCourseOfUser(userId: EntityId): Promise {\n\t\tconst coursesOfUser = await this.em.find(CourseTaskInfo, {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\tstudents: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tteachers: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsubstitutionTeachers: userId,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\treturn coursesOfUser;\n\t}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst [coursesOfUser, submissionsOfStudent] = await Promise.all([\n\t\t\tthis.getCourseOfUser(userId),\n\t\t\tthis.em.find(Submission, { student: userId }),\n\t\t]);\n\n\t\tconst lessonsOfStudent = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: coursesOfUser },\n\t\t\thidden: false,\n\t\t});\n\n\t\t// TODO: filter via query ..exist not exist, orm return null ? Add test for it!\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.task.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfUser } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n\n\tasync findAllAssignedByTeacher(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// TODO: merge overlaps with findAllOpenByStudent\n\t\t// TODO: use Query Builder\n\t\tconst coursesOfUser = await this.getCourseOfUser(userId);\n\n\t\tconst publishedLessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: coursesOfUser },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst [usersTasks, count] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ course: { $in: coursesOfUser } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: publishedLessons } }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { createdAt: QueryOrder.DESC } }\n\t\t);\n\t\treturn [usersTasks, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus?: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computeSubmissionMetadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpen\n                            \n                            \n                                    Async\n                                findAllOpenByTeacher\n                            \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, submissionRepo: SubmissionRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionRepo\n                                                  \n                                                        \n                                                                        SubmissionRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpen(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeSubmissionMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/uc/task.uc.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task, Submission, ISubmissionStatus } from '../entity';\nimport { SubmissionRepo } from '../repo/submission.repo';\nimport { TaskMapper } from '../mapper/task.mapper';\nimport { TaskResponse } from '../controller/dto';\n\n// TODO: add time filter filter in uc\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo, private submissionRepo: SubmissionRepo) {}\n\n\t// TODO: move into seperate UC\n\tcomputeSubmissionMetadata = (taskSubmissions: Submission[], task: Task): ISubmissionStatus => {\n\t\tconst submittedUsers = new Set();\n\t\tconst gradedUsers = new Set();\n\n\t\tconst sortedSubmissions = [...taskSubmissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt > b.createdAt) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn -1;\n\t\t});\n\n\t\tsortedSubmissions.forEach((submission) => {\n\t\t\tif (\n\t\t\t\t!submittedUsers.has(submission.student.id) &&\n\t\t\t\t(submission.grade || submission.gradeComment || submission.gradeFileIds)\n\t\t\t) {\n\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t}\n\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t});\n\t\t// TODO: consider coursegroups\n\t\tconst studentsInTasksCourse = task.course.students.length;\n\n\t\treturn {\n\t\t\tsubmitted: submittedUsers.size,\n\t\t\tmaxSubmissions: studentsInTasksCourse,\n\t\t\tgraded: gradedUsers.size,\n\t\t};\n\t};\n\n\t// TODO by Students\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n\n\tasync findAllOpenByTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst [tasks, total] = await this.taskRepo.findAllAssignedByTeacher(userId, pagination);\n\t\tconst [submissions] = await this.submissionRepo.getSubmissionsByTasksList(tasks);\n\n\t\tconst computedTasks = tasks.map((task) => {\n\t\t\tconst taskSubmissions = submissions.filter((sub) => sub.task === task);\n\t\t\treturn TaskMapper.mapToResponse(task, this.computeSubmissionMetadata(taskSubmissions, task));\n\t\t});\n\t\treturn [computedTasks, total];\n\t}\n\n\tasync findAllOpen(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\t// TODO: get permissions\n\t\tconst { roles } = currentUser;\n\t\tconst { userId } = currentUser;\n\t\tconst permissions = [''] as string[];\n\t\tif (!permissions.includes('TASK_DASHBOARD_TEACHER_VIEW_V3') && !permissions.includes('TASK_DASHBOARD_VIEW_V3')) {\n\t\t\tthrow new UnauthorizedException();\n\t\t\t// return [[], 0];\n\t\t}\n\n\t\tlet response: Counted;\n\t\tif (permissions.includes('TASK_DASHBOARD_TEACHER_VIEW_V3')) {\n\t\t\tresponse = await this.findAllOpenByTeacher(userId, pagination);\n\t\t} else {\n\t\t\tconst [tasks, total] = await this.findAllOpenForUser(userId, pagination);\n\t\t\tconst computedTasks = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\t\tresponse = [computedTasks, total];\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : REQUEST_TIMEOUT\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityId[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Index({name: 'roleIdBasedSearches'})@Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            me\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolveUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserUC } from './uc/user.uc';\nimport { ICurrentUser } from '../authentication/interface/jwt-payload';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { User } from '../entity';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserWithPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n26.2.2 - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n26.2.1 - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n26.2.0 - 2021-06-01\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                21 %\n                (5/23)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                21 %\n                (5/23)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                21 %\n                (5/23)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            class\n            CourseTaskInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            variable\n            COURSE_DEFAULT_COLOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            class\n            RoleCache\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            interface\n            CacheEntry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            courseEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            taskEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            userEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/sorting.ts\n            \n            variable\n            SortOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.7.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages.\n\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            ForbiddenOptions   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../role.entity.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../status.type.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RoleInfo   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../sorting.ts)\n                        \n                        \n                            SortOrderValue   (apps/.../sorting.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n    \n        \n            \n                \n                    \n                    ForbiddenOptions\n                \n            \n            \n                \n                    options we not allow to pass as they are internally replaced by using the in memory mongo  \n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    apps/server/src/modules/user/entity/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/status.type.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    RoleInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/sorting.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortOrderValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../constants.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            COURSE_DEFAULT_COLOR   (apps/.../course-task-info.entity.ts)\n                        \n                        \n                            courseEntities   (apps/.../server.module.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../constants.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskEntities   (apps/.../server.module.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                            userEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/controller/swagger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                        \n                    \n\n                \n                    \n                        \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableOpenApiDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/entity/course-task-info.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COURSE_DEFAULT_COLOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#ACACAC'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/server.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            courseEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [Task, LessonTaskInfo, CourseTaskInfo, Submission, FileTaskInfo, UserTaskInfo]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [User, Role, Account]\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createCurrentTestUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst schoolId = new ObjectId().toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school: schoolId });\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId: user.id, roles: roleIds, schoolId, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTestModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/domain/interface/sorting.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tasc: 'asc',\n\tdesc: 'desc',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            usedGlobals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalConstants\n\n                        \n                    \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : usedGlobals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead. \n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
